[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:addPlan]Added plan: 
SimpleTask{
 State: (id_289[au](INACTIVE): state(INACTIVE)) (inf)
  C1{
   State: (id_329[au](INACTIVE): state(INACTIVE)) (inf)
  }
  C2{
   State: (id_368[au](INACTIVE): state(INACTIVE)) (inf)
  }
  C3{
   State: (id_406[au](INACTIVE): state(INACTIVE)) (inf)
  }
  C4{
   State: (id_444[au](INACTIVE): state(INACTIVE)) (inf)
  }
}

[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 1
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 1
[PlexilExec:step][1:0] State change queue: SimpleTask 
[PlexilExec:lock]Locking node SimpleTask
[PlexilExec:step][1:0:0] Transitioning node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:unlock]Unlocking node SimpleTask
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 2
[PlexilExec:step][1:1] State change queue: SimpleTask 
[PlexilExec:lock]Locking node SimpleTask
[PlexilExec:step][1:1:0] Transitioning node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node C1
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:notifyNodeConditionChanged] for node C3
[PlexilExec:notifyNodeConditionChanged] for node C4
[PlexilExec:handleNeedsExecution]Storing action for node 'SimpleTask' of type 'NodeList' to be executed.
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:unlock]Unlocking node SimpleTask
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C1' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C1' on the state change queue in position 3
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 4
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C3' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C3' on the state change queue in position 5
[PlexilExec:handleConditionsChanged]Node C4 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C4' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C4' on the state change queue in position 6
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'SimpleTask' was previously eligible to transition but isn't now.
[PlexilExec:step][1:2] State change queue: C1 C2 C3 C4 
[PlexilExec:lock]Locking node C1
[PlexilExec:lock]Locking node C2
[PlexilExec:lock]Locking node C3
[PlexilExec:lock]Locking node C4
[PlexilExec:step][1:2:0] Transitioning node C1
[PlexilExec:notifyNodeConditionChanged] for node C1
[PlexilExec:step][1:2:1] Transitioning node C2
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:step][1:2:2] Transitioning node C3
[PlexilExec:notifyNodeConditionChanged] for node C3
[PlexilExec:step][1:2:3] Transitioning node C4
[PlexilExec:notifyNodeConditionChanged] for node C4
[PlexilExec:unlock]Unlocking node C1
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:unlock]Unlocking node C3
[PlexilExec:unlock]Unlocking node C4
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C1' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C1' on the state change queue in position 7
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C2' was previously eligible to transition but isn't now.
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C3' was previously eligible to transition but isn't now.
[PlexilExec:handleConditionsChanged]Node C4 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C4' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C4' on the state change queue in position 8
[PlexilExec:step][1:3] State change queue: C1 C4 
[PlexilExec:lock]Locking node C1
[PlexilExec:lock]Locking node C4
[PlexilExec:step][1:3:0] Transitioning node C1
[PlexilExec:notifyNodeConditionChanged] for node C1
[PlexilExec:handleNeedsExecution]Storing action for node 'C1' of type 'Command' to be executed.
[PlexilExec:step][1:3:1] Transitioning node C4
[PlexilExec:notifyNodeConditionChanged] for node C4
[PlexilExec:handleNeedsExecution]Storing action for node 'C4' of type 'Command' to be executed.
[PlexilExec:unlock]Unlocking node C1
[PlexilExec:unlock]Unlocking node C4
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C1' was previously eligible to transition but isn't now.
[PlexilExec:handleConditionsChanged]Node C4 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C4' was previously eligible to transition but isn't now.
[Test:testOutput]Executing c1(20) into returnValue (id_364[au](-1): int) with ack anonymous (id_516[au](UNKNOWN): string)
[Test:testOutput]Permission to execute c4 has been denied by the resource arbiter.
[PlexilExec:notifyNodeConditionChanged] for node C4
[PlexilExec:cycle]==>End cycle 1
[PlexilExec:printPlan]
SimpleTask{
 State: (id_289[au](EXECUTING): state(EXECUTING)) (0)
 SkipCondition: Boolean constant false (id_324[au](0): boolean)
 StartCondition: Boolean constant true (id_325[au](1): boolean)
 EndCondition: (id_483[au](0): childrenFinished(0:4))
 InvariantCondition: Boolean constant true (id_325[au](1): boolean)
 PreCondition: Boolean constant true (id_325[au](1): boolean)
 PostCondition: Boolean constant true (id_325[au](1): boolean)
 RepeatCondition: Boolean constant false (id_324[au](0): boolean)
 AncestorInvariantCondition: Boolean constant true (id_325[au](1): boolean)
 AncestorEndCondition: Boolean constant false (id_324[au](0): boolean)
 ParentExecutingCondition: Boolean constant true (id_325[au](1): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_480[iu](UNKNOWN): childrenWaitingOrFinished(0:4))
 AbortCompleteCondition: Boolean constant unknown (id_326[au](UNKNOWN): boolean)
 ParentWaitingCondition: Boolean constant false (id_324[au](0): boolean)
 ParentFinishedCondition: Boolean constant false (id_324[au](0): boolean)
 CommandHandleReceivedCondition: Boolean constant true (id_325[au](1): boolean)
  C1{
   State: (id_329[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: Boolean constant false (id_324[au](0): boolean)
   StartCondition: Boolean constant true (id_325[au](1): boolean)
   EndCondition: (id_523[au](0): ((id_517[au](0): interruptibleCommandHandleValues(anonymous (id_516[au](UNKNOWN): string))) || (id_521[au](0): ((id_519[au](0): isknown(anonymous (id_516[au](UNKNOWN): string))) && (id_507[au](0): (IntegerValue (id_509[au](10): int) == returnValue (id_364[au](-1): int)))))
   InvariantCondition: Boolean constant true (id_325[au](1): boolean)
   PreCondition: Boolean constant true (id_325[au](1): boolean)
   PostCondition: (id_510[au](UNKNOWN): (id_513[au](UNKNOWN): ((id_332[au](UNKNOWN):  command_handle) == (id_512[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: Boolean constant false (id_324[au](0): boolean)
   AncestorInvariantCondition: (id_490[au](1): (TransparentWrapper(id_486[auT]{1}(Boolean constant true (id_325[au](1): boolean)) && TransparentWrapper(id_488[auT]{1}(Boolean constant true (id_325[au](1): boolean)))
   AncestorEndCondition: (id_496[iu](UNKNOWN): (TransparentWrapper(id_492[iuT]{0}(Boolean constant false (id_324[au](0): boolean)) || TransparentWrapper(id_494[iuT]{0}((id_483[au](0): childrenFinished(0:4))))
   ParentExecutingCondition: (id_499[iu](UNKNOWN): ((id_289[au](EXECUTING): state(EXECUTING)) == (id_498[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: Boolean constant unknown (id_326[au](UNKNOWN): boolean)
   AbortCompleteCondition: anonymous (id_515[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_502[iu](UNKNOWN): ((id_289[au](EXECUTING): state(EXECUTING)) == (id_501[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_505[iu](UNKNOWN): ((id_289[au](EXECUTING): state(EXECUTING)) == (id_504[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_525[au](0): allCommandHandleValues(anonymous (id_516[au](UNKNOWN): string)))
   Command handle: (id_332[au](UNKNOWN):  command_handle)
   head_priority: head_priority (id_365[au](20): int)
   returnValue: returnValue (id_364[au](-1): int)
  }
  C2{
   State: (id_368[au](WAITING): state(WAITING)) (0)
   SkipCondition: Boolean constant false (id_324[au](0): boolean)
   StartCondition: (id_555[au](UNKNOWN): (id_558[au](UNKNOWN): ((id_407[au](UNKNOWN):  outcome) == (id_557[au](SUCCESS):  outcome))))
   EndCondition: (id_568[iu](UNKNOWN): ((id_562[iu](UNKNOWN): interruptibleCommandHandleValues(anonymous (id_561[iu](UNKNOWN): string))) || (id_566[iu](UNKNOWN): ((id_564[iu](UNKNOWN): isknown(anonymous (id_561[iu](UNKNOWN): string))) && Boolean constant true (id_325[au](1): boolean)))
   InvariantCondition: Boolean constant true (id_325[au](1): boolean)
   PreCondition: Boolean constant true (id_325[au](1): boolean)
   PostCondition: (id_550[iu](UNKNOWN): (id_553[iu](UNKNOWN): ((id_371[au](UNKNOWN):  command_handle) == (id_552[iu](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: Boolean constant false (id_324[au](0): boolean)
   AncestorInvariantCondition: (id_536[au](1): (TransparentWrapper(id_532[auT]{1}(Boolean constant true (id_325[au](1): boolean)) && TransparentWrapper(id_534[auT]{1}(Boolean constant true (id_325[au](1): boolean)))
   AncestorEndCondition: (id_542[au](0): (TransparentWrapper(id_538[auT]{0}(Boolean constant false (id_324[au](0): boolean)) || TransparentWrapper(id_540[auT]{0}((id_483[au](0): childrenFinished(0:4))))
   ParentExecutingCondition: (id_544[iu](UNKNOWN): ((id_289[au](EXECUTING): state(EXECUTING)) == (id_498[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: Boolean constant unknown (id_326[au](UNKNOWN): boolean)
   AbortCompleteCondition: anonymous (id_560[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_546[iu](UNKNOWN): ((id_289[au](EXECUTING): state(EXECUTING)) == (id_501[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_548[iu](UNKNOWN): ((id_289[au](EXECUTING): state(EXECUTING)) == (id_504[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_570[iu](UNKNOWN): allCommandHandleValues(anonymous (id_561[iu](UNKNOWN): string)))
   Command handle: (id_371[au](UNKNOWN):  command_handle)
   v_priority2: v_priority2 (id_403[iu](25): int)
  }
  C3{
   State: (id_406[au](WAITING): state(WAITING)) (0)
   SkipCondition: Boolean constant false (id_324[au](0): boolean)
   StartCondition: (id_600[au](UNKNOWN): (id_603[au](UNKNOWN): ((id_330[au](UNKNOWN):  outcome) == (id_602[au](SUCCESS):  outcome))))
   EndCondition: (id_613[iu](UNKNOWN): ((id_607[iu](UNKNOWN): interruptibleCommandHandleValues(anonymous (id_606[iu](UNKNOWN): string))) || (id_611[iu](UNKNOWN): ((id_609[iu](UNKNOWN): isknown(anonymous (id_606[iu](UNKNOWN): string))) && Boolean constant true (id_325[au](1): boolean)))
   InvariantCondition: Boolean constant true (id_325[au](1): boolean)
   PreCondition: Boolean constant true (id_325[au](1): boolean)
   PostCondition: (id_595[iu](UNKNOWN): (id_598[iu](UNKNOWN): ((id_409[au](UNKNOWN):  command_handle) == (id_597[iu](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: Boolean constant false (id_324[au](0): boolean)
   AncestorInvariantCondition: (id_581[au](1): (TransparentWrapper(id_577[auT]{1}(Boolean constant true (id_325[au](1): boolean)) && TransparentWrapper(id_579[auT]{1}(Boolean constant true (id_325[au](1): boolean)))
   AncestorEndCondition: (id_587[au](0): (TransparentWrapper(id_583[auT]{0}(Boolean constant false (id_324[au](0): boolean)) || TransparentWrapper(id_585[auT]{0}((id_483[au](0): childrenFinished(0:4))))
   ParentExecutingCondition: (id_589[iu](UNKNOWN): ((id_289[au](EXECUTING): state(EXECUTING)) == (id_498[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: Boolean constant unknown (id_326[au](UNKNOWN): boolean)
   AbortCompleteCondition: anonymous (id_605[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_591[iu](UNKNOWN): ((id_289[au](EXECUTING): state(EXECUTING)) == (id_501[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_593[iu](UNKNOWN): ((id_289[au](EXECUTING): state(EXECUTING)) == (id_504[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_615[iu](UNKNOWN): allCommandHandleValues(anonymous (id_606[iu](UNKNOWN): string)))
   Command handle: (id_409[au](UNKNOWN):  command_handle)
   mem_priority2: mem_priority2 (id_441[iu](30): int)
  }
  C4{
   State: (id_444[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: Boolean constant false (id_324[au](0): boolean)
   StartCondition: Boolean constant true (id_325[au](1): boolean)
   EndCondition: (id_654[au](1): ((id_648[au](1): interruptibleCommandHandleValues(anonymous (id_647[au](COMMAND_DENIED): string))) || (id_652[au](1): ((id_650[au](1): isknown(anonymous (id_647[au](COMMAND_DENIED): string))) && Boolean constant true (id_325[au](1): boolean)))
   InvariantCondition: Boolean constant true (id_325[au](1): boolean)
   PreCondition: Boolean constant true (id_325[au](1): boolean)
   PostCondition: (id_641[au](UNKNOWN): (id_644[au](UNKNOWN): ((id_447[au](UNKNOWN):  command_handle) == (id_643[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: Boolean constant false (id_324[au](0): boolean)
   AncestorInvariantCondition: (id_627[au](1): (TransparentWrapper(id_623[auT]{1}(Boolean constant true (id_325[au](1): boolean)) && TransparentWrapper(id_625[auT]{1}(Boolean constant true (id_325[au](1): boolean)))
   AncestorEndCondition: (id_633[iu](UNKNOWN): (TransparentWrapper(id_629[iuT]{0}(Boolean constant false (id_324[au](0): boolean)) || TransparentWrapper(id_631[iuT]{0}((id_483[au](0): childrenFinished(0:4))))
   ParentExecutingCondition: (id_635[iu](UNKNOWN): ((id_289[au](EXECUTING): state(EXECUTING)) == (id_498[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: Boolean constant unknown (id_326[au](UNKNOWN): boolean)
   AbortCompleteCondition: anonymous (id_646[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_637[iu](UNKNOWN): ((id_289[au](EXECUTING): state(EXECUTING)) == (id_501[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_639[iu](UNKNOWN): ((id_289[au](EXECUTING): state(EXECUTING)) == (id_504[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_656[au](1): allCommandHandleValues(anonymous (id_647[au](COMMAND_DENIED): string)))
   Command handle: (id_447[au](UNKNOWN):  command_handle)
   mem_priority2: mem_priority2 (id_479[au](30): int)
  }
}

[Test:testOutput]Sending command ACK c1(20) = (string)COMMAND_SENT_TO_SYSTEM
[PlexilExec:notifyNodeConditionChanged] for node C1
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 2
[PlexilExec:notifyNodeConditionChanged] for node C4
[PlexilExec:handleConditionsChanged]Node C4 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C4' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C4' on the state change queue in position 9
[PlexilExec:notifyNodeConditionChanged] for node C1
[PlexilExec:step][2:0] State change queue: C4 
[PlexilExec:lock]Locking node C4
[PlexilExec:step][2:0:0] Transitioning node C4
[PlexilExec:notifyNodeConditionChanged] for node C4
[PlexilExec:unlock]Unlocking node C4
[PlexilExec:handleConditionsChanged]Node C4 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C4' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C4' on the state change queue in position 10
[PlexilExec:step][2:1] State change queue: C4 
[PlexilExec:lock]Locking node C4
[PlexilExec:step][2:1:0] Transitioning node C4
[PlexilExec:notifyNodeConditionChanged] for node C4
[PlexilExec:unlock]Unlocking node C4
[PlexilExec:handleConditionsChanged]Node C4 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C4' was previously eligible to transition but isn't now.
[PlexilExec:cycle]==>End cycle 2
[PlexilExec:printPlan]
SimpleTask{
 State: (id_289[au](EXECUTING): state(EXECUTING)) (0)
 SkipCondition: Boolean constant false (id_324[au](0): boolean)
 StartCondition: Boolean constant true (id_325[au](1): boolean)
 EndCondition: (id_483[au](0): childrenFinished(1:4))
 InvariantCondition: Boolean constant true (id_325[au](1): boolean)
 PreCondition: Boolean constant true (id_325[au](1): boolean)
 PostCondition: Boolean constant true (id_325[au](1): boolean)
 RepeatCondition: Boolean constant false (id_324[au](0): boolean)
 AncestorInvariantCondition: Boolean constant true (id_325[au](1): boolean)
 AncestorEndCondition: Boolean constant false (id_324[au](0): boolean)
 ParentExecutingCondition: Boolean constant true (id_325[au](1): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_480[iu](UNKNOWN): childrenWaitingOrFinished(0:4))
 AbortCompleteCondition: Boolean constant unknown (id_326[au](UNKNOWN): boolean)
 ParentWaitingCondition: Boolean constant false (id_324[au](0): boolean)
 ParentFinishedCondition: Boolean constant false (id_324[au](0): boolean)
 CommandHandleReceivedCondition: Boolean constant true (id_325[au](1): boolean)
  C1{
   State: (id_329[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: Boolean constant false (id_324[au](0): boolean)
   StartCondition: Boolean constant true (id_325[au](1): boolean)
   EndCondition: (id_523[au](0): ((id_517[au](0): interruptibleCommandHandleValues(anonymous (id_516[au](COMMAND_SENT_TO_SYSTEM): string))) || (id_521[au](0): ((id_519[au](1): isknown(anonymous (id_516[au](COMMAND_SENT_TO_SYSTEM): string))) && (id_507[au](0): (IntegerValue (id_509[au](10): int) == returnValue (id_364[au](-1): int)))))
   InvariantCondition: Boolean constant true (id_325[au](1): boolean)
   PreCondition: Boolean constant true (id_325[au](1): boolean)
   PostCondition: (id_510[au](1): (id_513[au](1): ((id_332[au](COMMAND_SENT_TO_SYSTEM):  command_handle) == (id_512[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: Boolean constant false (id_324[au](0): boolean)
   AncestorInvariantCondition: (id_490[au](1): (TransparentWrapper(id_486[auT]{1}(Boolean constant true (id_325[au](1): boolean)) && TransparentWrapper(id_488[auT]{1}(Boolean constant true (id_325[au](1): boolean)))
   AncestorEndCondition: (id_496[iu](UNKNOWN): (TransparentWrapper(id_492[iuT]{0}(Boolean constant false (id_324[au](0): boolean)) || TransparentWrapper(id_494[iuT]{0}((id_483[au](0): childrenFinished(1:4))))
   ParentExecutingCondition: (id_499[iu](UNKNOWN): ((id_289[au](EXECUTING): state(EXECUTING)) == (id_498[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: Boolean constant unknown (id_326[au](UNKNOWN): boolean)
   AbortCompleteCondition: anonymous (id_515[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_502[iu](UNKNOWN): ((id_289[au](EXECUTING): state(EXECUTING)) == (id_501[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_505[iu](UNKNOWN): ((id_289[au](EXECUTING): state(EXECUTING)) == (id_504[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_525[au](1): allCommandHandleValues(anonymous (id_516[au](COMMAND_SENT_TO_SYSTEM): string)))
   Command handle: (id_332[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   head_priority: head_priority (id_365[au](20): int)
   returnValue: returnValue (id_364[au](-1): int)
  }
  C2{
   State: (id_368[au](WAITING): state(WAITING)) (0)
   SkipCondition: Boolean constant false (id_324[au](0): boolean)
   StartCondition: (id_555[au](UNKNOWN): (id_558[au](UNKNOWN): ((id_407[au](UNKNOWN):  outcome) == (id_557[au](SUCCESS):  outcome))))
   EndCondition: (id_568[iu](UNKNOWN): ((id_562[iu](UNKNOWN): interruptibleCommandHandleValues(anonymous (id_561[iu](UNKNOWN): string))) || (id_566[iu](UNKNOWN): ((id_564[iu](UNKNOWN): isknown(anonymous (id_561[iu](UNKNOWN): string))) && Boolean constant true (id_325[au](1): boolean)))
   InvariantCondition: Boolean constant true (id_325[au](1): boolean)
   PreCondition: Boolean constant true (id_325[au](1): boolean)
   PostCondition: (id_550[iu](UNKNOWN): (id_553[iu](UNKNOWN): ((id_371[au](UNKNOWN):  command_handle) == (id_552[iu](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: Boolean constant false (id_324[au](0): boolean)
   AncestorInvariantCondition: (id_536[au](1): (TransparentWrapper(id_532[auT]{1}(Boolean constant true (id_325[au](1): boolean)) && TransparentWrapper(id_534[auT]{1}(Boolean constant true (id_325[au](1): boolean)))
   AncestorEndCondition: (id_542[au](0): (TransparentWrapper(id_538[auT]{0}(Boolean constant false (id_324[au](0): boolean)) || TransparentWrapper(id_540[auT]{0}((id_483[au](0): childrenFinished(1:4))))
   ParentExecutingCondition: (id_544[iu](UNKNOWN): ((id_289[au](EXECUTING): state(EXECUTING)) == (id_498[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: Boolean constant unknown (id_326[au](UNKNOWN): boolean)
   AbortCompleteCondition: anonymous (id_560[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_546[iu](UNKNOWN): ((id_289[au](EXECUTING): state(EXECUTING)) == (id_501[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_548[iu](UNKNOWN): ((id_289[au](EXECUTING): state(EXECUTING)) == (id_504[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_570[iu](UNKNOWN): allCommandHandleValues(anonymous (id_561[iu](UNKNOWN): string)))
   Command handle: (id_371[au](UNKNOWN):  command_handle)
   v_priority2: v_priority2 (id_403[iu](25): int)
  }
  C3{
   State: (id_406[au](WAITING): state(WAITING)) (0)
   SkipCondition: Boolean constant false (id_324[au](0): boolean)
   StartCondition: (id_600[au](UNKNOWN): (id_603[au](UNKNOWN): ((id_330[au](UNKNOWN):  outcome) == (id_602[au](SUCCESS):  outcome))))
   EndCondition: (id_613[iu](UNKNOWN): ((id_607[iu](UNKNOWN): interruptibleCommandHandleValues(anonymous (id_606[iu](UNKNOWN): string))) || (id_611[iu](UNKNOWN): ((id_609[iu](UNKNOWN): isknown(anonymous (id_606[iu](UNKNOWN): string))) && Boolean constant true (id_325[au](1): boolean)))
   InvariantCondition: Boolean constant true (id_325[au](1): boolean)
   PreCondition: Boolean constant true (id_325[au](1): boolean)
   PostCondition: (id_595[iu](UNKNOWN): (id_598[iu](UNKNOWN): ((id_409[au](UNKNOWN):  command_handle) == (id_597[iu](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: Boolean constant false (id_324[au](0): boolean)
   AncestorInvariantCondition: (id_581[au](1): (TransparentWrapper(id_577[auT]{1}(Boolean constant true (id_325[au](1): boolean)) && TransparentWrapper(id_579[auT]{1}(Boolean constant true (id_325[au](1): boolean)))
   AncestorEndCondition: (id_587[au](0): (TransparentWrapper(id_583[auT]{0}(Boolean constant false (id_324[au](0): boolean)) || TransparentWrapper(id_585[auT]{0}((id_483[au](0): childrenFinished(1:4))))
   ParentExecutingCondition: (id_589[iu](UNKNOWN): ((id_289[au](EXECUTING): state(EXECUTING)) == (id_498[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: Boolean constant unknown (id_326[au](UNKNOWN): boolean)
   AbortCompleteCondition: anonymous (id_605[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_591[iu](UNKNOWN): ((id_289[au](EXECUTING): state(EXECUTING)) == (id_501[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_593[iu](UNKNOWN): ((id_289[au](EXECUTING): state(EXECUTING)) == (id_504[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_615[iu](UNKNOWN): allCommandHandleValues(anonymous (id_606[iu](UNKNOWN): string)))
   Command handle: (id_409[au](UNKNOWN):  command_handle)
   mem_priority2: mem_priority2 (id_441[iu](30): int)
  }
  C4{
   State: (id_444[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_445[au](FAILURE):  outcome)
   Failure type: (id_446[au](POST_CONDITION_FAILED):  failure)
   Command handle: (id_447[au](COMMAND_DENIED):  command_handle)
   mem_priority2: mem_priority2 (id_479[au](30): int)
  }
}

[Test:testOutput]Sending command result c1(20) = 10
[PlexilExec:notifyNodeConditionChanged] for node C1
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 3
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C1' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C1' on the state change queue in position 11
[PlexilExec:step][3:0] State change queue: C1 
[PlexilExec:lock]Locking node C1
[PlexilExec:step][3:0:0] Transitioning node C1
[PlexilExec:notifyNodeConditionChanged] for node C3
[PlexilExec:notifyNodeConditionChanged] for node C1
[PlexilExec:unlock]Unlocking node C1
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C3' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C3' on the state change queue in position 12
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C1' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C1' on the state change queue in position 13
[PlexilExec:step][3:1] State change queue: C3 C1 
[PlexilExec:lock]Locking node C3
[PlexilExec:lock]Locking node C1
[PlexilExec:step][3:1:0] Transitioning node C3
[PlexilExec:notifyNodeConditionChanged] for node C3
[PlexilExec:handleNeedsExecution]Storing action for node 'C3' of type 'Command' to be executed.
[PlexilExec:step][3:1:1] Transitioning node C1
[PlexilExec:notifyNodeConditionChanged] for node C1
[PlexilExec:unlock]Unlocking node C3
[PlexilExec:unlock]Unlocking node C1
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C3' was previously eligible to transition but isn't now.
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C1' was previously eligible to transition but isn't now.
[Test:testOutput]Executing c3() into noId with ack anonymous (id_606[au](UNKNOWN): string)
[PlexilExec:cycle]==>End cycle 3
[PlexilExec:printPlan]
SimpleTask{
 State: (id_289[au](EXECUTING): state(EXECUTING)) (0)
 SkipCondition: Boolean constant false (id_324[au](0): boolean)
 StartCondition: Boolean constant true (id_325[au](1): boolean)
 EndCondition: (id_483[au](0): childrenFinished(2:4))
 InvariantCondition: Boolean constant true (id_325[au](1): boolean)
 PreCondition: Boolean constant true (id_325[au](1): boolean)
 PostCondition: Boolean constant true (id_325[au](1): boolean)
 RepeatCondition: Boolean constant false (id_324[au](0): boolean)
 AncestorInvariantCondition: Boolean constant true (id_325[au](1): boolean)
 AncestorEndCondition: Boolean constant false (id_324[au](0): boolean)
 ParentExecutingCondition: Boolean constant true (id_325[au](1): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_480[iu](UNKNOWN): childrenWaitingOrFinished(0:4))
 AbortCompleteCondition: Boolean constant unknown (id_326[au](UNKNOWN): boolean)
 ParentWaitingCondition: Boolean constant false (id_324[au](0): boolean)
 ParentFinishedCondition: Boolean constant false (id_324[au](0): boolean)
 CommandHandleReceivedCondition: Boolean constant true (id_325[au](1): boolean)
  C1{
   State: (id_329[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_330[au](SUCCESS):  outcome)
   Command handle: (id_332[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   head_priority: head_priority (id_365[au](20): int)
   returnValue: returnValue (id_364[iu](10): int)
  }
  C2{
   State: (id_368[au](WAITING): state(WAITING)) (0)
   SkipCondition: Boolean constant false (id_324[au](0): boolean)
   StartCondition: (id_555[au](UNKNOWN): (id_558[au](UNKNOWN): ((id_407[au](UNKNOWN):  outcome) == (id_557[au](SUCCESS):  outcome))))
   EndCondition: (id_568[iu](UNKNOWN): ((id_562[iu](UNKNOWN): interruptibleCommandHandleValues(anonymous (id_561[iu](UNKNOWN): string))) || (id_566[iu](UNKNOWN): ((id_564[iu](UNKNOWN): isknown(anonymous (id_561[iu](UNKNOWN): string))) && Boolean constant true (id_325[au](1): boolean)))
   InvariantCondition: Boolean constant true (id_325[au](1): boolean)
   PreCondition: Boolean constant true (id_325[au](1): boolean)
   PostCondition: (id_550[iu](UNKNOWN): (id_553[iu](UNKNOWN): ((id_371[au](UNKNOWN):  command_handle) == (id_552[iu](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: Boolean constant false (id_324[au](0): boolean)
   AncestorInvariantCondition: (id_536[au](1): (TransparentWrapper(id_532[auT]{1}(Boolean constant true (id_325[au](1): boolean)) && TransparentWrapper(id_534[auT]{1}(Boolean constant true (id_325[au](1): boolean)))
   AncestorEndCondition: (id_542[au](0): (TransparentWrapper(id_538[auT]{0}(Boolean constant false (id_324[au](0): boolean)) || TransparentWrapper(id_540[auT]{0}((id_483[au](0): childrenFinished(2:4))))
   ParentExecutingCondition: (id_544[iu](UNKNOWN): ((id_289[au](EXECUTING): state(EXECUTING)) == (id_498[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: Boolean constant unknown (id_326[au](UNKNOWN): boolean)
   AbortCompleteCondition: anonymous (id_560[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_546[iu](UNKNOWN): ((id_289[au](EXECUTING): state(EXECUTING)) == (id_501[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_548[iu](UNKNOWN): ((id_289[au](EXECUTING): state(EXECUTING)) == (id_504[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_570[iu](UNKNOWN): allCommandHandleValues(anonymous (id_561[iu](UNKNOWN): string)))
   Command handle: (id_371[au](UNKNOWN):  command_handle)
   v_priority2: v_priority2 (id_403[iu](25): int)
  }
  C3{
   State: (id_406[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: Boolean constant false (id_324[au](0): boolean)
   StartCondition: (id_600[iu](UNKNOWN): (id_603[iu](UNKNOWN): ((id_330[au](SUCCESS):  outcome) == (id_602[iu](SUCCESS):  outcome))))
   EndCondition: (id_613[au](0): ((id_607[au](0): interruptibleCommandHandleValues(anonymous (id_606[au](UNKNOWN): string))) || (id_611[au](0): ((id_609[au](0): isknown(anonymous (id_606[au](UNKNOWN): string))) && Boolean constant true (id_325[au](1): boolean)))
   InvariantCondition: Boolean constant true (id_325[au](1): boolean)
   PreCondition: Boolean constant true (id_325[au](1): boolean)
   PostCondition: (id_595[au](UNKNOWN): (id_598[au](UNKNOWN): ((id_409[au](UNKNOWN):  command_handle) == (id_597[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: Boolean constant false (id_324[au](0): boolean)
   AncestorInvariantCondition: (id_581[au](1): (TransparentWrapper(id_577[auT]{1}(Boolean constant true (id_325[au](1): boolean)) && TransparentWrapper(id_579[auT]{1}(Boolean constant true (id_325[au](1): boolean)))
   AncestorEndCondition: (id_587[iu](UNKNOWN): (TransparentWrapper(id_583[iuT]{0}(Boolean constant false (id_324[au](0): boolean)) || TransparentWrapper(id_585[iuT]{0}((id_483[au](0): childrenFinished(2:4))))
   ParentExecutingCondition: (id_589[iu](UNKNOWN): ((id_289[au](EXECUTING): state(EXECUTING)) == (id_498[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: Boolean constant unknown (id_326[au](UNKNOWN): boolean)
   AbortCompleteCondition: anonymous (id_605[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_591[iu](UNKNOWN): ((id_289[au](EXECUTING): state(EXECUTING)) == (id_501[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_593[iu](UNKNOWN): ((id_289[au](EXECUTING): state(EXECUTING)) == (id_504[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_615[au](0): allCommandHandleValues(anonymous (id_606[au](UNKNOWN): string)))
   Command handle: (id_409[au](UNKNOWN):  command_handle)
   mem_priority2: mem_priority2 (id_441[au](30): int)
  }
  C4{
   State: (id_444[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_445[au](FAILURE):  outcome)
   Failure type: (id_446[au](POST_CONDITION_FAILED):  failure)
   Command handle: (id_447[au](COMMAND_DENIED):  command_handle)
   mem_priority2: mem_priority2 (id_479[au](30): int)
  }
}

[Test:testOutput]Sending command ACK c3() = (string)COMMAND_SENT_TO_SYSTEM
[PlexilExec:notifyNodeConditionChanged] for node C3
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 4
[PlexilExec:notifyNodeConditionChanged] for node C3
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C3' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C3' on the state change queue in position 14
[PlexilExec:step][4:0] State change queue: C3 
[PlexilExec:lock]Locking node C3
[PlexilExec:step][4:0:0] Transitioning node C3
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:notifyNodeConditionChanged] for node C3
[PlexilExec:unlock]Unlocking node C3
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 15
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C3' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C3' on the state change queue in position 16
[PlexilExec:step][4:1] State change queue: C2 C3 
[PlexilExec:lock]Locking node C2
[PlexilExec:lock]Locking node C3
[PlexilExec:step][4:1:0] Transitioning node C2
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:handleNeedsExecution]Storing action for node 'C2' of type 'Command' to be executed.
[PlexilExec:step][4:1:1] Transitioning node C3
[PlexilExec:notifyNodeConditionChanged] for node C3
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:unlock]Unlocking node C3
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C2' was previously eligible to transition but isn't now.
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C3' was previously eligible to transition but isn't now.
[Test:testOutput]Executing c2() into noId with ack anonymous (id_561[au](UNKNOWN): string)
[PlexilExec:cycle]==>End cycle 4
[PlexilExec:printPlan]
SimpleTask{
 State: (id_289[au](EXECUTING): state(EXECUTING)) (0)
 SkipCondition: Boolean constant false (id_324[au](0): boolean)
 StartCondition: Boolean constant true (id_325[au](1): boolean)
 EndCondition: (id_483[au](0): childrenFinished(3:4))
 InvariantCondition: Boolean constant true (id_325[au](1): boolean)
 PreCondition: Boolean constant true (id_325[au](1): boolean)
 PostCondition: Boolean constant true (id_325[au](1): boolean)
 RepeatCondition: Boolean constant false (id_324[au](0): boolean)
 AncestorInvariantCondition: Boolean constant true (id_325[au](1): boolean)
 AncestorEndCondition: Boolean constant false (id_324[au](0): boolean)
 ParentExecutingCondition: Boolean constant true (id_325[au](1): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_480[iu](UNKNOWN): childrenWaitingOrFinished(0:4))
 AbortCompleteCondition: Boolean constant unknown (id_326[au](UNKNOWN): boolean)
 ParentWaitingCondition: Boolean constant false (id_324[au](0): boolean)
 ParentFinishedCondition: Boolean constant false (id_324[au](0): boolean)
 CommandHandleReceivedCondition: Boolean constant true (id_325[au](1): boolean)
  C1{
   State: (id_329[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_330[au](SUCCESS):  outcome)
   Command handle: (id_332[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   head_priority: head_priority (id_365[au](20): int)
   returnValue: returnValue (id_364[iu](10): int)
  }
  C2{
   State: (id_368[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: Boolean constant false (id_324[au](0): boolean)
   StartCondition: (id_555[iu](UNKNOWN): (id_558[iu](UNKNOWN): ((id_407[au](SUCCESS):  outcome) == (id_557[iu](SUCCESS):  outcome))))
   EndCondition: (id_568[au](0): ((id_562[au](0): interruptibleCommandHandleValues(anonymous (id_561[au](UNKNOWN): string))) || (id_566[au](0): ((id_564[au](0): isknown(anonymous (id_561[au](UNKNOWN): string))) && Boolean constant true (id_325[au](1): boolean)))
   InvariantCondition: Boolean constant true (id_325[au](1): boolean)
   PreCondition: Boolean constant true (id_325[au](1): boolean)
   PostCondition: (id_550[au](UNKNOWN): (id_553[au](UNKNOWN): ((id_371[au](UNKNOWN):  command_handle) == (id_552[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: Boolean constant false (id_324[au](0): boolean)
   AncestorInvariantCondition: (id_536[au](1): (TransparentWrapper(id_532[auT]{1}(Boolean constant true (id_325[au](1): boolean)) && TransparentWrapper(id_534[auT]{1}(Boolean constant true (id_325[au](1): boolean)))
   AncestorEndCondition: (id_542[iu](UNKNOWN): (TransparentWrapper(id_538[iuT]{0}(Boolean constant false (id_324[au](0): boolean)) || TransparentWrapper(id_540[iuT]{0}((id_483[au](0): childrenFinished(3:4))))
   ParentExecutingCondition: (id_544[iu](UNKNOWN): ((id_289[au](EXECUTING): state(EXECUTING)) == (id_498[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: Boolean constant unknown (id_326[au](UNKNOWN): boolean)
   AbortCompleteCondition: anonymous (id_560[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_546[iu](UNKNOWN): ((id_289[au](EXECUTING): state(EXECUTING)) == (id_501[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_548[iu](UNKNOWN): ((id_289[au](EXECUTING): state(EXECUTING)) == (id_504[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_570[au](0): allCommandHandleValues(anonymous (id_561[au](UNKNOWN): string)))
   Command handle: (id_371[au](UNKNOWN):  command_handle)
   v_priority2: v_priority2 (id_403[au](25): int)
  }
  C3{
   State: (id_406[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_407[au](SUCCESS):  outcome)
   Command handle: (id_409[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   mem_priority2: mem_priority2 (id_441[au](30): int)
  }
  C4{
   State: (id_444[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_445[au](FAILURE):  outcome)
   Failure type: (id_446[au](POST_CONDITION_FAILED):  failure)
   Command handle: (id_447[au](COMMAND_DENIED):  command_handle)
   mem_priority2: mem_priority2 (id_479[au](30): int)
  }
}

[Test:testOutput]Sending command ACK c2() = (string)COMMAND_SENT_TO_SYSTEM
[PlexilExec:notifyNodeConditionChanged] for node C2
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 5
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 17
[PlexilExec:step][5:0] State change queue: C2 
[PlexilExec:lock]Locking node C2
[PlexilExec:step][5:0:0] Transitioning node C2
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 18
[PlexilExec:step][5:1] State change queue: C2 
[PlexilExec:lock]Locking node C2
[PlexilExec:step][5:1:0] Transitioning node C2
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C2' was previously eligible to transition but isn't now.
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 19
[PlexilExec:step][5:2] State change queue: SimpleTask 
[PlexilExec:lock]Locking node SimpleTask
[PlexilExec:step][5:2:0] Transitioning node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:unlock]Unlocking node SimpleTask
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 20
[PlexilExec:step][5:3] State change queue: SimpleTask 
[PlexilExec:lock]Locking node SimpleTask
[PlexilExec:step][5:3:0] Transitioning node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:unlock]Unlocking node SimpleTask
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 21
[PlexilExec:step][5:4] State change queue: SimpleTask 
[PlexilExec:lock]Locking node SimpleTask
[PlexilExec:step][5:4:0] Transitioning node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:unlock]Unlocking node SimpleTask
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'SimpleTask' was previously eligible to transition but isn't now.
[PlexilExec:cycle]==>End cycle 5
[PlexilExec:printPlan]
SimpleTask{
 State: (id_289[au](FINISHED): state(FINISHED)) (0)
 Outcome: (id_290[au](SUCCESS):  outcome)
  C1{
   State: (id_329[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_330[au](SUCCESS):  outcome)
   Command handle: (id_332[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   head_priority: head_priority (id_365[au](20): int)
   returnValue: returnValue (id_364[iu](10): int)
  }
  C2{
   State: (id_368[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_369[au](SUCCESS):  outcome)
   Command handle: (id_371[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   v_priority2: v_priority2 (id_403[au](25): int)
  }
  C3{
   State: (id_406[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_407[au](SUCCESS):  outcome)
   Command handle: (id_409[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   mem_priority2: mem_priority2 (id_441[au](30): int)
  }
  C4{
   State: (id_444[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_445[au](FAILURE):  outcome)
   Failure type: (id_446[au](POST_CONDITION_FAILED):  failure)
   Command handle: (id_447[au](COMMAND_DENIED):  command_handle)
   mem_priority2: mem_priority2 (id_479[au](30): int)
  }
}

