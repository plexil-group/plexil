[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:addPlan]Added plan: 
TestArrays{
 State: (id_312[au](INACTIVE): state(INACTIVE)) (inf)
  testIntStateVariable{
   State: (id_364[au](INACTIVE): state(INACTIVE)) (inf)
  }
  callBoolArrayCommand{
   State: (id_411[au](INACTIVE): state(INACTIVE)) (inf)
  }
  testCallBoolArrayCommand{
   State: (id_458[au](INACTIVE): state(INACTIVE)) (inf)
  }
  callStringArrayFunction{
   State: (id_505[au](INACTIVE): state(INACTIVE)) (inf)
  }
  testCallStringArrayFunction{
   State: (id_552[au](INACTIVE): state(INACTIVE)) (inf)
  }
}

[PlexilExec:handleConditionsChanged]Node TestArrays had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'TestArrays' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'TestArrays' on the state change queue in position 1
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 1
[PlexilExec:step][1:0] State change queue: TestArrays 
[PlexilExec:lock]Locking node TestArrays
[PlexilExec:step][1:0:0] Transitioning node TestArrays
[PlexilExec:handleConditionsChanged]Node TestArrays had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'TestArrays' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'TestArrays' on the state change queue in position 2
[PlexilExec:unlock]Unlocking node TestArrays
[PlexilExec:step][1:1] State change queue: TestArrays 
[PlexilExec:lock]Locking node TestArrays
[PlexilExec:step][1:1:0] Transitioning node TestArrays
[PlexilExec:handleConditionsChanged]Node testIntStateVariable had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'testIntStateVariable' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'testIntStateVariable' on the state change queue in position 3
[PlexilExec:handleConditionsChanged]Node callBoolArrayCommand had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'callBoolArrayCommand' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'callBoolArrayCommand' on the state change queue in position 4
[PlexilExec:handleConditionsChanged]Node testCallBoolArrayCommand had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'testCallBoolArrayCommand' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'testCallBoolArrayCommand' on the state change queue in position 5
[PlexilExec:handleConditionsChanged]Node callStringArrayFunction had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'callStringArrayFunction' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'callStringArrayFunction' on the state change queue in position 6
[PlexilExec:handleConditionsChanged]Node testCallStringArrayFunction had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'testCallStringArrayFunction' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'testCallStringArrayFunction' on the state change queue in position 7
[PlexilExec:handleNeedsExecution]Storing action for node 'TestArrays' of type 'NodeList' to be executed.
[PlexilExec:handleConditionsChanged]Node TestArrays had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'TestArrays' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node TestArrays
[PlexilExec:step][1:2] State change queue: testIntStateVariable callBoolArrayCommand testCallBoolArrayCommand callStringArrayFunction testCallStringArrayFunction 
[PlexilExec:lock]Locking node testIntStateVariable
[PlexilExec:lock]Locking node callBoolArrayCommand
[PlexilExec:lock]Locking node testCallBoolArrayCommand
[PlexilExec:lock]Locking node callStringArrayFunction
[PlexilExec:lock]Locking node testCallStringArrayFunction
[PlexilExec:step][1:2:0] Transitioning node testIntStateVariable
[Test:testOutput]Registering change lookup stateInteger() with tolerances 0
[PlexilExec:handleConditionsChanged]Node testIntStateVariable had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'testIntStateVariable' was previously eligible to transition but isn't now.
[PlexilExec:step][1:2:1] Transitioning node callBoolArrayCommand
[PlexilExec:handleConditionsChanged]Node callBoolArrayCommand had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'callBoolArrayCommand' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'callBoolArrayCommand' on the state change queue in position 8
[PlexilExec:step][1:2:2] Transitioning node testCallBoolArrayCommand
[PlexilExec:handleConditionsChanged]Node testCallBoolArrayCommand had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'testCallBoolArrayCommand' was previously eligible to transition but isn't now.
[PlexilExec:step][1:2:3] Transitioning node callStringArrayFunction
[PlexilExec:handleConditionsChanged]Node callStringArrayFunction had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'callStringArrayFunction' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'callStringArrayFunction' on the state change queue in position 9
[PlexilExec:step][1:2:4] Transitioning node testCallStringArrayFunction
[PlexilExec:handleConditionsChanged]Node testCallStringArrayFunction had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'testCallStringArrayFunction' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node testIntStateVariable
[PlexilExec:unlock]Unlocking node callBoolArrayCommand
[PlexilExec:unlock]Unlocking node testCallBoolArrayCommand
[PlexilExec:unlock]Unlocking node callStringArrayFunction
[PlexilExec:unlock]Unlocking node testCallStringArrayFunction
[PlexilExec:step][1:3] State change queue: callBoolArrayCommand callStringArrayFunction 
[PlexilExec:lock]Locking node callBoolArrayCommand
[PlexilExec:lock]Locking node callStringArrayFunction
[PlexilExec:step][1:3:0] Transitioning node callBoolArrayCommand
[PlexilExec:handleNeedsExecution]Storing action for node 'callBoolArrayCommand' of type 'Command' to be executed.
[PlexilExec:handleConditionsChanged]Node callBoolArrayCommand had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'callBoolArrayCommand' was previously eligible to transition but isn't now.
[PlexilExec:step][1:3:1] Transitioning node callStringArrayFunction
[PlexilExec:handleNeedsExecution]Storing action for node 'callStringArrayFunction' of type 'FunctionCall' to be executed.
[PlexilExec:handleConditionsChanged]Node callStringArrayFunction had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'callStringArrayFunction' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node callBoolArrayCommand
[PlexilExec:unlock]Unlocking node callStringArrayFunction
[Test:testOutput]Executing boolArrayCommand() into (id_361[au](UNKNOWN): Array: [true, false, UNKNOWN]) with ack (id_714[au](UNKNOWN): boolean)
[Test:testOutput]Executing stringArrayFunction() into (id_358[au](UNKNOWN): Array: ["string 1", "string 2", UNKNOWN]) with ack (id_766[au](UNKNOWN): boolean)
[PlexilExec:cycle]==>End cycle 1
[PlexilExec:printPlan]
TestArrays{
 State: (id_312[au](EXECUTING): state(EXECUTING)) (0)
 SkipCondition: (id_329[au](0): boolean)
 StartCondition: (id_603[iu](UNKNOWN): ((id_605[iu](UNKNOWN): ((id_607[iu](UNKNOWN): ArrayElement: (id_609[iu](UNKNOWN): string)[(id_610[iu](0): int)]) == (id_611[iu](UNKNOWN): string))) && (id_612[iu](UNKNOWN): !(id_614[iu](UNKNOWN): isknown((id_616[iu](UNKNOWN): ArrayElement: (id_618[iu](UNKNOWN): string)[(id_619[iu](2): int)])))) && (id_620[iu](UNKNOWN): ((id_622[iu](UNKNOWN): ArrayElement: (id_624[iu](UNKNOWN): string)[(id_625[iu](0): int)]) == (id_626[iu](1.1): real))) && (id_627[iu](UNKNOWN): !(id_629[iu](UNKNOWN): isknown((id_631[iu](UNKNOWN): ArrayElement: (id_633[iu](UNKNOWN): string)[(id_634[iu](2): int)])))) && (id_635[iu](UNKNOWN): ((id_637[iu](UNKNOWN): ArrayElement: (id_639[iu](UNKNOWN): string)[(id_640[iu](0): int)]) == (id_641[iu](1): int))) && (id_642[iu](UNKNOWN): !(id_644[iu](UNKNOWN): isknown((id_646[iu](UNKNOWN): ArrayElement: (id_648[iu](UNKNOWN): string)[(id_649[iu](2): int)])))) && (id_650[iu](UNKNOWN): ArrayElement: (id_652[iu](UNKNOWN): string)[(id_653[iu](0): int)]) && (id_654[iu](UNKNOWN): !(id_656[iu](UNKNOWN): ArrayElement: (id_658[iu](UNKNOWN): string)[(id_659[iu](1): int)])) && (id_660[iu](UNKNOWN): !(id_662[iu](UNKNOWN): isknown((id_664[iu](UNKNOWN): ArrayElement: (id_666[iu](UNKNOWN): string)[(id_667[iu](2): int)])))))
 EndCondition: (id_600[au](0): childrenFinished(0:5))
 InvariantCondition: (id_335[au](1): boolean)
 PreCondition: (id_337[au](1): boolean)
 PostCondition: (id_339[au](1): boolean)
 RepeatCondition: (id_341[au](0): boolean)
 AncestorInvariantCondition: (id_343[au](1): boolean)
 AncestorEndCondition: (id_345[au](0): boolean)
 ParentExecutingCondition: (id_347[au](1): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_597[iu](UNKNOWN): childrenWaitingOrFinished(0:5))
 AbortCompleteCondition: (id_351[au](UNKNOWN): boolean)
 ParentWaitingCondition: (id_353[au](0): boolean)
 ParentFinishedCondition: (id_355[au](0): boolean)
 x: (id_357[iu](4): int)
 myStringArray: (id_358[au](UNKNOWN): Array: ["string 1", "string 2", UNKNOWN])
 myRealArray: (id_359[iu](UNKNOWN): Array: [1.1, 2.2, UNKNOWN])
 myIntegerArray: (id_360[iu](UNKNOWN): Array: [1, 2, UNKNOWN])
 myBooleanArray: (id_361[au](UNKNOWN): Array: [true, false, UNKNOWN])
  testIntStateVariable{
   State: (id_364[au](WAITING): state(WAITING)) (0)
   SkipCondition: (id_381[au](0): boolean)
   StartCondition: (id_689[au](UNKNOWN): ((id_691[au](UNKNOWN): LookupOnChange(0.00203(), (id_693[au](0): real))) == (id_694[au](100): int)))
   EndCondition: (id_385[au](1): boolean)
   InvariantCondition: (id_387[au](1): boolean)
   PreCondition: (id_389[au](1): boolean)
   PostCondition: (id_391[au](1): boolean)
   RepeatCondition: (id_393[au](0): boolean)
   AncestorInvariantCondition: (id_672[au](1): (TransparentWrapper(id_668[auT]{1}((id_343[au](1): boolean)) && TransparentWrapper(id_670[auT]{1}((id_335[au](1): boolean)))
   AncestorEndCondition: (id_678[au](0): (TransparentWrapper(id_674[auT]{0}((id_345[au](0): boolean)) || TransparentWrapper(id_676[auT]{0}((id_600[au](0): childrenFinished(0:5))))
   ParentExecutingCondition: (id_681[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_680[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_401[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_403[au](UNKNOWN): boolean)
   ParentWaitingCondition: (id_684[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_683[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_687[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_686[au](FINISHED): state(FINISHED))))
   x: (id_357[iu](4): int)
   myStringArray: (id_358[au](UNKNOWN): Array: ["string 1", "string 2", UNKNOWN])
   myRealArray: (id_359[iu](UNKNOWN): Array: [1.1, 2.2, UNKNOWN])
   myIntegerArray: (id_360[iu](UNKNOWN): Array: [1, 2, UNKNOWN])
   myBooleanArray: (id_361[au](UNKNOWN): Array: [true, false, UNKNOWN])
  }
  callBoolArrayCommand{
   State: (id_411[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_428[au](0): boolean)
   StartCondition: (id_430[au](1): boolean)
   EndCondition: (id_715[au](UNKNOWN): ((id_714[au](UNKNOWN): boolean) && (id_432[au](1): boolean))
   InvariantCondition: (id_434[au](1): boolean)
   PreCondition: (id_436[au](1): boolean)
   PostCondition: (id_438[au](1): boolean)
   RepeatCondition: (id_440[au](0): boolean)
   AncestorInvariantCondition: (id_699[au](1): (TransparentWrapper(id_695[auT]{1}((id_343[au](1): boolean)) && TransparentWrapper(id_697[auT]{1}((id_335[au](1): boolean)))
   AncestorEndCondition: (id_705[iu](UNKNOWN): (TransparentWrapper(id_701[iuT]{0}((id_345[au](0): boolean)) || TransparentWrapper(id_703[iuT]{0}((id_600[au](0): childrenFinished(0:5))))
   ParentExecutingCondition: (id_707[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_680[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_448[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_713[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_709[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_683[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_711[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_686[au](FINISHED): state(FINISHED))))
   x: (id_357[iu](4): int)
   myStringArray: (id_358[au](UNKNOWN): Array: ["string 1", "string 2", UNKNOWN])
   myRealArray: (id_359[iu](UNKNOWN): Array: [1.1, 2.2, UNKNOWN])
   myIntegerArray: (id_360[iu](UNKNOWN): Array: [1, 2, UNKNOWN])
   myBooleanArray: (id_361[au](UNKNOWN): Array: [true, false, UNKNOWN])
  }
  testCallBoolArrayCommand{
   State: (id_458[au](WAITING): state(WAITING)) (0)
   SkipCondition: (id_475[au](0): boolean)
   StartCondition: (id_737[au](0): ((id_739[au](UNKNOWN): (id_742[au](UNKNOWN): ((id_412[au](UNKNOWN):  outcome) == (id_741[au](SUCCESS):  outcome)))) && (id_744[au](0): ArrayElement: (id_746[au](myBooleanArray): string)[(id_747[au](1): int)]))
   EndCondition: (id_479[au](1): boolean)
   InvariantCondition: (id_481[au](1): boolean)
   PreCondition: (id_483[au](1): boolean)
   PostCondition: (id_485[au](1): boolean)
   RepeatCondition: (id_487[au](0): boolean)
   AncestorInvariantCondition: (id_723[au](1): (TransparentWrapper(id_719[auT]{1}((id_343[au](1): boolean)) && TransparentWrapper(id_721[auT]{1}((id_335[au](1): boolean)))
   AncestorEndCondition: (id_729[au](0): (TransparentWrapper(id_725[auT]{0}((id_345[au](0): boolean)) || TransparentWrapper(id_727[auT]{0}((id_600[au](0): childrenFinished(0:5))))
   ParentExecutingCondition: (id_731[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_680[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_495[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_497[au](UNKNOWN): boolean)
   ParentWaitingCondition: (id_733[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_683[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_735[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_686[au](FINISHED): state(FINISHED))))
   x: (id_357[iu](4): int)
   myStringArray: (id_358[au](UNKNOWN): Array: ["string 1", "string 2", UNKNOWN])
   myRealArray: (id_359[iu](UNKNOWN): Array: [1.1, 2.2, UNKNOWN])
   myIntegerArray: (id_360[iu](UNKNOWN): Array: [1, 2, UNKNOWN])
   myBooleanArray: (id_361[au](UNKNOWN): Array: [true, false, UNKNOWN])
  }
  callStringArrayFunction{
   State: (id_505[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_522[au](0): boolean)
   StartCondition: (id_524[au](1): boolean)
   EndCondition: (id_767[au](UNKNOWN): ((id_766[au](UNKNOWN): boolean) && (id_526[au](1): boolean))
   InvariantCondition: (id_528[au](1): boolean)
   PreCondition: (id_530[au](1): boolean)
   PostCondition: (id_532[au](1): boolean)
   RepeatCondition: (id_534[au](0): boolean)
   AncestorInvariantCondition: (id_752[au](1): (TransparentWrapper(id_748[auT]{1}((id_343[au](1): boolean)) && TransparentWrapper(id_750[auT]{1}((id_335[au](1): boolean)))
   AncestorEndCondition: (id_758[iu](UNKNOWN): (TransparentWrapper(id_754[iuT]{0}((id_345[au](0): boolean)) || TransparentWrapper(id_756[iuT]{0}((id_600[au](0): childrenFinished(0:5))))
   ParentExecutingCondition: (id_760[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_680[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_542[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_544[au](UNKNOWN): boolean)
   ParentWaitingCondition: (id_762[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_683[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_764[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_686[au](FINISHED): state(FINISHED))))
   x: (id_357[iu](4): int)
   myStringArray: (id_358[au](UNKNOWN): Array: ["string 1", "string 2", UNKNOWN])
   myRealArray: (id_359[iu](UNKNOWN): Array: [1.1, 2.2, UNKNOWN])
   myIntegerArray: (id_360[iu](UNKNOWN): Array: [1, 2, UNKNOWN])
   myBooleanArray: (id_361[au](UNKNOWN): Array: [true, false, UNKNOWN])
  }
  testCallStringArrayFunction{
   State: (id_552[au](WAITING): state(WAITING)) (0)
   SkipCondition: (id_569[au](0): boolean)
   StartCondition: (id_789[au](0): ((id_791[au](UNKNOWN): (id_794[au](UNKNOWN): ((id_506[au](UNKNOWN):  outcome) == (id_793[au](SUCCESS):  outcome)))) && (id_796[au](0): ((id_798[au](string 2): ArrayElement: (id_800[au](myStringArray): string)[(id_801[au](1): int)]) == (id_802[au](new string 2): string))))
   EndCondition: (id_573[au](1): boolean)
   InvariantCondition: (id_575[au](1): boolean)
   PreCondition: (id_577[au](1): boolean)
   PostCondition: (id_579[au](1): boolean)
   RepeatCondition: (id_581[au](0): boolean)
   AncestorInvariantCondition: (id_775[au](1): (TransparentWrapper(id_771[auT]{1}((id_343[au](1): boolean)) && TransparentWrapper(id_773[auT]{1}((id_335[au](1): boolean)))
   AncestorEndCondition: (id_781[au](0): (TransparentWrapper(id_777[auT]{0}((id_345[au](0): boolean)) || TransparentWrapper(id_779[auT]{0}((id_600[au](0): childrenFinished(0:5))))
   ParentExecutingCondition: (id_783[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_680[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_589[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_591[au](UNKNOWN): boolean)
   ParentWaitingCondition: (id_785[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_683[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_787[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_686[au](FINISHED): state(FINISHED))))
   x: (id_357[iu](4): int)
   myStringArray: (id_358[au](UNKNOWN): Array: ["string 1", "string 2", UNKNOWN])
   myRealArray: (id_359[iu](UNKNOWN): Array: [1.1, 2.2, UNKNOWN])
   myIntegerArray: (id_360[iu](UNKNOWN): Array: [1, 2, UNKNOWN])
   myBooleanArray: (id_361[au](UNKNOWN): Array: [true, false, UNKNOWN])
  }
}

[Test:testOutput]Processing event: stateInteger() = 100
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:handleConditionsChanged]Node testIntStateVariable had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'testIntStateVariable' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'testIntStateVariable' on the state change queue in position 10
[PlexilExec:cycle]==>Start cycle 2
[PlexilExec:step][2:0] State change queue: testIntStateVariable 
[PlexilExec:lock]Locking node testIntStateVariable
[PlexilExec:step][2:0:0] Transitioning node testIntStateVariable
[PlexilExec:handleConditionsChanged]Node testIntStateVariable had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'testIntStateVariable' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'testIntStateVariable' on the state change queue in position 11
[PlexilExec:unlock]Unlocking node testIntStateVariable
[PlexilExec:step][2:1] State change queue: testIntStateVariable 
[PlexilExec:lock]Locking node testIntStateVariable
[PlexilExec:step][2:1:0] Transitioning node testIntStateVariable
[PlexilExec:handleConditionsChanged]Node testIntStateVariable had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'testIntStateVariable' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'testIntStateVariable' on the state change queue in position 12
[PlexilExec:unlock]Unlocking node testIntStateVariable
[PlexilExec:step][2:2] State change queue: testIntStateVariable 
[PlexilExec:lock]Locking node testIntStateVariable
[PlexilExec:step][2:2:0] Transitioning node testIntStateVariable
[PlexilExec:handleConditionsChanged]Node testIntStateVariable had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'testIntStateVariable' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node testIntStateVariable
[PlexilExec:cycle]==>End cycle 2
[PlexilExec:printPlan]
TestArrays{
 State: (id_312[au](EXECUTING): state(EXECUTING)) (0)
 SkipCondition: (id_329[au](0): boolean)
 StartCondition: (id_603[iu](UNKNOWN): ((id_605[iu](UNKNOWN): ((id_607[iu](UNKNOWN): ArrayElement: (id_609[iu](UNKNOWN): string)[(id_610[iu](0): int)]) == (id_611[iu](UNKNOWN): string))) && (id_612[iu](UNKNOWN): !(id_614[iu](UNKNOWN): isknown((id_616[iu](UNKNOWN): ArrayElement: (id_618[iu](UNKNOWN): string)[(id_619[iu](2): int)])))) && (id_620[iu](UNKNOWN): ((id_622[iu](UNKNOWN): ArrayElement: (id_624[iu](UNKNOWN): string)[(id_625[iu](0): int)]) == (id_626[iu](1.1): real))) && (id_627[iu](UNKNOWN): !(id_629[iu](UNKNOWN): isknown((id_631[iu](UNKNOWN): ArrayElement: (id_633[iu](UNKNOWN): string)[(id_634[iu](2): int)])))) && (id_635[iu](UNKNOWN): ((id_637[iu](UNKNOWN): ArrayElement: (id_639[iu](UNKNOWN): string)[(id_640[iu](0): int)]) == (id_641[iu](1): int))) && (id_642[iu](UNKNOWN): !(id_644[iu](UNKNOWN): isknown((id_646[iu](UNKNOWN): ArrayElement: (id_648[iu](UNKNOWN): string)[(id_649[iu](2): int)])))) && (id_650[iu](UNKNOWN): ArrayElement: (id_652[iu](UNKNOWN): string)[(id_653[iu](0): int)]) && (id_654[iu](UNKNOWN): !(id_656[iu](UNKNOWN): ArrayElement: (id_658[iu](UNKNOWN): string)[(id_659[iu](1): int)])) && (id_660[iu](UNKNOWN): !(id_662[iu](UNKNOWN): isknown((id_664[iu](UNKNOWN): ArrayElement: (id_666[iu](UNKNOWN): string)[(id_667[iu](2): int)])))))
 EndCondition: (id_600[au](0): childrenFinished(1:5))
 InvariantCondition: (id_335[au](1): boolean)
 PreCondition: (id_337[au](1): boolean)
 PostCondition: (id_339[au](1): boolean)
 RepeatCondition: (id_341[au](0): boolean)
 AncestorInvariantCondition: (id_343[au](1): boolean)
 AncestorEndCondition: (id_345[au](0): boolean)
 ParentExecutingCondition: (id_347[au](1): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_597[iu](UNKNOWN): childrenWaitingOrFinished(0:5))
 AbortCompleteCondition: (id_351[au](UNKNOWN): boolean)
 ParentWaitingCondition: (id_353[au](0): boolean)
 ParentFinishedCondition: (id_355[au](0): boolean)
 x: (id_357[iu](4): int)
 myStringArray: (id_358[au](UNKNOWN): Array: ["string 1", "string 2", UNKNOWN])
 myRealArray: (id_359[iu](UNKNOWN): Array: [1.1, 2.2, UNKNOWN])
 myIntegerArray: (id_360[iu](UNKNOWN): Array: [1, 2, UNKNOWN])
 myBooleanArray: (id_361[au](UNKNOWN): Array: [true, false, UNKNOWN])
  testIntStateVariable{
   State: (id_364[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_365[au](SUCCESS):  outcome)
   x: (id_357[iu](4): int)
   myStringArray: (id_358[au](UNKNOWN): Array: ["string 1", "string 2", UNKNOWN])
   myRealArray: (id_359[iu](UNKNOWN): Array: [1.1, 2.2, UNKNOWN])
   myIntegerArray: (id_360[iu](UNKNOWN): Array: [1, 2, UNKNOWN])
   myBooleanArray: (id_361[au](UNKNOWN): Array: [true, false, UNKNOWN])
  }
  callBoolArrayCommand{
   State: (id_411[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_428[au](0): boolean)
   StartCondition: (id_430[au](1): boolean)
   EndCondition: (id_715[au](UNKNOWN): ((id_714[au](UNKNOWN): boolean) && (id_432[au](1): boolean))
   InvariantCondition: (id_434[au](1): boolean)
   PreCondition: (id_436[au](1): boolean)
   PostCondition: (id_438[au](1): boolean)
   RepeatCondition: (id_440[au](0): boolean)
   AncestorInvariantCondition: (id_699[au](1): (TransparentWrapper(id_695[auT]{1}((id_343[au](1): boolean)) && TransparentWrapper(id_697[auT]{1}((id_335[au](1): boolean)))
   AncestorEndCondition: (id_705[iu](UNKNOWN): (TransparentWrapper(id_701[iuT]{0}((id_345[au](0): boolean)) || TransparentWrapper(id_703[iuT]{0}((id_600[au](0): childrenFinished(1:5))))
   ParentExecutingCondition: (id_707[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_680[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_448[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_713[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_709[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_683[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_711[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_686[au](FINISHED): state(FINISHED))))
   x: (id_357[iu](4): int)
   myStringArray: (id_358[au](UNKNOWN): Array: ["string 1", "string 2", UNKNOWN])
   myRealArray: (id_359[iu](UNKNOWN): Array: [1.1, 2.2, UNKNOWN])
   myIntegerArray: (id_360[iu](UNKNOWN): Array: [1, 2, UNKNOWN])
   myBooleanArray: (id_361[au](UNKNOWN): Array: [true, false, UNKNOWN])
  }
  testCallBoolArrayCommand{
   State: (id_458[au](WAITING): state(WAITING)) (0)
   SkipCondition: (id_475[au](0): boolean)
   StartCondition: (id_737[au](0): ((id_739[au](UNKNOWN): (id_742[au](UNKNOWN): ((id_412[au](UNKNOWN):  outcome) == (id_741[au](SUCCESS):  outcome)))) && (id_744[au](0): ArrayElement: (id_746[au](myBooleanArray): string)[(id_747[au](1): int)]))
   EndCondition: (id_479[au](1): boolean)
   InvariantCondition: (id_481[au](1): boolean)
   PreCondition: (id_483[au](1): boolean)
   PostCondition: (id_485[au](1): boolean)
   RepeatCondition: (id_487[au](0): boolean)
   AncestorInvariantCondition: (id_723[au](1): (TransparentWrapper(id_719[auT]{1}((id_343[au](1): boolean)) && TransparentWrapper(id_721[auT]{1}((id_335[au](1): boolean)))
   AncestorEndCondition: (id_729[au](0): (TransparentWrapper(id_725[auT]{0}((id_345[au](0): boolean)) || TransparentWrapper(id_727[auT]{0}((id_600[au](0): childrenFinished(1:5))))
   ParentExecutingCondition: (id_731[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_680[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_495[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_497[au](UNKNOWN): boolean)
   ParentWaitingCondition: (id_733[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_683[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_735[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_686[au](FINISHED): state(FINISHED))))
   x: (id_357[iu](4): int)
   myStringArray: (id_358[au](UNKNOWN): Array: ["string 1", "string 2", UNKNOWN])
   myRealArray: (id_359[iu](UNKNOWN): Array: [1.1, 2.2, UNKNOWN])
   myIntegerArray: (id_360[iu](UNKNOWN): Array: [1, 2, UNKNOWN])
   myBooleanArray: (id_361[au](UNKNOWN): Array: [true, false, UNKNOWN])
  }
  callStringArrayFunction{
   State: (id_505[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_522[au](0): boolean)
   StartCondition: (id_524[au](1): boolean)
   EndCondition: (id_767[au](UNKNOWN): ((id_766[au](UNKNOWN): boolean) && (id_526[au](1): boolean))
   InvariantCondition: (id_528[au](1): boolean)
   PreCondition: (id_530[au](1): boolean)
   PostCondition: (id_532[au](1): boolean)
   RepeatCondition: (id_534[au](0): boolean)
   AncestorInvariantCondition: (id_752[au](1): (TransparentWrapper(id_748[auT]{1}((id_343[au](1): boolean)) && TransparentWrapper(id_750[auT]{1}((id_335[au](1): boolean)))
   AncestorEndCondition: (id_758[iu](UNKNOWN): (TransparentWrapper(id_754[iuT]{0}((id_345[au](0): boolean)) || TransparentWrapper(id_756[iuT]{0}((id_600[au](0): childrenFinished(1:5))))
   ParentExecutingCondition: (id_760[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_680[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_542[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_544[au](UNKNOWN): boolean)
   ParentWaitingCondition: (id_762[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_683[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_764[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_686[au](FINISHED): state(FINISHED))))
   x: (id_357[iu](4): int)
   myStringArray: (id_358[au](UNKNOWN): Array: ["string 1", "string 2", UNKNOWN])
   myRealArray: (id_359[iu](UNKNOWN): Array: [1.1, 2.2, UNKNOWN])
   myIntegerArray: (id_360[iu](UNKNOWN): Array: [1, 2, UNKNOWN])
   myBooleanArray: (id_361[au](UNKNOWN): Array: [true, false, UNKNOWN])
  }
  testCallStringArrayFunction{
   State: (id_552[au](WAITING): state(WAITING)) (0)
   SkipCondition: (id_569[au](0): boolean)
   StartCondition: (id_789[au](0): ((id_791[au](UNKNOWN): (id_794[au](UNKNOWN): ((id_506[au](UNKNOWN):  outcome) == (id_793[au](SUCCESS):  outcome)))) && (id_796[au](0): ((id_798[au](string 2): ArrayElement: (id_800[au](myStringArray): string)[(id_801[au](1): int)]) == (id_802[au](new string 2): string))))
   EndCondition: (id_573[au](1): boolean)
   InvariantCondition: (id_575[au](1): boolean)
   PreCondition: (id_577[au](1): boolean)
   PostCondition: (id_579[au](1): boolean)
   RepeatCondition: (id_581[au](0): boolean)
   AncestorInvariantCondition: (id_775[au](1): (TransparentWrapper(id_771[auT]{1}((id_343[au](1): boolean)) && TransparentWrapper(id_773[auT]{1}((id_335[au](1): boolean)))
   AncestorEndCondition: (id_781[au](0): (TransparentWrapper(id_777[auT]{0}((id_345[au](0): boolean)) || TransparentWrapper(id_779[auT]{0}((id_600[au](0): childrenFinished(1:5))))
   ParentExecutingCondition: (id_783[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_680[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_589[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_591[au](UNKNOWN): boolean)
   ParentWaitingCondition: (id_785[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_683[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_787[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_686[au](FINISHED): state(FINISHED))))
   x: (id_357[iu](4): int)
   myStringArray: (id_358[au](UNKNOWN): Array: ["string 1", "string 2", UNKNOWN])
   myRealArray: (id_359[iu](UNKNOWN): Array: [1.1, 2.2, UNKNOWN])
   myIntegerArray: (id_360[iu](UNKNOWN): Array: [1, 2, UNKNOWN])
   myBooleanArray: (id_361[au](UNKNOWN): Array: [true, false, UNKNOWN])
  }
}

[Test:testOutput]Sending command result boolArrayCommand() = 111
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 3
[PlexilExec:cycle]==>End cycle 3
[PlexilExec:printPlan]
TestArrays{
 State: (id_312[au](EXECUTING): state(EXECUTING)) (0)
 SkipCondition: (id_329[au](0): boolean)
 StartCondition: (id_603[iu](UNKNOWN): ((id_605[iu](UNKNOWN): ((id_607[iu](UNKNOWN): ArrayElement: (id_609[iu](UNKNOWN): string)[(id_610[iu](0): int)]) == (id_611[iu](UNKNOWN): string))) && (id_612[iu](UNKNOWN): !(id_614[iu](UNKNOWN): isknown((id_616[iu](UNKNOWN): ArrayElement: (id_618[iu](UNKNOWN): string)[(id_619[iu](2): int)])))) && (id_620[iu](UNKNOWN): ((id_622[iu](UNKNOWN): ArrayElement: (id_624[iu](UNKNOWN): string)[(id_625[iu](0): int)]) == (id_626[iu](1.1): real))) && (id_627[iu](UNKNOWN): !(id_629[iu](UNKNOWN): isknown((id_631[iu](UNKNOWN): ArrayElement: (id_633[iu](UNKNOWN): string)[(id_634[iu](2): int)])))) && (id_635[iu](UNKNOWN): ((id_637[iu](UNKNOWN): ArrayElement: (id_639[iu](UNKNOWN): string)[(id_640[iu](0): int)]) == (id_641[iu](1): int))) && (id_642[iu](UNKNOWN): !(id_644[iu](UNKNOWN): isknown((id_646[iu](UNKNOWN): ArrayElement: (id_648[iu](UNKNOWN): string)[(id_649[iu](2): int)])))) && (id_650[iu](UNKNOWN): ArrayElement: (id_652[iu](UNKNOWN): string)[(id_653[iu](0): int)]) && (id_654[iu](UNKNOWN): !(id_656[iu](UNKNOWN): ArrayElement: (id_658[iu](UNKNOWN): string)[(id_659[iu](1): int)])) && (id_660[iu](UNKNOWN): !(id_662[iu](UNKNOWN): isknown((id_664[iu](UNKNOWN): ArrayElement: (id_666[iu](UNKNOWN): string)[(id_667[iu](2): int)])))))
 EndCondition: (id_600[au](0): childrenFinished(1:5))
 InvariantCondition: (id_335[au](1): boolean)
 PreCondition: (id_337[au](1): boolean)
 PostCondition: (id_339[au](1): boolean)
 RepeatCondition: (id_341[au](0): boolean)
 AncestorInvariantCondition: (id_343[au](1): boolean)
 AncestorEndCondition: (id_345[au](0): boolean)
 ParentExecutingCondition: (id_347[au](1): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_597[iu](UNKNOWN): childrenWaitingOrFinished(0:5))
 AbortCompleteCondition: (id_351[au](UNKNOWN): boolean)
 ParentWaitingCondition: (id_353[au](0): boolean)
 ParentFinishedCondition: (id_355[au](0): boolean)
 x: (id_357[iu](4): int)
 myStringArray: (id_358[au](UNKNOWN): Array: ["string 1", "string 2", UNKNOWN])
 myRealArray: (id_359[iu](UNKNOWN): Array: [1.1, 2.2, UNKNOWN])
 myIntegerArray: (id_360[iu](UNKNOWN): Array: [1, 2, UNKNOWN])
 myBooleanArray: (id_361[au](UNKNOWN): Array: [true, true, true])
  testIntStateVariable{
   State: (id_364[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_365[au](SUCCESS):  outcome)
   x: (id_357[iu](4): int)
   myStringArray: (id_358[au](UNKNOWN): Array: ["string 1", "string 2", UNKNOWN])
   myRealArray: (id_359[iu](UNKNOWN): Array: [1.1, 2.2, UNKNOWN])
   myIntegerArray: (id_360[iu](UNKNOWN): Array: [1, 2, UNKNOWN])
   myBooleanArray: (id_361[au](UNKNOWN): Array: [true, true, true])
  }
  callBoolArrayCommand{
   State: (id_411[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_428[au](0): boolean)
   StartCondition: (id_430[au](1): boolean)
   EndCondition: (id_715[au](UNKNOWN): ((id_714[au](UNKNOWN): boolean) && (id_432[au](1): boolean))
   InvariantCondition: (id_434[au](1): boolean)
   PreCondition: (id_436[au](1): boolean)
   PostCondition: (id_438[au](1): boolean)
   RepeatCondition: (id_440[au](0): boolean)
   AncestorInvariantCondition: (id_699[au](1): (TransparentWrapper(id_695[auT]{1}((id_343[au](1): boolean)) && TransparentWrapper(id_697[auT]{1}((id_335[au](1): boolean)))
   AncestorEndCondition: (id_705[iu](UNKNOWN): (TransparentWrapper(id_701[iuT]{0}((id_345[au](0): boolean)) || TransparentWrapper(id_703[iuT]{0}((id_600[au](0): childrenFinished(1:5))))
   ParentExecutingCondition: (id_707[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_680[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_448[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_713[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_709[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_683[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_711[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_686[au](FINISHED): state(FINISHED))))
   x: (id_357[iu](4): int)
   myStringArray: (id_358[au](UNKNOWN): Array: ["string 1", "string 2", UNKNOWN])
   myRealArray: (id_359[iu](UNKNOWN): Array: [1.1, 2.2, UNKNOWN])
   myIntegerArray: (id_360[iu](UNKNOWN): Array: [1, 2, UNKNOWN])
   myBooleanArray: (id_361[au](UNKNOWN): Array: [true, true, true])
  }
  testCallBoolArrayCommand{
   State: (id_458[au](WAITING): state(WAITING)) (0)
   SkipCondition: (id_475[au](0): boolean)
   StartCondition: (id_737[au](UNKNOWN): ((id_739[au](UNKNOWN): (id_742[au](UNKNOWN): ((id_412[au](UNKNOWN):  outcome) == (id_741[au](SUCCESS):  outcome)))) && (id_744[au](1): ArrayElement: (id_746[au](myBooleanArray): string)[(id_747[au](1): int)]))
   EndCondition: (id_479[au](1): boolean)
   InvariantCondition: (id_481[au](1): boolean)
   PreCondition: (id_483[au](1): boolean)
   PostCondition: (id_485[au](1): boolean)
   RepeatCondition: (id_487[au](0): boolean)
   AncestorInvariantCondition: (id_723[au](1): (TransparentWrapper(id_719[auT]{1}((id_343[au](1): boolean)) && TransparentWrapper(id_721[auT]{1}((id_335[au](1): boolean)))
   AncestorEndCondition: (id_729[au](0): (TransparentWrapper(id_725[auT]{0}((id_345[au](0): boolean)) || TransparentWrapper(id_727[auT]{0}((id_600[au](0): childrenFinished(1:5))))
   ParentExecutingCondition: (id_731[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_680[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_495[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_497[au](UNKNOWN): boolean)
   ParentWaitingCondition: (id_733[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_683[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_735[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_686[au](FINISHED): state(FINISHED))))
   x: (id_357[iu](4): int)
   myStringArray: (id_358[au](UNKNOWN): Array: ["string 1", "string 2", UNKNOWN])
   myRealArray: (id_359[iu](UNKNOWN): Array: [1.1, 2.2, UNKNOWN])
   myIntegerArray: (id_360[iu](UNKNOWN): Array: [1, 2, UNKNOWN])
   myBooleanArray: (id_361[au](UNKNOWN): Array: [true, true, true])
  }
  callStringArrayFunction{
   State: (id_505[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_522[au](0): boolean)
   StartCondition: (id_524[au](1): boolean)
   EndCondition: (id_767[au](UNKNOWN): ((id_766[au](UNKNOWN): boolean) && (id_526[au](1): boolean))
   InvariantCondition: (id_528[au](1): boolean)
   PreCondition: (id_530[au](1): boolean)
   PostCondition: (id_532[au](1): boolean)
   RepeatCondition: (id_534[au](0): boolean)
   AncestorInvariantCondition: (id_752[au](1): (TransparentWrapper(id_748[auT]{1}((id_343[au](1): boolean)) && TransparentWrapper(id_750[auT]{1}((id_335[au](1): boolean)))
   AncestorEndCondition: (id_758[iu](UNKNOWN): (TransparentWrapper(id_754[iuT]{0}((id_345[au](0): boolean)) || TransparentWrapper(id_756[iuT]{0}((id_600[au](0): childrenFinished(1:5))))
   ParentExecutingCondition: (id_760[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_680[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_542[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_544[au](UNKNOWN): boolean)
   ParentWaitingCondition: (id_762[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_683[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_764[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_686[au](FINISHED): state(FINISHED))))
   x: (id_357[iu](4): int)
   myStringArray: (id_358[au](UNKNOWN): Array: ["string 1", "string 2", UNKNOWN])
   myRealArray: (id_359[iu](UNKNOWN): Array: [1.1, 2.2, UNKNOWN])
   myIntegerArray: (id_360[iu](UNKNOWN): Array: [1, 2, UNKNOWN])
   myBooleanArray: (id_361[au](UNKNOWN): Array: [true, true, true])
  }
  testCallStringArrayFunction{
   State: (id_552[au](WAITING): state(WAITING)) (0)
   SkipCondition: (id_569[au](0): boolean)
   StartCondition: (id_789[au](0): ((id_791[au](UNKNOWN): (id_794[au](UNKNOWN): ((id_506[au](UNKNOWN):  outcome) == (id_793[au](SUCCESS):  outcome)))) && (id_796[au](0): ((id_798[au](string 2): ArrayElement: (id_800[au](myStringArray): string)[(id_801[au](1): int)]) == (id_802[au](new string 2): string))))
   EndCondition: (id_573[au](1): boolean)
   InvariantCondition: (id_575[au](1): boolean)
   PreCondition: (id_577[au](1): boolean)
   PostCondition: (id_579[au](1): boolean)
   RepeatCondition: (id_581[au](0): boolean)
   AncestorInvariantCondition: (id_775[au](1): (TransparentWrapper(id_771[auT]{1}((id_343[au](1): boolean)) && TransparentWrapper(id_773[auT]{1}((id_335[au](1): boolean)))
   AncestorEndCondition: (id_781[au](0): (TransparentWrapper(id_777[auT]{0}((id_345[au](0): boolean)) || TransparentWrapper(id_779[auT]{0}((id_600[au](0): childrenFinished(1:5))))
   ParentExecutingCondition: (id_783[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_680[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_589[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_591[au](UNKNOWN): boolean)
   ParentWaitingCondition: (id_785[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_683[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_787[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_686[au](FINISHED): state(FINISHED))))
   x: (id_357[iu](4): int)
   myStringArray: (id_358[au](UNKNOWN): Array: ["string 1", "string 2", UNKNOWN])
   myRealArray: (id_359[iu](UNKNOWN): Array: [1.1, 2.2, UNKNOWN])
   myIntegerArray: (id_360[iu](UNKNOWN): Array: [1, 2, UNKNOWN])
   myBooleanArray: (id_361[au](UNKNOWN): Array: [true, true, true])
  }
}

[Test:testOutput]Sending command ACK boolArrayCommand() = 1
[PlexilExec:handleConditionsChanged]Node callBoolArrayCommand had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'callBoolArrayCommand' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'callBoolArrayCommand' on the state change queue in position 13
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 4
[PlexilExec:step][4:0] State change queue: callBoolArrayCommand 
[PlexilExec:lock]Locking node callBoolArrayCommand
[PlexilExec:step][4:0:0] Transitioning node callBoolArrayCommand
[PlexilExec:handleConditionsChanged]Node testCallBoolArrayCommand had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'testCallBoolArrayCommand' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'testCallBoolArrayCommand' on the state change queue in position 14
[PlexilExec:handleConditionsChanged]Node callBoolArrayCommand had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'callBoolArrayCommand' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'callBoolArrayCommand' on the state change queue in position 15
[PlexilExec:unlock]Unlocking node callBoolArrayCommand
[PlexilExec:step][4:1] State change queue: testCallBoolArrayCommand callBoolArrayCommand 
[PlexilExec:lock]Locking node testCallBoolArrayCommand
[PlexilExec:lock]Locking node callBoolArrayCommand
[PlexilExec:step][4:1:0] Transitioning node testCallBoolArrayCommand
[PlexilExec:handleConditionsChanged]Node testCallBoolArrayCommand had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'testCallBoolArrayCommand' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'testCallBoolArrayCommand' on the state change queue in position 16
[PlexilExec:step][4:1:1] Transitioning node callBoolArrayCommand
[PlexilExec:handleConditionsChanged]Node callBoolArrayCommand had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'callBoolArrayCommand' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node testCallBoolArrayCommand
[PlexilExec:unlock]Unlocking node callBoolArrayCommand
[PlexilExec:step][4:2] State change queue: testCallBoolArrayCommand 
[PlexilExec:lock]Locking node testCallBoolArrayCommand
[PlexilExec:step][4:2:0] Transitioning node testCallBoolArrayCommand
[PlexilExec:handleConditionsChanged]Node testCallBoolArrayCommand had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'testCallBoolArrayCommand' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'testCallBoolArrayCommand' on the state change queue in position 17
[PlexilExec:unlock]Unlocking node testCallBoolArrayCommand
[PlexilExec:step][4:3] State change queue: testCallBoolArrayCommand 
[PlexilExec:lock]Locking node testCallBoolArrayCommand
[PlexilExec:step][4:3:0] Transitioning node testCallBoolArrayCommand
[PlexilExec:handleConditionsChanged]Node testCallBoolArrayCommand had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'testCallBoolArrayCommand' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node testCallBoolArrayCommand
[PlexilExec:cycle]==>End cycle 4
[PlexilExec:printPlan]
TestArrays{
 State: (id_312[au](EXECUTING): state(EXECUTING)) (0)
 SkipCondition: (id_329[au](0): boolean)
 StartCondition: (id_603[iu](UNKNOWN): ((id_605[iu](UNKNOWN): ((id_607[iu](UNKNOWN): ArrayElement: (id_609[iu](UNKNOWN): string)[(id_610[iu](0): int)]) == (id_611[iu](UNKNOWN): string))) && (id_612[iu](UNKNOWN): !(id_614[iu](UNKNOWN): isknown((id_616[iu](UNKNOWN): ArrayElement: (id_618[iu](UNKNOWN): string)[(id_619[iu](2): int)])))) && (id_620[iu](UNKNOWN): ((id_622[iu](UNKNOWN): ArrayElement: (id_624[iu](UNKNOWN): string)[(id_625[iu](0): int)]) == (id_626[iu](1.1): real))) && (id_627[iu](UNKNOWN): !(id_629[iu](UNKNOWN): isknown((id_631[iu](UNKNOWN): ArrayElement: (id_633[iu](UNKNOWN): string)[(id_634[iu](2): int)])))) && (id_635[iu](UNKNOWN): ((id_637[iu](UNKNOWN): ArrayElement: (id_639[iu](UNKNOWN): string)[(id_640[iu](0): int)]) == (id_641[iu](1): int))) && (id_642[iu](UNKNOWN): !(id_644[iu](UNKNOWN): isknown((id_646[iu](UNKNOWN): ArrayElement: (id_648[iu](UNKNOWN): string)[(id_649[iu](2): int)])))) && (id_650[iu](UNKNOWN): ArrayElement: (id_652[iu](UNKNOWN): string)[(id_653[iu](0): int)]) && (id_654[iu](UNKNOWN): !(id_656[iu](UNKNOWN): ArrayElement: (id_658[iu](UNKNOWN): string)[(id_659[iu](1): int)])) && (id_660[iu](UNKNOWN): !(id_662[iu](UNKNOWN): isknown((id_664[iu](UNKNOWN): ArrayElement: (id_666[iu](UNKNOWN): string)[(id_667[iu](2): int)])))))
 EndCondition: (id_600[au](0): childrenFinished(3:5))
 InvariantCondition: (id_335[au](1): boolean)
 PreCondition: (id_337[au](1): boolean)
 PostCondition: (id_339[au](1): boolean)
 RepeatCondition: (id_341[au](0): boolean)
 AncestorInvariantCondition: (id_343[au](1): boolean)
 AncestorEndCondition: (id_345[au](0): boolean)
 ParentExecutingCondition: (id_347[au](1): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_597[iu](UNKNOWN): childrenWaitingOrFinished(0:5))
 AbortCompleteCondition: (id_351[au](UNKNOWN): boolean)
 ParentWaitingCondition: (id_353[au](0): boolean)
 ParentFinishedCondition: (id_355[au](0): boolean)
 x: (id_357[iu](4): int)
 myStringArray: (id_358[au](UNKNOWN): Array: ["string 1", "string 2", UNKNOWN])
 myRealArray: (id_359[iu](UNKNOWN): Array: [1.1, 2.2, UNKNOWN])
 myIntegerArray: (id_360[iu](UNKNOWN): Array: [1, 2, UNKNOWN])
 myBooleanArray: (id_361[iu](UNKNOWN): Array: [true, true, true])
  testIntStateVariable{
   State: (id_364[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_365[au](SUCCESS):  outcome)
   x: (id_357[iu](4): int)
   myStringArray: (id_358[au](UNKNOWN): Array: ["string 1", "string 2", UNKNOWN])
   myRealArray: (id_359[iu](UNKNOWN): Array: [1.1, 2.2, UNKNOWN])
   myIntegerArray: (id_360[iu](UNKNOWN): Array: [1, 2, UNKNOWN])
   myBooleanArray: (id_361[iu](UNKNOWN): Array: [true, true, true])
  }
  callBoolArrayCommand{
   State: (id_411[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_412[au](SUCCESS):  outcome)
   x: (id_357[iu](4): int)
   myStringArray: (id_358[au](UNKNOWN): Array: ["string 1", "string 2", UNKNOWN])
   myRealArray: (id_359[iu](UNKNOWN): Array: [1.1, 2.2, UNKNOWN])
   myIntegerArray: (id_360[iu](UNKNOWN): Array: [1, 2, UNKNOWN])
   myBooleanArray: (id_361[iu](UNKNOWN): Array: [true, true, true])
  }
  testCallBoolArrayCommand{
   State: (id_458[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_459[au](SUCCESS):  outcome)
   x: (id_357[iu](4): int)
   myStringArray: (id_358[au](UNKNOWN): Array: ["string 1", "string 2", UNKNOWN])
   myRealArray: (id_359[iu](UNKNOWN): Array: [1.1, 2.2, UNKNOWN])
   myIntegerArray: (id_360[iu](UNKNOWN): Array: [1, 2, UNKNOWN])
   myBooleanArray: (id_361[iu](UNKNOWN): Array: [true, true, true])
  }
  callStringArrayFunction{
   State: (id_505[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_522[au](0): boolean)
   StartCondition: (id_524[au](1): boolean)
   EndCondition: (id_767[au](UNKNOWN): ((id_766[au](UNKNOWN): boolean) && (id_526[au](1): boolean))
   InvariantCondition: (id_528[au](1): boolean)
   PreCondition: (id_530[au](1): boolean)
   PostCondition: (id_532[au](1): boolean)
   RepeatCondition: (id_534[au](0): boolean)
   AncestorInvariantCondition: (id_752[au](1): (TransparentWrapper(id_748[auT]{1}((id_343[au](1): boolean)) && TransparentWrapper(id_750[auT]{1}((id_335[au](1): boolean)))
   AncestorEndCondition: (id_758[iu](UNKNOWN): (TransparentWrapper(id_754[iuT]{0}((id_345[au](0): boolean)) || TransparentWrapper(id_756[iuT]{0}((id_600[au](0): childrenFinished(3:5))))
   ParentExecutingCondition: (id_760[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_680[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_542[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_544[au](UNKNOWN): boolean)
   ParentWaitingCondition: (id_762[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_683[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_764[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_686[au](FINISHED): state(FINISHED))))
   x: (id_357[iu](4): int)
   myStringArray: (id_358[au](UNKNOWN): Array: ["string 1", "string 2", UNKNOWN])
   myRealArray: (id_359[iu](UNKNOWN): Array: [1.1, 2.2, UNKNOWN])
   myIntegerArray: (id_360[iu](UNKNOWN): Array: [1, 2, UNKNOWN])
   myBooleanArray: (id_361[iu](UNKNOWN): Array: [true, true, true])
  }
  testCallStringArrayFunction{
   State: (id_552[au](WAITING): state(WAITING)) (0)
   SkipCondition: (id_569[au](0): boolean)
   StartCondition: (id_789[au](0): ((id_791[au](UNKNOWN): (id_794[au](UNKNOWN): ((id_506[au](UNKNOWN):  outcome) == (id_793[au](SUCCESS):  outcome)))) && (id_796[au](0): ((id_798[au](string 2): ArrayElement: (id_800[au](myStringArray): string)[(id_801[au](1): int)]) == (id_802[au](new string 2): string))))
   EndCondition: (id_573[au](1): boolean)
   InvariantCondition: (id_575[au](1): boolean)
   PreCondition: (id_577[au](1): boolean)
   PostCondition: (id_579[au](1): boolean)
   RepeatCondition: (id_581[au](0): boolean)
   AncestorInvariantCondition: (id_775[au](1): (TransparentWrapper(id_771[auT]{1}((id_343[au](1): boolean)) && TransparentWrapper(id_773[auT]{1}((id_335[au](1): boolean)))
   AncestorEndCondition: (id_781[au](0): (TransparentWrapper(id_777[auT]{0}((id_345[au](0): boolean)) || TransparentWrapper(id_779[auT]{0}((id_600[au](0): childrenFinished(3:5))))
   ParentExecutingCondition: (id_783[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_680[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_589[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_591[au](UNKNOWN): boolean)
   ParentWaitingCondition: (id_785[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_683[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_787[iu](UNKNOWN): ((id_312[au](EXECUTING): state(EXECUTING)) == (id_686[au](FINISHED): state(FINISHED))))
   x: (id_357[iu](4): int)
   myStringArray: (id_358[au](UNKNOWN): Array: ["string 1", "string 2", UNKNOWN])
   myRealArray: (id_359[iu](UNKNOWN): Array: [1.1, 2.2, UNKNOWN])
   myIntegerArray: (id_360[iu](UNKNOWN): Array: [1, 2, UNKNOWN])
   myBooleanArray: (id_361[iu](UNKNOWN): Array: [true, true, true])
  }
}

[Test:testOutput]Sending functionCall result stringArrayFunction() = (string)new string 1(string)new string 2(string)new strign 3
[Test:testOutput]Sending function call ACK stringArrayFunction() = (string)new string 1(string)new string 2(string)new strign 3
[PlexilExec:handleConditionsChanged]Node callStringArrayFunction had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'callStringArrayFunction' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'callStringArrayFunction' on the state change queue in position 18
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 5
[PlexilExec:step][5:0] State change queue: callStringArrayFunction 
[PlexilExec:lock]Locking node callStringArrayFunction
[PlexilExec:step][5:0:0] Transitioning node callStringArrayFunction
[PlexilExec:handleConditionsChanged]Node testCallStringArrayFunction had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'testCallStringArrayFunction' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'testCallStringArrayFunction' on the state change queue in position 19
[PlexilExec:handleConditionsChanged]Node callStringArrayFunction had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'callStringArrayFunction' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'callStringArrayFunction' on the state change queue in position 20
[PlexilExec:unlock]Unlocking node callStringArrayFunction
[PlexilExec:step][5:1] State change queue: testCallStringArrayFunction callStringArrayFunction 
[PlexilExec:lock]Locking node testCallStringArrayFunction
[PlexilExec:lock]Locking node callStringArrayFunction
[PlexilExec:step][5:1:0] Transitioning node testCallStringArrayFunction
[PlexilExec:handleConditionsChanged]Node testCallStringArrayFunction had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'testCallStringArrayFunction' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'testCallStringArrayFunction' on the state change queue in position 21
[PlexilExec:step][5:1:1] Transitioning node callStringArrayFunction
[PlexilExec:handleConditionsChanged]Node callStringArrayFunction had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'callStringArrayFunction' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node testCallStringArrayFunction
[PlexilExec:unlock]Unlocking node callStringArrayFunction
[PlexilExec:step][5:2] State change queue: testCallStringArrayFunction 
[PlexilExec:lock]Locking node testCallStringArrayFunction
[PlexilExec:step][5:2:0] Transitioning node testCallStringArrayFunction
[PlexilExec:handleConditionsChanged]Node testCallStringArrayFunction had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'testCallStringArrayFunction' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'testCallStringArrayFunction' on the state change queue in position 22
[PlexilExec:unlock]Unlocking node testCallStringArrayFunction
[PlexilExec:step][5:3] State change queue: testCallStringArrayFunction 
[PlexilExec:lock]Locking node testCallStringArrayFunction
[PlexilExec:step][5:3:0] Transitioning node testCallStringArrayFunction
[PlexilExec:handleConditionsChanged]Node TestArrays had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'TestArrays' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'TestArrays' on the state change queue in position 23
[PlexilExec:handleConditionsChanged]Node testCallStringArrayFunction had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'testCallStringArrayFunction' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node testCallStringArrayFunction
[PlexilExec:step][5:4] State change queue: TestArrays 
[PlexilExec:lock]Locking node TestArrays
[PlexilExec:step][5:4:0] Transitioning node TestArrays
[PlexilExec:handleConditionsChanged]Node TestArrays had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'TestArrays' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'TestArrays' on the state change queue in position 24
[PlexilExec:unlock]Unlocking node TestArrays
[PlexilExec:step][5:5] State change queue: TestArrays 
[PlexilExec:lock]Locking node TestArrays
[PlexilExec:step][5:5:0] Transitioning node TestArrays
[PlexilExec:handleConditionsChanged]Node TestArrays had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'TestArrays' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'TestArrays' on the state change queue in position 25
[PlexilExec:unlock]Unlocking node TestArrays
[PlexilExec:step][5:6] State change queue: TestArrays 
[PlexilExec:lock]Locking node TestArrays
[PlexilExec:step][5:6:0] Transitioning node TestArrays
[PlexilExec:handleConditionsChanged]Node TestArrays had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'TestArrays' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node TestArrays
[PlexilExec:cycle]==>End cycle 5
[PlexilExec:printPlan]
TestArrays{
 State: (id_312[au](FINISHED): state(FINISHED)) (0)
 Outcome: (id_313[au](SUCCESS):  outcome)
 x: (id_357[iu](4): int)
 myStringArray: (id_358[iu](UNKNOWN): Array: ["new string 1", "new string 2", "new strign 3"])
 myRealArray: (id_359[iu](UNKNOWN): Array: [1.1, 2.2, UNKNOWN])
 myIntegerArray: (id_360[iu](UNKNOWN): Array: [1, 2, UNKNOWN])
 myBooleanArray: (id_361[iu](UNKNOWN): Array: [true, true, true])
  testIntStateVariable{
   State: (id_364[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_365[au](SUCCESS):  outcome)
   x: (id_357[iu](4): int)
   myStringArray: (id_358[iu](UNKNOWN): Array: ["new string 1", "new string 2", "new strign 3"])
   myRealArray: (id_359[iu](UNKNOWN): Array: [1.1, 2.2, UNKNOWN])
   myIntegerArray: (id_360[iu](UNKNOWN): Array: [1, 2, UNKNOWN])
   myBooleanArray: (id_361[iu](UNKNOWN): Array: [true, true, true])
  }
  callBoolArrayCommand{
   State: (id_411[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_412[au](SUCCESS):  outcome)
   x: (id_357[iu](4): int)
   myStringArray: (id_358[iu](UNKNOWN): Array: ["new string 1", "new string 2", "new strign 3"])
   myRealArray: (id_359[iu](UNKNOWN): Array: [1.1, 2.2, UNKNOWN])
   myIntegerArray: (id_360[iu](UNKNOWN): Array: [1, 2, UNKNOWN])
   myBooleanArray: (id_361[iu](UNKNOWN): Array: [true, true, true])
  }
  testCallBoolArrayCommand{
   State: (id_458[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_459[au](SUCCESS):  outcome)
   x: (id_357[iu](4): int)
   myStringArray: (id_358[iu](UNKNOWN): Array: ["new string 1", "new string 2", "new strign 3"])
   myRealArray: (id_359[iu](UNKNOWN): Array: [1.1, 2.2, UNKNOWN])
   myIntegerArray: (id_360[iu](UNKNOWN): Array: [1, 2, UNKNOWN])
   myBooleanArray: (id_361[iu](UNKNOWN): Array: [true, true, true])
  }
  callStringArrayFunction{
   State: (id_505[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_506[au](SUCCESS):  outcome)
   x: (id_357[iu](4): int)
   myStringArray: (id_358[iu](UNKNOWN): Array: ["new string 1", "new string 2", "new strign 3"])
   myRealArray: (id_359[iu](UNKNOWN): Array: [1.1, 2.2, UNKNOWN])
   myIntegerArray: (id_360[iu](UNKNOWN): Array: [1, 2, UNKNOWN])
   myBooleanArray: (id_361[iu](UNKNOWN): Array: [true, true, true])
  }
  testCallStringArrayFunction{
   State: (id_552[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_553[au](SUCCESS):  outcome)
   x: (id_357[iu](4): int)
   myStringArray: (id_358[iu](UNKNOWN): Array: ["new string 1", "new string 2", "new strign 3"])
   myRealArray: (id_359[iu](UNKNOWN): Array: [1.1, 2.2, UNKNOWN])
   myIntegerArray: (id_360[iu](UNKNOWN): Array: [1, 2, UNKNOWN])
   myBooleanArray: (id_361[iu](UNKNOWN): Array: [true, true, true])
  }
}

