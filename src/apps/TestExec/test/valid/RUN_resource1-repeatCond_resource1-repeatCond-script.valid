[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:addPlan]Added plan: 
SimpleTask{
 State: (id_270[au](INACTIVE): state(INACTIVE)) (inf)
  PickupObject{
   State: (id_322[au](INACTIVE): state(INACTIVE)) (inf)
  }
  ProcessImage{
   State: (id_376[au](INACTIVE): state(INACTIVE)) (inf)
  }
  TakePicture{
   State: (id_429[au](INACTIVE): state(INACTIVE)) (inf)
  }
}

[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 1
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 1
[PlexilExec:step][1:0] State change queue: SimpleTask 
[PlexilExec:lock]Locking node SimpleTask
[PlexilExec:step][1:0:0] Transitioning node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:unlock]Unlocking node SimpleTask
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 2
[PlexilExec:step][1:1] State change queue: SimpleTask 
[PlexilExec:lock]Locking node SimpleTask
[PlexilExec:step][1:1:0] Transitioning node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node PickupObject
[PlexilExec:notifyNodeConditionChanged] for node ProcessImage
[PlexilExec:notifyNodeConditionChanged] for node TakePicture
[PlexilExec:handleNeedsExecution]Storing action for node 'SimpleTask' of type 'NodeList' to be executed.
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:unlock]Unlocking node SimpleTask
[PlexilExec:handleConditionsChanged]Node PickupObject had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'PickupObject' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'PickupObject' on the state change queue in position 3
[PlexilExec:handleConditionsChanged]Node ProcessImage had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'ProcessImage' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'ProcessImage' on the state change queue in position 4
[PlexilExec:handleConditionsChanged]Node TakePicture had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'TakePicture' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'TakePicture' on the state change queue in position 5
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'SimpleTask' was previously eligible to transition but isn't now.
[PlexilExec:step][1:2] State change queue: PickupObject ProcessImage TakePicture 
[PlexilExec:lock]Locking node PickupObject
[PlexilExec:lock]Locking node ProcessImage
[PlexilExec:lock]Locking node TakePicture
[PlexilExec:step][1:2:0] Transitioning node PickupObject
[PlexilExec:notifyNodeConditionChanged] for node PickupObject
[PlexilExec:step][1:2:1] Transitioning node ProcessImage
[PlexilExec:notifyNodeConditionChanged] for node ProcessImage
[PlexilExec:step][1:2:2] Transitioning node TakePicture
[PlexilExec:notifyNodeConditionChanged] for node TakePicture
[PlexilExec:unlock]Unlocking node PickupObject
[PlexilExec:unlock]Unlocking node ProcessImage
[PlexilExec:unlock]Unlocking node TakePicture
[PlexilExec:handleConditionsChanged]Node PickupObject had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'PickupObject' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'PickupObject' on the state change queue in position 6
[PlexilExec:handleConditionsChanged]Node ProcessImage had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'ProcessImage' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'ProcessImage' on the state change queue in position 7
[PlexilExec:handleConditionsChanged]Node TakePicture had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'TakePicture' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'TakePicture' on the state change queue in position 8
[PlexilExec:step][1:3] State change queue: PickupObject ProcessImage TakePicture 
[PlexilExec:lock]Locking node PickupObject
[PlexilExec:lock]Locking node ProcessImage
[PlexilExec:lock]Locking node TakePicture
[PlexilExec:step][1:3:0] Transitioning node PickupObject
[PlexilExec:notifyNodeConditionChanged] for node PickupObject
[PlexilExec:handleNeedsExecution]Storing action for node 'PickupObject' of type 'Command' to be executed.
[PlexilExec:step][1:3:1] Transitioning node ProcessImage
[PlexilExec:notifyNodeConditionChanged] for node ProcessImage
[PlexilExec:handleNeedsExecution]Storing action for node 'ProcessImage' of type 'Command' to be executed.
[PlexilExec:step][1:3:2] Transitioning node TakePicture
[PlexilExec:notifyNodeConditionChanged] for node TakePicture
[PlexilExec:handleNeedsExecution]Storing action for node 'TakePicture' of type 'Command' to be executed.
[PlexilExec:unlock]Unlocking node PickupObject
[PlexilExec:unlock]Unlocking node ProcessImage
[PlexilExec:unlock]Unlocking node TakePicture
[PlexilExec:handleConditionsChanged]Node PickupObject had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'PickupObject' was previously eligible to transition but isn't now.
[PlexilExec:handleConditionsChanged]Node ProcessImage had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'ProcessImage' was previously eligible to transition but isn't now.
[PlexilExec:handleConditionsChanged]Node TakePicture had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'TakePicture' was previously eligible to transition but isn't now.
[Test:testOutput]Executing pickup_object(20) into (id_372[au](-1): int) with ack (id_516[au](UNKNOWN): string)
[Test:testOutput]Permission to execute process_image has been denied by the resource arbiter.
[PlexilExec:notifyNodeConditionChanged] for node ProcessImage
[Test:testOutput]Executing take_picture() into noId with ack (id_607[au](UNKNOWN): string)
[PlexilExec:cycle]==>End cycle 1
[PlexilExec:printPlan]
SimpleTask{
 State: (id_270[au](EXECUTING): state(EXECUTING)) (0)
 SkipCondition: (id_290[au](0): boolean)
 StartCondition: (id_292[au](1): boolean)
 EndCondition: (id_483[au](0): childrenFinished(0:3))
 InvariantCondition: (id_296[au](1): boolean)
 PreCondition: (id_298[au](1): boolean)
 PostCondition: (id_300[au](1): boolean)
 RepeatCondition: (id_302[au](0): boolean)
 AncestorInvariantCondition: (id_304[au](1): boolean)
 AncestorEndCondition: (id_306[au](0): boolean)
 ParentExecutingCondition: (id_308[au](1): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_480[iu](UNKNOWN): childrenWaitingOrFinished(0:3))
 AbortCompleteCondition: (id_312[au](UNKNOWN): boolean)
 ParentWaitingCondition: (id_314[au](0): boolean)
 ParentFinishedCondition: (id_316[au](0): boolean)
 CommandHandleReceivedCondition: (id_318[au](1): boolean)
 command_handle: (id_273[au](UNKNOWN):  command_handle)
  PickupObject{
   State: (id_322[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_342[au](0): boolean)
   StartCondition: (id_344[au](1): boolean)
   EndCondition: (id_523[au](0): ((id_519[au](0): interruptibleCommandHandleValues((id_516[au](UNKNOWN): string))) || (id_521[au](0): ((id_517[au](0): isknown((id_516[au](UNKNOWN): string))) && (id_507[au](0): ((id_509[au](10): int) == (id_372[au](-1): int)))))
   InvariantCondition: (id_348[au](1): boolean)
   PreCondition: (id_350[au](1): boolean)
   PostCondition: (id_510[au](UNKNOWN): (id_513[au](UNKNOWN): ((id_325[au](UNKNOWN):  command_handle) == (id_512[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_354[au](0): boolean)
   AncestorInvariantCondition: (id_490[au](1): (TransparentWrapper(id_486[auT]{1}((id_304[au](1): boolean)) && TransparentWrapper(id_488[auT]{1}((id_296[au](1): boolean)))
   AncestorEndCondition: (id_496[iu](UNKNOWN): (TransparentWrapper(id_492[iuT]{0}((id_306[au](0): boolean)) || TransparentWrapper(id_494[iuT]{0}((id_483[au](0): childrenFinished(0:3))))
   ParentExecutingCondition: (id_499[iu](UNKNOWN): ((id_270[au](EXECUTING): state(EXECUTING)) == (id_498[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_362[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_515[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_502[iu](UNKNOWN): ((id_270[au](EXECUTING): state(EXECUTING)) == (id_501[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_505[iu](UNKNOWN): ((id_270[au](EXECUTING): state(EXECUTING)) == (id_504[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_527[au](0): ((id_525[au](0): allCommandHandleValues((id_516[au](UNKNOWN): string))) && (id_370[au](1): boolean))
   command_handle: (id_325[au](UNKNOWN):  command_handle)
   returnValue: (id_372[au](-1): int)
   priority10: (id_373[au](10): int)
  }
  ProcessImage{
   State: (id_376[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_396[au](0): boolean)
   StartCondition: (id_398[au](1): boolean)
   EndCondition: (id_572[au](1): ((id_568[au](1): interruptibleCommandHandleValues((id_565[au](COMMAND_DENIED): string))) || (id_570[au](1): ((id_566[au](1): isknown((id_565[au](COMMAND_DENIED): string))) && (id_400[au](1): boolean)))
   InvariantCondition: (id_402[au](1): boolean)
   PreCondition: (id_404[au](1): boolean)
   PostCondition: (id_554[au](UNKNOWN): (id_557[au](UNKNOWN): ((id_379[au](UNKNOWN):  command_handle) == (id_556[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_559[iu](UNKNOWN): (id_562[iu](UNKNOWN): ((id_379[au](UNKNOWN):  command_handle) == (id_561[iu](UNKNOWN):  command_handle))))
   AncestorInvariantCondition: (id_540[au](1): (TransparentWrapper(id_536[auT]{1}((id_304[au](1): boolean)) && TransparentWrapper(id_538[auT]{1}((id_296[au](1): boolean)))
   AncestorEndCondition: (id_546[iu](UNKNOWN): (TransparentWrapper(id_542[iuT]{0}((id_306[au](0): boolean)) || TransparentWrapper(id_544[iuT]{0}((id_483[au](0): childrenFinished(0:3))))
   ParentExecutingCondition: (id_548[iu](UNKNOWN): ((id_270[au](EXECUTING): state(EXECUTING)) == (id_498[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_416[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_564[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_550[iu](UNKNOWN): ((id_270[au](EXECUTING): state(EXECUTING)) == (id_501[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_552[iu](UNKNOWN): ((id_270[au](EXECUTING): state(EXECUTING)) == (id_504[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_576[au](1): ((id_574[au](1): allCommandHandleValues((id_565[au](COMMAND_DENIED): string))) && (id_424[au](1): boolean))
   command_handle: (id_379[au](UNKNOWN):  command_handle)
   priority30: (id_426[au](30): int)
  }
  TakePicture{
   State: (id_429[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_449[au](0): boolean)
   StartCondition: (id_451[au](1): boolean)
   EndCondition: (id_614[au](0): ((id_610[au](0): interruptibleCommandHandleValues((id_607[au](UNKNOWN): string))) || (id_612[au](0): ((id_608[au](0): isknown((id_607[au](UNKNOWN): string))) && (id_453[au](1): boolean)))
   InvariantCondition: (id_455[au](1): boolean)
   PreCondition: (id_457[au](1): boolean)
   PostCondition: (id_601[au](UNKNOWN): (id_604[au](UNKNOWN): ((id_432[au](UNKNOWN):  command_handle) == (id_603[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_461[au](0): boolean)
   AncestorInvariantCondition: (id_587[au](1): (TransparentWrapper(id_583[auT]{1}((id_304[au](1): boolean)) && TransparentWrapper(id_585[auT]{1}((id_296[au](1): boolean)))
   AncestorEndCondition: (id_593[iu](UNKNOWN): (TransparentWrapper(id_589[iuT]{0}((id_306[au](0): boolean)) || TransparentWrapper(id_591[iuT]{0}((id_483[au](0): childrenFinished(0:3))))
   ParentExecutingCondition: (id_595[iu](UNKNOWN): ((id_270[au](EXECUTING): state(EXECUTING)) == (id_498[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_469[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_606[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_597[iu](UNKNOWN): ((id_270[au](EXECUTING): state(EXECUTING)) == (id_501[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_599[iu](UNKNOWN): ((id_270[au](EXECUTING): state(EXECUTING)) == (id_504[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_618[au](0): ((id_616[au](0): allCommandHandleValues((id_607[au](UNKNOWN): string))) && (id_477[au](1): boolean))
   command_handle: (id_432[au](UNKNOWN):  command_handle)
   v_priority: (id_479[au](10): int)
  }
}

[Test:testOutput]Sending command ACK pickup_object(20) = (string)COMMAND_SENT_TO_SYSTEM
[PlexilExec:notifyNodeConditionChanged] for node PickupObject
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 2
[PlexilExec:notifyNodeConditionChanged] for node ProcessImage
[PlexilExec:handleConditionsChanged]Node ProcessImage had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'ProcessImage' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'ProcessImage' on the state change queue in position 9
[PlexilExec:notifyNodeConditionChanged] for node PickupObject
[PlexilExec:step][2:0] State change queue: ProcessImage 
[PlexilExec:lock]Locking node ProcessImage
[PlexilExec:step][2:0:0] Transitioning node ProcessImage
[PlexilExec:notifyNodeConditionChanged] for node ProcessImage
[PlexilExec:unlock]Unlocking node ProcessImage
[PlexilExec:handleConditionsChanged]Node ProcessImage had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'ProcessImage' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'ProcessImage' on the state change queue in position 10
[PlexilExec:step][2:1] State change queue: ProcessImage 
[PlexilExec:lock]Locking node ProcessImage
[PlexilExec:step][2:1:0] Transitioning node ProcessImage
[PlexilExec:notifyNodeConditionChanged] for node ProcessImage
[PlexilExec:unlock]Unlocking node ProcessImage
[PlexilExec:handleConditionsChanged]Node ProcessImage had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'ProcessImage' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'ProcessImage' on the state change queue in position 11
[PlexilExec:step][2:2] State change queue: ProcessImage 
[PlexilExec:lock]Locking node ProcessImage
[PlexilExec:step][2:2:0] Transitioning node ProcessImage
[PlexilExec:notifyNodeConditionChanged] for node ProcessImage
[PlexilExec:handleNeedsExecution]Storing action for node 'ProcessImage' of type 'Command' to be executed.
[PlexilExec:unlock]Unlocking node ProcessImage
[PlexilExec:handleConditionsChanged]Node ProcessImage had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'ProcessImage' was previously eligible to transition but isn't now.
[Test:testOutput]Permission to execute process_image has been denied by the resource arbiter.
[PlexilExec:notifyNodeConditionChanged] for node ProcessImage
[PlexilExec:cycle]==>End cycle 2
[PlexilExec:printPlan]
SimpleTask{
 State: (id_270[au](EXECUTING): state(EXECUTING)) (0)
 SkipCondition: (id_290[au](0): boolean)
 StartCondition: (id_292[au](1): boolean)
 EndCondition: (id_483[au](0): childrenFinished(0:3))
 InvariantCondition: (id_296[au](1): boolean)
 PreCondition: (id_298[au](1): boolean)
 PostCondition: (id_300[au](1): boolean)
 RepeatCondition: (id_302[au](0): boolean)
 AncestorInvariantCondition: (id_304[au](1): boolean)
 AncestorEndCondition: (id_306[au](0): boolean)
 ParentExecutingCondition: (id_308[au](1): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_480[iu](UNKNOWN): childrenWaitingOrFinished(0:3))
 AbortCompleteCondition: (id_312[au](UNKNOWN): boolean)
 ParentWaitingCondition: (id_314[au](0): boolean)
 ParentFinishedCondition: (id_316[au](0): boolean)
 CommandHandleReceivedCondition: (id_318[au](1): boolean)
 command_handle: (id_273[au](UNKNOWN):  command_handle)
  PickupObject{
   State: (id_322[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_342[au](0): boolean)
   StartCondition: (id_344[au](1): boolean)
   EndCondition: (id_523[au](0): ((id_519[au](0): interruptibleCommandHandleValues((id_516[au](COMMAND_SENT_TO_SYSTEM): string))) || (id_521[au](0): ((id_517[au](1): isknown((id_516[au](COMMAND_SENT_TO_SYSTEM): string))) && (id_507[au](0): ((id_509[au](10): int) == (id_372[au](-1): int)))))
   InvariantCondition: (id_348[au](1): boolean)
   PreCondition: (id_350[au](1): boolean)
   PostCondition: (id_510[au](1): (id_513[au](1): ((id_325[au](COMMAND_SENT_TO_SYSTEM):  command_handle) == (id_512[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_354[au](0): boolean)
   AncestorInvariantCondition: (id_490[au](1): (TransparentWrapper(id_486[auT]{1}((id_304[au](1): boolean)) && TransparentWrapper(id_488[auT]{1}((id_296[au](1): boolean)))
   AncestorEndCondition: (id_496[iu](UNKNOWN): (TransparentWrapper(id_492[iuT]{0}((id_306[au](0): boolean)) || TransparentWrapper(id_494[iuT]{0}((id_483[au](0): childrenFinished(0:3))))
   ParentExecutingCondition: (id_499[iu](UNKNOWN): ((id_270[au](EXECUTING): state(EXECUTING)) == (id_498[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_362[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_515[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_502[iu](UNKNOWN): ((id_270[au](EXECUTING): state(EXECUTING)) == (id_501[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_505[iu](UNKNOWN): ((id_270[au](EXECUTING): state(EXECUTING)) == (id_504[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_527[au](1): ((id_525[au](1): allCommandHandleValues((id_516[au](COMMAND_SENT_TO_SYSTEM): string))) && (id_370[au](1): boolean))
   command_handle: (id_325[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   returnValue: (id_372[au](-1): int)
   priority10: (id_373[au](10): int)
  }
  ProcessImage{
   State: (id_376[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_396[au](0): boolean)
   StartCondition: (id_398[au](1): boolean)
   EndCondition: (id_572[au](1): ((id_568[au](1): interruptibleCommandHandleValues((id_565[au](COMMAND_DENIED): string))) || (id_570[au](1): ((id_566[au](1): isknown((id_565[au](COMMAND_DENIED): string))) && (id_400[au](1): boolean)))
   InvariantCondition: (id_402[au](1): boolean)
   PreCondition: (id_404[au](1): boolean)
   PostCondition: (id_554[au](UNKNOWN): (id_557[au](UNKNOWN): ((id_379[au](UNKNOWN):  command_handle) == (id_556[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_559[iu](UNKNOWN): (id_562[iu](UNKNOWN): ((id_379[au](UNKNOWN):  command_handle) == (id_561[iu](UNKNOWN):  command_handle))))
   AncestorInvariantCondition: (id_540[au](1): (TransparentWrapper(id_536[auT]{1}((id_304[au](1): boolean)) && TransparentWrapper(id_538[auT]{1}((id_296[au](1): boolean)))
   AncestorEndCondition: (id_546[iu](UNKNOWN): (TransparentWrapper(id_542[iuT]{0}((id_306[au](0): boolean)) || TransparentWrapper(id_544[iuT]{0}((id_483[au](0): childrenFinished(0:3))))
   ParentExecutingCondition: (id_548[iu](UNKNOWN): ((id_270[au](EXECUTING): state(EXECUTING)) == (id_498[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_416[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_564[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_550[iu](UNKNOWN): ((id_270[au](EXECUTING): state(EXECUTING)) == (id_501[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_552[iu](UNKNOWN): ((id_270[au](EXECUTING): state(EXECUTING)) == (id_504[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_576[au](1): ((id_574[au](1): allCommandHandleValues((id_565[au](COMMAND_DENIED): string))) && (id_424[au](1): boolean))
   command_handle: (id_379[au](UNKNOWN):  command_handle)
   priority30: (id_426[au](30): int)
  }
  TakePicture{
   State: (id_429[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_449[au](0): boolean)
   StartCondition: (id_451[au](1): boolean)
   EndCondition: (id_614[au](0): ((id_610[au](0): interruptibleCommandHandleValues((id_607[au](UNKNOWN): string))) || (id_612[au](0): ((id_608[au](0): isknown((id_607[au](UNKNOWN): string))) && (id_453[au](1): boolean)))
   InvariantCondition: (id_455[au](1): boolean)
   PreCondition: (id_457[au](1): boolean)
   PostCondition: (id_601[au](UNKNOWN): (id_604[au](UNKNOWN): ((id_432[au](UNKNOWN):  command_handle) == (id_603[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_461[au](0): boolean)
   AncestorInvariantCondition: (id_587[au](1): (TransparentWrapper(id_583[auT]{1}((id_304[au](1): boolean)) && TransparentWrapper(id_585[auT]{1}((id_296[au](1): boolean)))
   AncestorEndCondition: (id_593[iu](UNKNOWN): (TransparentWrapper(id_589[iuT]{0}((id_306[au](0): boolean)) || TransparentWrapper(id_591[iuT]{0}((id_483[au](0): childrenFinished(0:3))))
   ParentExecutingCondition: (id_595[iu](UNKNOWN): ((id_270[au](EXECUTING): state(EXECUTING)) == (id_498[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_469[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_606[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_597[iu](UNKNOWN): ((id_270[au](EXECUTING): state(EXECUTING)) == (id_501[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_599[iu](UNKNOWN): ((id_270[au](EXECUTING): state(EXECUTING)) == (id_504[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_618[au](0): ((id_616[au](0): allCommandHandleValues((id_607[au](UNKNOWN): string))) && (id_477[au](1): boolean))
   command_handle: (id_432[au](UNKNOWN):  command_handle)
   v_priority: (id_479[au](10): int)
  }
}

[Test:testOutput]Sending command ACK take_picture() = (string)COMMAND_SENT_TO_SYSTEM
[PlexilExec:notifyNodeConditionChanged] for node TakePicture
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 3
[PlexilExec:notifyNodeConditionChanged] for node ProcessImage
[PlexilExec:handleConditionsChanged]Node ProcessImage had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'ProcessImage' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'ProcessImage' on the state change queue in position 12
[PlexilExec:notifyNodeConditionChanged] for node TakePicture
[PlexilExec:handleConditionsChanged]Node TakePicture had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'TakePicture' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'TakePicture' on the state change queue in position 13
[PlexilExec:step][3:0] State change queue: ProcessImage TakePicture 
[PlexilExec:lock]Locking node ProcessImage
[PlexilExec:lock]Locking node TakePicture
[PlexilExec:step][3:0:0] Transitioning node ProcessImage
[PlexilExec:notifyNodeConditionChanged] for node ProcessImage
[PlexilExec:step][3:0:1] Transitioning node TakePicture
[PlexilExec:notifyNodeConditionChanged] for node TakePicture
[PlexilExec:unlock]Unlocking node ProcessImage
[PlexilExec:unlock]Unlocking node TakePicture
[PlexilExec:handleConditionsChanged]Node ProcessImage had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'ProcessImage' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'ProcessImage' on the state change queue in position 14
[PlexilExec:handleConditionsChanged]Node TakePicture had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'TakePicture' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'TakePicture' on the state change queue in position 15
[PlexilExec:step][3:1] State change queue: ProcessImage TakePicture 
[PlexilExec:lock]Locking node ProcessImage
[PlexilExec:lock]Locking node TakePicture
[PlexilExec:step][3:1:0] Transitioning node ProcessImage
[PlexilExec:notifyNodeConditionChanged] for node ProcessImage
[PlexilExec:step][3:1:1] Transitioning node TakePicture
[PlexilExec:notifyNodeConditionChanged] for node TakePicture
[PlexilExec:unlock]Unlocking node ProcessImage
[PlexilExec:unlock]Unlocking node TakePicture
[PlexilExec:handleConditionsChanged]Node ProcessImage had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'ProcessImage' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'ProcessImage' on the state change queue in position 16
[PlexilExec:handleConditionsChanged]Node TakePicture had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'TakePicture' was previously eligible to transition but isn't now.
[PlexilExec:step][3:2] State change queue: ProcessImage 
[PlexilExec:lock]Locking node ProcessImage
[PlexilExec:step][3:2:0] Transitioning node ProcessImage
[PlexilExec:notifyNodeConditionChanged] for node ProcessImage
[PlexilExec:handleNeedsExecution]Storing action for node 'ProcessImage' of type 'Command' to be executed.
[PlexilExec:unlock]Unlocking node ProcessImage
[PlexilExec:handleConditionsChanged]Node ProcessImage had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'ProcessImage' was previously eligible to transition but isn't now.
[Test:testOutput]Permission to execute process_image has been denied by the resource arbiter.
[PlexilExec:notifyNodeConditionChanged] for node ProcessImage
[PlexilExec:cycle]==>End cycle 3
[PlexilExec:printPlan]
SimpleTask{
 State: (id_270[au](EXECUTING): state(EXECUTING)) (0)
 SkipCondition: (id_290[au](0): boolean)
 StartCondition: (id_292[au](1): boolean)
 EndCondition: (id_483[au](0): childrenFinished(1:3))
 InvariantCondition: (id_296[au](1): boolean)
 PreCondition: (id_298[au](1): boolean)
 PostCondition: (id_300[au](1): boolean)
 RepeatCondition: (id_302[au](0): boolean)
 AncestorInvariantCondition: (id_304[au](1): boolean)
 AncestorEndCondition: (id_306[au](0): boolean)
 ParentExecutingCondition: (id_308[au](1): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_480[iu](UNKNOWN): childrenWaitingOrFinished(0:3))
 AbortCompleteCondition: (id_312[au](UNKNOWN): boolean)
 ParentWaitingCondition: (id_314[au](0): boolean)
 ParentFinishedCondition: (id_316[au](0): boolean)
 CommandHandleReceivedCondition: (id_318[au](1): boolean)
 command_handle: (id_273[au](UNKNOWN):  command_handle)
  PickupObject{
   State: (id_322[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_342[au](0): boolean)
   StartCondition: (id_344[au](1): boolean)
   EndCondition: (id_523[au](0): ((id_519[au](0): interruptibleCommandHandleValues((id_516[au](COMMAND_SENT_TO_SYSTEM): string))) || (id_521[au](0): ((id_517[au](1): isknown((id_516[au](COMMAND_SENT_TO_SYSTEM): string))) && (id_507[au](0): ((id_509[au](10): int) == (id_372[au](-1): int)))))
   InvariantCondition: (id_348[au](1): boolean)
   PreCondition: (id_350[au](1): boolean)
   PostCondition: (id_510[au](1): (id_513[au](1): ((id_325[au](COMMAND_SENT_TO_SYSTEM):  command_handle) == (id_512[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_354[au](0): boolean)
   AncestorInvariantCondition: (id_490[au](1): (TransparentWrapper(id_486[auT]{1}((id_304[au](1): boolean)) && TransparentWrapper(id_488[auT]{1}((id_296[au](1): boolean)))
   AncestorEndCondition: (id_496[iu](UNKNOWN): (TransparentWrapper(id_492[iuT]{0}((id_306[au](0): boolean)) || TransparentWrapper(id_494[iuT]{0}((id_483[au](0): childrenFinished(1:3))))
   ParentExecutingCondition: (id_499[iu](UNKNOWN): ((id_270[au](EXECUTING): state(EXECUTING)) == (id_498[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_362[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_515[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_502[iu](UNKNOWN): ((id_270[au](EXECUTING): state(EXECUTING)) == (id_501[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_505[iu](UNKNOWN): ((id_270[au](EXECUTING): state(EXECUTING)) == (id_504[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_527[au](1): ((id_525[au](1): allCommandHandleValues((id_516[au](COMMAND_SENT_TO_SYSTEM): string))) && (id_370[au](1): boolean))
   command_handle: (id_325[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   returnValue: (id_372[au](-1): int)
   priority10: (id_373[au](10): int)
  }
  ProcessImage{
   State: (id_376[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_396[au](0): boolean)
   StartCondition: (id_398[au](1): boolean)
   EndCondition: (id_572[au](1): ((id_568[au](1): interruptibleCommandHandleValues((id_565[au](COMMAND_DENIED): string))) || (id_570[au](1): ((id_566[au](1): isknown((id_565[au](COMMAND_DENIED): string))) && (id_400[au](1): boolean)))
   InvariantCondition: (id_402[au](1): boolean)
   PreCondition: (id_404[au](1): boolean)
   PostCondition: (id_554[au](UNKNOWN): (id_557[au](UNKNOWN): ((id_379[au](UNKNOWN):  command_handle) == (id_556[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_559[iu](UNKNOWN): (id_562[iu](UNKNOWN): ((id_379[au](UNKNOWN):  command_handle) == (id_561[iu](UNKNOWN):  command_handle))))
   AncestorInvariantCondition: (id_540[au](1): (TransparentWrapper(id_536[auT]{1}((id_304[au](1): boolean)) && TransparentWrapper(id_538[auT]{1}((id_296[au](1): boolean)))
   AncestorEndCondition: (id_546[iu](UNKNOWN): (TransparentWrapper(id_542[iuT]{0}((id_306[au](0): boolean)) || TransparentWrapper(id_544[iuT]{0}((id_483[au](0): childrenFinished(1:3))))
   ParentExecutingCondition: (id_548[iu](UNKNOWN): ((id_270[au](EXECUTING): state(EXECUTING)) == (id_498[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_416[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_564[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_550[iu](UNKNOWN): ((id_270[au](EXECUTING): state(EXECUTING)) == (id_501[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_552[iu](UNKNOWN): ((id_270[au](EXECUTING): state(EXECUTING)) == (id_504[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_576[au](1): ((id_574[au](1): allCommandHandleValues((id_565[au](COMMAND_DENIED): string))) && (id_424[au](1): boolean))
   command_handle: (id_379[au](UNKNOWN):  command_handle)
   priority30: (id_426[au](30): int)
  }
  TakePicture{
   State: (id_429[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_430[au](SUCCESS):  outcome)
   Command handle: (id_432[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   v_priority: (id_479[au](10): int)
  }
}

[Test:testOutput]Sending command result pickup_object(20) = 10
[PlexilExec:notifyNodeConditionChanged] for node PickupObject
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 4
[PlexilExec:notifyNodeConditionChanged] for node ProcessImage
[PlexilExec:handleConditionsChanged]Node ProcessImage had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'ProcessImage' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'ProcessImage' on the state change queue in position 17
[PlexilExec:handleConditionsChanged]Node PickupObject had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'PickupObject' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'PickupObject' on the state change queue in position 18
[PlexilExec:step][4:0] State change queue: ProcessImage PickupObject 
[PlexilExec:lock]Locking node ProcessImage
[PlexilExec:lock]Locking node PickupObject
[PlexilExec:step][4:0:0] Transitioning node ProcessImage
[PlexilExec:notifyNodeConditionChanged] for node ProcessImage
[PlexilExec:step][4:0:1] Transitioning node PickupObject
[PlexilExec:notifyNodeConditionChanged] for node PickupObject
[PlexilExec:unlock]Unlocking node ProcessImage
[PlexilExec:unlock]Unlocking node PickupObject
[PlexilExec:handleConditionsChanged]Node ProcessImage had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'ProcessImage' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'ProcessImage' on the state change queue in position 19
[PlexilExec:handleConditionsChanged]Node PickupObject had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'PickupObject' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'PickupObject' on the state change queue in position 20
[PlexilExec:step][4:1] State change queue: ProcessImage PickupObject 
[PlexilExec:lock]Locking node ProcessImage
[PlexilExec:lock]Locking node PickupObject
[PlexilExec:step][4:1:0] Transitioning node ProcessImage
[PlexilExec:notifyNodeConditionChanged] for node ProcessImage
[PlexilExec:step][4:1:1] Transitioning node PickupObject
[PlexilExec:notifyNodeConditionChanged] for node PickupObject
[PlexilExec:unlock]Unlocking node ProcessImage
[PlexilExec:unlock]Unlocking node PickupObject
[PlexilExec:handleConditionsChanged]Node ProcessImage had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'ProcessImage' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'ProcessImage' on the state change queue in position 21
[PlexilExec:handleConditionsChanged]Node PickupObject had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'PickupObject' was previously eligible to transition but isn't now.
[PlexilExec:step][4:2] State change queue: ProcessImage 
[PlexilExec:lock]Locking node ProcessImage
[PlexilExec:step][4:2:0] Transitioning node ProcessImage
[PlexilExec:notifyNodeConditionChanged] for node ProcessImage
[PlexilExec:handleNeedsExecution]Storing action for node 'ProcessImage' of type 'Command' to be executed.
[PlexilExec:unlock]Unlocking node ProcessImage
[PlexilExec:handleConditionsChanged]Node ProcessImage had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'ProcessImage' was previously eligible to transition but isn't now.
[Test:testOutput]Executing process_image() into noId with ack (id_565[au](UNKNOWN): string)
[PlexilExec:cycle]==>End cycle 4
[PlexilExec:printPlan]
SimpleTask{
 State: (id_270[au](EXECUTING): state(EXECUTING)) (0)
 SkipCondition: (id_290[au](0): boolean)
 StartCondition: (id_292[au](1): boolean)
 EndCondition: (id_483[au](0): childrenFinished(2:3))
 InvariantCondition: (id_296[au](1): boolean)
 PreCondition: (id_298[au](1): boolean)
 PostCondition: (id_300[au](1): boolean)
 RepeatCondition: (id_302[au](0): boolean)
 AncestorInvariantCondition: (id_304[au](1): boolean)
 AncestorEndCondition: (id_306[au](0): boolean)
 ParentExecutingCondition: (id_308[au](1): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_480[iu](UNKNOWN): childrenWaitingOrFinished(0:3))
 AbortCompleteCondition: (id_312[au](UNKNOWN): boolean)
 ParentWaitingCondition: (id_314[au](0): boolean)
 ParentFinishedCondition: (id_316[au](0): boolean)
 CommandHandleReceivedCondition: (id_318[au](1): boolean)
 command_handle: (id_273[au](UNKNOWN):  command_handle)
  PickupObject{
   State: (id_322[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_323[au](SUCCESS):  outcome)
   Command handle: (id_325[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   returnValue: (id_372[iu](10): int)
   priority10: (id_373[au](10): int)
  }
  ProcessImage{
   State: (id_376[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_396[au](0): boolean)
   StartCondition: (id_398[au](1): boolean)
   EndCondition: (id_572[au](0): ((id_568[au](0): interruptibleCommandHandleValues((id_565[au](UNKNOWN): string))) || (id_570[au](0): ((id_566[au](0): isknown((id_565[au](UNKNOWN): string))) && (id_400[au](1): boolean)))
   InvariantCondition: (id_402[au](1): boolean)
   PreCondition: (id_404[au](1): boolean)
   PostCondition: (id_554[au](UNKNOWN): (id_557[au](UNKNOWN): ((id_379[au](UNKNOWN):  command_handle) == (id_556[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_559[iu](UNKNOWN): (id_562[iu](UNKNOWN): ((id_379[au](UNKNOWN):  command_handle) == (id_561[iu](UNKNOWN):  command_handle))))
   AncestorInvariantCondition: (id_540[au](1): (TransparentWrapper(id_536[auT]{1}((id_304[au](1): boolean)) && TransparentWrapper(id_538[auT]{1}((id_296[au](1): boolean)))
   AncestorEndCondition: (id_546[iu](UNKNOWN): (TransparentWrapper(id_542[iuT]{0}((id_306[au](0): boolean)) || TransparentWrapper(id_544[iuT]{0}((id_483[au](0): childrenFinished(2:3))))
   ParentExecutingCondition: (id_548[iu](UNKNOWN): ((id_270[au](EXECUTING): state(EXECUTING)) == (id_498[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_416[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_564[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_550[iu](UNKNOWN): ((id_270[au](EXECUTING): state(EXECUTING)) == (id_501[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_552[iu](UNKNOWN): ((id_270[au](EXECUTING): state(EXECUTING)) == (id_504[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_576[au](0): ((id_574[au](0): allCommandHandleValues((id_565[au](UNKNOWN): string))) && (id_424[au](1): boolean))
   command_handle: (id_379[au](UNKNOWN):  command_handle)
   priority30: (id_426[au](30): int)
  }
  TakePicture{
   State: (id_429[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_430[au](SUCCESS):  outcome)
   Command handle: (id_432[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   v_priority: (id_479[au](10): int)
  }
}

[Test:testOutput]Sending command ACK process_image() = (string)COMMAND_SENT_TO_SYSTEM
[PlexilExec:notifyNodeConditionChanged] for node ProcessImage
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 5
[PlexilExec:notifyNodeConditionChanged] for node ProcessImage
[PlexilExec:handleConditionsChanged]Node ProcessImage had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'ProcessImage' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'ProcessImage' on the state change queue in position 22
[PlexilExec:step][5:0] State change queue: ProcessImage 
[PlexilExec:lock]Locking node ProcessImage
[PlexilExec:step][5:0:0] Transitioning node ProcessImage
[PlexilExec:notifyNodeConditionChanged] for node ProcessImage
[PlexilExec:unlock]Unlocking node ProcessImage
[PlexilExec:handleConditionsChanged]Node ProcessImage had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'ProcessImage' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'ProcessImage' on the state change queue in position 23
[PlexilExec:step][5:1] State change queue: ProcessImage 
[PlexilExec:lock]Locking node ProcessImage
[PlexilExec:step][5:1:0] Transitioning node ProcessImage
[PlexilExec:notifyNodeConditionChanged] for node ProcessImage
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:unlock]Unlocking node ProcessImage
[PlexilExec:handleConditionsChanged]Node ProcessImage had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'ProcessImage' was previously eligible to transition but isn't now.
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 24
[PlexilExec:step][5:2] State change queue: SimpleTask 
[PlexilExec:lock]Locking node SimpleTask
[PlexilExec:step][5:2:0] Transitioning node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:unlock]Unlocking node SimpleTask
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 25
[PlexilExec:step][5:3] State change queue: SimpleTask 
[PlexilExec:lock]Locking node SimpleTask
[PlexilExec:step][5:3:0] Transitioning node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:unlock]Unlocking node SimpleTask
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 26
[PlexilExec:step][5:4] State change queue: SimpleTask 
[PlexilExec:lock]Locking node SimpleTask
[PlexilExec:step][5:4:0] Transitioning node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:unlock]Unlocking node SimpleTask
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'SimpleTask' was previously eligible to transition but isn't now.
[PlexilExec:cycle]==>End cycle 5
[PlexilExec:printPlan]
SimpleTask{
 State: (id_270[au](FINISHED): state(FINISHED)) (0)
 Outcome: (id_271[au](SUCCESS):  outcome)
  PickupObject{
   State: (id_322[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_323[au](SUCCESS):  outcome)
   Command handle: (id_325[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   returnValue: (id_372[iu](10): int)
   priority10: (id_373[au](10): int)
  }
  ProcessImage{
   State: (id_376[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_377[au](SUCCESS):  outcome)
   Command handle: (id_379[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   priority30: (id_426[au](30): int)
  }
  TakePicture{
   State: (id_429[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_430[au](SUCCESS):  outcome)
   Command handle: (id_432[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   v_priority: (id_479[au](10): int)
  }
}

