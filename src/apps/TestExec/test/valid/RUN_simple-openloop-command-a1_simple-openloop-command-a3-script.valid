[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:addPlan]Added plan: 
SimpleDrive{
 State: (id_221[au](INACTIVE): state(INACTIVE)) (inf)
  Drive{
   State: (id_273[au](INACTIVE): state(INACTIVE)) (inf)
  }
}

[PlexilExec:handleConditionsChanged]Node SimpleDrive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleDrive' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleDrive' on the state change queue in position 1
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 1
[PlexilExec:step][1:0] State change queue: SimpleDrive 
[PlexilExec:lock]Locking node SimpleDrive
[PlexilExec:step][1:0:0] Transitioning node SimpleDrive
[PlexilExec:handleConditionsChanged]Node SimpleDrive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleDrive' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleDrive' on the state change queue in position 2
[PlexilExec:unlock]Unlocking node SimpleDrive
[PlexilExec:step][1:1] State change queue: SimpleDrive 
[PlexilExec:lock]Locking node SimpleDrive
[PlexilExec:step][1:1:0] Transitioning node SimpleDrive
[PlexilExec:notifyNodeConditionChanged] for node Drive
[PlexilExec:handleNeedsExecution]Storing action for node 'SimpleDrive' of type 'NodeList' to be executed.
[PlexilExec:handleConditionsChanged]Node SimpleDrive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'SimpleDrive' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node SimpleDrive
[PlexilExec:handleConditionsChanged]Node Drive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'Drive' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'Drive' on the state change queue in position 3
[PlexilExec:step][1:2] State change queue: Drive 
[PlexilExec:lock]Locking node Drive
[PlexilExec:step][1:2:0] Transitioning node Drive
[PlexilExec:notifyNodeConditionChanged] for node Drive
[PlexilExec:handleConditionsChanged]Node Drive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'Drive' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'Drive' on the state change queue in position 4
[PlexilExec:unlock]Unlocking node Drive
[PlexilExec:step][1:3] State change queue: Drive 
[PlexilExec:lock]Locking node Drive
[PlexilExec:step][1:3:0] Transitioning node Drive
[PlexilExec:notifyNodeConditionChanged] for node Drive
[PlexilExec:handleNeedsExecution]Storing action for node 'Drive' of type 'Command' to be executed.
[PlexilExec:handleConditionsChanged]Node Drive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'Drive' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node Drive
[Test:testOutput]Executing drive() into noId with ack (id_356[au](UNKNOWN): string)
[PlexilExec:cycle]==>End cycle 1
[PlexilExec:printPlan]
SimpleDrive{
 State: (id_221[au](EXECUTING): state(EXECUTING)) (0)
 SkipCondition: (id_241[au](0): boolean)
 StartCondition: (id_243[au](1): boolean)
 EndCondition: (id_326[au](0): childrenFinished(0:1))
 InvariantCondition: (id_247[au](1): boolean)
 PreCondition: (id_249[au](1): boolean)
 PostCondition: (id_251[au](1): boolean)
 RepeatCondition: (id_253[au](0): boolean)
 AncestorInvariantCondition: (id_255[au](1): boolean)
 AncestorEndCondition: (id_257[au](0): boolean)
 ParentExecutingCondition: (id_259[au](1): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_323[iu](UNKNOWN): childrenWaitingOrFinished(0:1))
 AbortCompleteCondition: (id_263[au](UNKNOWN): boolean)
 ParentWaitingCondition: (id_265[au](0): boolean)
 ParentFinishedCondition: (id_267[au](0): boolean)
 CommandHandleReceivedCondition: (id_269[au](1): boolean)
 command_handle: (id_224[au](UNKNOWN):  command_handle)
  Drive{
   State: (id_273[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_293[au](0): boolean)
   StartCondition: (id_295[au](1): boolean)
   EndCondition: (id_363[au](0): ((id_359[au](0): interruptibleCommandHandleValues((id_356[au](UNKNOWN): string))) || (id_361[au](0): ((id_357[au](0): isknown((id_356[au](UNKNOWN): string))) && (id_297[au](1): boolean)))
   InvariantCondition: (id_299[au](1): boolean)
   PreCondition: (id_301[au](1): boolean)
   PostCondition: (id_350[au](UNKNOWN): (id_353[au](UNKNOWN): ((id_276[au](UNKNOWN):  command_handle) == (id_352[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_305[au](0): boolean)
   AncestorInvariantCondition: (id_333[au](1): (TransparentWrapper(id_329[auT]{1}((id_255[au](1): boolean)) && TransparentWrapper(id_331[auT]{1}((id_247[au](1): boolean)))
   AncestorEndCondition: (id_339[iu](UNKNOWN): (TransparentWrapper(id_335[iuT]{0}((id_257[au](0): boolean)) || TransparentWrapper(id_337[iuT]{0}((id_326[au](0): childrenFinished(0:1))))
   ParentExecutingCondition: (id_342[iu](UNKNOWN): ((id_221[au](EXECUTING): state(EXECUTING)) == (id_341[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_313[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_355[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_345[iu](UNKNOWN): ((id_221[au](EXECUTING): state(EXECUTING)) == (id_344[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_348[iu](UNKNOWN): ((id_221[au](EXECUTING): state(EXECUTING)) == (id_347[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_367[au](0): ((id_365[au](0): allCommandHandleValues((id_356[au](UNKNOWN): string))) && (id_321[au](1): boolean))
   command_handle: (id_276[au](UNKNOWN):  command_handle)
  }
}

[Test:testOutput]Sending command ACK drive() = (string)COMMAND_DENIED
[PlexilExec:notifyNodeConditionChanged] for node Drive
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 2
[PlexilExec:notifyNodeConditionChanged] for node Drive
[PlexilExec:handleConditionsChanged]Node Drive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'Drive' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'Drive' on the state change queue in position 5
[PlexilExec:step][2:0] State change queue: Drive 
[PlexilExec:lock]Locking node Drive
[PlexilExec:step][2:0:0] Transitioning node Drive
[PlexilExec:handleConditionsChanged]Node Drive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'Drive' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'Drive' on the state change queue in position 6
[PlexilExec:unlock]Unlocking node Drive
[PlexilExec:step][2:1] State change queue: Drive 
[PlexilExec:lock]Locking node Drive
[PlexilExec:step][2:1:0] Transitioning node Drive
[PlexilExec:notifyNodeConditionChanged] for node Drive
[PlexilExec:notifyNodeConditionChanged] for node SimpleDrive
[PlexilExec:handleConditionsChanged]Node Drive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'Drive' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node Drive
[PlexilExec:handleConditionsChanged]Node SimpleDrive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleDrive' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleDrive' on the state change queue in position 7
[PlexilExec:step][2:2] State change queue: SimpleDrive 
[PlexilExec:lock]Locking node SimpleDrive
[PlexilExec:step][2:2:0] Transitioning node SimpleDrive
[PlexilExec:notifyNodeConditionChanged] for node SimpleDrive
[PlexilExec:handleConditionsChanged]Node SimpleDrive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleDrive' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleDrive' on the state change queue in position 8
[PlexilExec:unlock]Unlocking node SimpleDrive
[PlexilExec:step][2:3] State change queue: SimpleDrive 
[PlexilExec:lock]Locking node SimpleDrive
[PlexilExec:step][2:3:0] Transitioning node SimpleDrive
[PlexilExec:handleConditionsChanged]Node SimpleDrive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleDrive' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleDrive' on the state change queue in position 9
[PlexilExec:unlock]Unlocking node SimpleDrive
[PlexilExec:step][2:4] State change queue: SimpleDrive 
[PlexilExec:lock]Locking node SimpleDrive
[PlexilExec:step][2:4:0] Transitioning node SimpleDrive
[PlexilExec:handleConditionsChanged]Node SimpleDrive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'SimpleDrive' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node SimpleDrive
[PlexilExec:cycle]==>End cycle 2
[PlexilExec:printPlan]
SimpleDrive{
 State: (id_221[au](FINISHED): state(FINISHED)) (0)
 Outcome: (id_222[au](SUCCESS):  outcome)
  Drive{
   State: (id_273[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_274[au](FAILURE):  outcome)
   Failure type: (id_275[au](POST_CONDITION_FAILED):  failure)
   Command handle: (id_276[au](COMMAND_DENIED):  command_handle)
  }
}

