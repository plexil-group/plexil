[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:addPlan]Added plan: 
SimpleTask{
 State: (id_268[au](INACTIVE): state(INACTIVE)) (inf)
  C1{
   State: (id_320[au](INACTIVE): state(INACTIVE)) (inf)
  }
  C2{
   State: (id_374[au](INACTIVE): state(INACTIVE)) (inf)
  }
  C3{
   State: (id_427[au](INACTIVE): state(INACTIVE)) (inf)
  }
}

[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 1
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 1
[PlexilExec:step][1:0] State change queue: SimpleTask 
[PlexilExec:lock]Locking node SimpleTask
[PlexilExec:step][1:0:0] Transitioning node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:unlock]Unlocking node SimpleTask
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 2
[PlexilExec:step][1:1] State change queue: SimpleTask 
[PlexilExec:lock]Locking node SimpleTask
[PlexilExec:step][1:1:0] Transitioning node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node C1
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:notifyNodeConditionChanged] for node C3
[PlexilExec:handleNeedsExecution]Storing action for node 'SimpleTask' of type 'NodeList' to be executed.
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:unlock]Unlocking node SimpleTask
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C1' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C1' on the state change queue in position 3
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 4
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C3' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C3' on the state change queue in position 5
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'SimpleTask' was previously eligible to transition but isn't now.
[PlexilExec:step][1:2] State change queue: C1 C2 C3 
[PlexilExec:lock]Locking node C1
[PlexilExec:lock]Locking node C2
[PlexilExec:lock]Locking node C3
[PlexilExec:step][1:2:0] Transitioning node C1
[PlexilExec:notifyNodeConditionChanged] for node C1
[PlexilExec:step][1:2:1] Transitioning node C2
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:step][1:2:2] Transitioning node C3
[PlexilExec:notifyNodeConditionChanged] for node C3
[PlexilExec:unlock]Unlocking node C1
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:unlock]Unlocking node C3
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C1' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C1' on the state change queue in position 6
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 7
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C3' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C3' on the state change queue in position 8
[PlexilExec:step][1:3] State change queue: C1 C2 C3 
[PlexilExec:lock]Locking node C1
[PlexilExec:lock]Locking node C2
[PlexilExec:lock]Locking node C3
[PlexilExec:step][1:3:0] Transitioning node C1
[PlexilExec:notifyNodeConditionChanged] for node C1
[PlexilExec:handleNeedsExecution]Storing action for node 'C1' of type 'Command' to be executed.
[PlexilExec:step][1:3:1] Transitioning node C2
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:handleNeedsExecution]Storing action for node 'C2' of type 'Command' to be executed.
[PlexilExec:step][1:3:2] Transitioning node C3
[PlexilExec:notifyNodeConditionChanged] for node C3
[PlexilExec:handleNeedsExecution]Storing action for node 'C3' of type 'Command' to be executed.
[PlexilExec:unlock]Unlocking node C1
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:unlock]Unlocking node C3
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C1' was previously eligible to transition but isn't now.
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C2' was previously eligible to transition but isn't now.
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C3' was previously eligible to transition but isn't now.
[Test:testOutput]Executing c1(20) into (id_370[au](-1): int) with ack (id_514[au](UNKNOWN): string)
[Test:testOutput]Permission to execute c2 has been denied by the resource arbiter.
[PlexilExec:notifyNodeConditionChanged] for node C2
[Test:testOutput]Executing c3() into noId with ack (id_602[au](UNKNOWN): string)
[PlexilExec:cycle]==>End cycle 1
[PlexilExec:printPlan]
SimpleTask{
 State: (id_268[au](EXECUTING): state(EXECUTING)) (0)
 SkipCondition: (id_288[au](0): boolean)
 StartCondition: (id_290[au](1): boolean)
 EndCondition: (id_481[au](0): childrenFinished(0:3))
 InvariantCondition: (id_294[au](1): boolean)
 PreCondition: (id_296[au](1): boolean)
 PostCondition: (id_298[au](1): boolean)
 RepeatCondition: (id_300[au](0): boolean)
 AncestorInvariantCondition: (id_302[au](1): boolean)
 AncestorEndCondition: (id_304[au](0): boolean)
 ParentExecutingCondition: (id_306[au](1): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_478[iu](UNKNOWN): childrenWaitingOrFinished(0:3))
 AbortCompleteCondition: (id_310[au](UNKNOWN): boolean)
 ParentWaitingCondition: (id_312[au](0): boolean)
 ParentFinishedCondition: (id_314[au](0): boolean)
 CommandHandleReceivedCondition: (id_316[au](1): boolean)
 command_handle: (id_271[au](UNKNOWN):  command_handle)
  C1{
   State: (id_320[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_340[au](0): boolean)
   StartCondition: (id_342[au](1): boolean)
   EndCondition: (id_521[au](0): ((id_517[au](0): interruptibleCommandHandleValues((id_514[au](UNKNOWN): string))) || (id_519[au](0): ((id_515[au](0): isknown((id_514[au](UNKNOWN): string))) && (id_505[au](0): ((id_507[au](10): int) == (id_370[au](-1): int)))))
   InvariantCondition: (id_346[au](1): boolean)
   PreCondition: (id_348[au](1): boolean)
   PostCondition: (id_508[au](UNKNOWN): (id_511[au](UNKNOWN): ((id_323[au](UNKNOWN):  command_handle) == (id_510[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_352[au](0): boolean)
   AncestorInvariantCondition: (id_488[au](1): (TransparentWrapper(id_484[auT]{1}((id_302[au](1): boolean)) && TransparentWrapper(id_486[auT]{1}((id_294[au](1): boolean)))
   AncestorEndCondition: (id_494[iu](UNKNOWN): (TransparentWrapper(id_490[iuT]{0}((id_304[au](0): boolean)) || TransparentWrapper(id_492[iuT]{0}((id_481[au](0): childrenFinished(0:3))))
   ParentExecutingCondition: (id_497[iu](UNKNOWN): ((id_268[au](EXECUTING): state(EXECUTING)) == (id_496[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_360[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_513[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_500[iu](UNKNOWN): ((id_268[au](EXECUTING): state(EXECUTING)) == (id_499[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_503[iu](UNKNOWN): ((id_268[au](EXECUTING): state(EXECUTING)) == (id_502[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_525[au](0): ((id_523[au](0): allCommandHandleValues((id_514[au](UNKNOWN): string))) && (id_368[au](1): boolean))
   command_handle: (id_323[au](UNKNOWN):  command_handle)
   returnValue: (id_370[au](-1): int)
   mem_priority: (id_371[au](20): int)
  }
  C2{
   State: (id_374[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_394[au](0): boolean)
   StartCondition: (id_396[au](1): boolean)
   EndCondition: (id_569[au](1): ((id_565[au](1): interruptibleCommandHandleValues((id_562[au](COMMAND_DENIED): string))) || (id_567[au](1): ((id_563[au](1): isknown((id_562[au](COMMAND_DENIED): string))) && (id_398[au](1): boolean)))
   InvariantCondition: (id_400[au](1): boolean)
   PreCondition: (id_402[au](1): boolean)
   PostCondition: (id_551[au](UNKNOWN): (id_554[au](UNKNOWN): ((id_377[au](UNKNOWN):  command_handle) == (id_553[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_556[iu](UNKNOWN): (id_559[iu](UNKNOWN): ((id_377[au](UNKNOWN):  command_handle) == (id_558[iu](UNKNOWN):  command_handle))))
   AncestorInvariantCondition: (id_537[au](1): (TransparentWrapper(id_533[auT]{1}((id_302[au](1): boolean)) && TransparentWrapper(id_535[auT]{1}((id_294[au](1): boolean)))
   AncestorEndCondition: (id_543[iu](UNKNOWN): (TransparentWrapper(id_539[iuT]{0}((id_304[au](0): boolean)) || TransparentWrapper(id_541[iuT]{0}((id_481[au](0): childrenFinished(0:3))))
   ParentExecutingCondition: (id_545[iu](UNKNOWN): ((id_268[au](EXECUTING): state(EXECUTING)) == (id_496[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_414[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_561[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_547[iu](UNKNOWN): ((id_268[au](EXECUTING): state(EXECUTING)) == (id_499[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_549[iu](UNKNOWN): ((id_268[au](EXECUTING): state(EXECUTING)) == (id_502[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_573[au](1): ((id_571[au](1): allCommandHandleValues((id_562[au](COMMAND_DENIED): string))) && (id_422[au](1): boolean))
   command_handle: (id_377[au](UNKNOWN):  command_handle)
   v_priority2: (id_424[au](15): int)
  }
  C3{
   State: (id_427[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_447[au](0): boolean)
   StartCondition: (id_449[au](1): boolean)
   EndCondition: (id_609[au](0): ((id_605[au](0): interruptibleCommandHandleValues((id_602[au](UNKNOWN): string))) || (id_607[au](0): ((id_603[au](0): isknown((id_602[au](UNKNOWN): string))) && (id_451[au](1): boolean)))
   InvariantCondition: (id_453[au](1): boolean)
   PreCondition: (id_455[au](1): boolean)
   PostCondition: (id_596[au](UNKNOWN): (id_599[au](UNKNOWN): ((id_430[au](UNKNOWN):  command_handle) == (id_598[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_459[au](0): boolean)
   AncestorInvariantCondition: (id_582[au](1): (TransparentWrapper(id_578[auT]{1}((id_302[au](1): boolean)) && TransparentWrapper(id_580[auT]{1}((id_294[au](1): boolean)))
   AncestorEndCondition: (id_588[iu](UNKNOWN): (TransparentWrapper(id_584[iuT]{0}((id_304[au](0): boolean)) || TransparentWrapper(id_586[iuT]{0}((id_481[au](0): childrenFinished(0:3))))
   ParentExecutingCondition: (id_590[iu](UNKNOWN): ((id_268[au](EXECUTING): state(EXECUTING)) == (id_496[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_467[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_601[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_592[iu](UNKNOWN): ((id_268[au](EXECUTING): state(EXECUTING)) == (id_499[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_594[iu](UNKNOWN): ((id_268[au](EXECUTING): state(EXECUTING)) == (id_502[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_613[au](0): ((id_611[au](0): allCommandHandleValues((id_602[au](UNKNOWN): string))) && (id_475[au](1): boolean))
   command_handle: (id_430[au](UNKNOWN):  command_handle)
   v_priority: (id_477[au](10): int)
  }
}

[Test:testOutput]Sending command ACK c1(20) = (string)COMMAND_SENT_TO_SYSTEM
[PlexilExec:notifyNodeConditionChanged] for node C1
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 2
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 9
[PlexilExec:notifyNodeConditionChanged] for node C1
[PlexilExec:step][2:0] State change queue: C2 
[PlexilExec:lock]Locking node C2
[PlexilExec:step][2:0:0] Transitioning node C2
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 10
[PlexilExec:step][2:1] State change queue: C2 
[PlexilExec:lock]Locking node C2
[PlexilExec:step][2:1:0] Transitioning node C2
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 11
[PlexilExec:step][2:2] State change queue: C2 
[PlexilExec:lock]Locking node C2
[PlexilExec:step][2:2:0] Transitioning node C2
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:handleNeedsExecution]Storing action for node 'C2' of type 'Command' to be executed.
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C2' was previously eligible to transition but isn't now.
[Test:testOutput]Permission to execute c2 has been denied by the resource arbiter.
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:cycle]==>End cycle 2
[PlexilExec:printPlan]
SimpleTask{
 State: (id_268[au](EXECUTING): state(EXECUTING)) (0)
 SkipCondition: (id_288[au](0): boolean)
 StartCondition: (id_290[au](1): boolean)
 EndCondition: (id_481[au](0): childrenFinished(0:3))
 InvariantCondition: (id_294[au](1): boolean)
 PreCondition: (id_296[au](1): boolean)
 PostCondition: (id_298[au](1): boolean)
 RepeatCondition: (id_300[au](0): boolean)
 AncestorInvariantCondition: (id_302[au](1): boolean)
 AncestorEndCondition: (id_304[au](0): boolean)
 ParentExecutingCondition: (id_306[au](1): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_478[iu](UNKNOWN): childrenWaitingOrFinished(0:3))
 AbortCompleteCondition: (id_310[au](UNKNOWN): boolean)
 ParentWaitingCondition: (id_312[au](0): boolean)
 ParentFinishedCondition: (id_314[au](0): boolean)
 CommandHandleReceivedCondition: (id_316[au](1): boolean)
 command_handle: (id_271[au](UNKNOWN):  command_handle)
  C1{
   State: (id_320[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_340[au](0): boolean)
   StartCondition: (id_342[au](1): boolean)
   EndCondition: (id_521[au](0): ((id_517[au](0): interruptibleCommandHandleValues((id_514[au](COMMAND_SENT_TO_SYSTEM): string))) || (id_519[au](0): ((id_515[au](1): isknown((id_514[au](COMMAND_SENT_TO_SYSTEM): string))) && (id_505[au](0): ((id_507[au](10): int) == (id_370[au](-1): int)))))
   InvariantCondition: (id_346[au](1): boolean)
   PreCondition: (id_348[au](1): boolean)
   PostCondition: (id_508[au](1): (id_511[au](1): ((id_323[au](COMMAND_SENT_TO_SYSTEM):  command_handle) == (id_510[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_352[au](0): boolean)
   AncestorInvariantCondition: (id_488[au](1): (TransparentWrapper(id_484[auT]{1}((id_302[au](1): boolean)) && TransparentWrapper(id_486[auT]{1}((id_294[au](1): boolean)))
   AncestorEndCondition: (id_494[iu](UNKNOWN): (TransparentWrapper(id_490[iuT]{0}((id_304[au](0): boolean)) || TransparentWrapper(id_492[iuT]{0}((id_481[au](0): childrenFinished(0:3))))
   ParentExecutingCondition: (id_497[iu](UNKNOWN): ((id_268[au](EXECUTING): state(EXECUTING)) == (id_496[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_360[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_513[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_500[iu](UNKNOWN): ((id_268[au](EXECUTING): state(EXECUTING)) == (id_499[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_503[iu](UNKNOWN): ((id_268[au](EXECUTING): state(EXECUTING)) == (id_502[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_525[au](1): ((id_523[au](1): allCommandHandleValues((id_514[au](COMMAND_SENT_TO_SYSTEM): string))) && (id_368[au](1): boolean))
   command_handle: (id_323[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   returnValue: (id_370[au](-1): int)
   mem_priority: (id_371[au](20): int)
  }
  C2{
   State: (id_374[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_394[au](0): boolean)
   StartCondition: (id_396[au](1): boolean)
   EndCondition: (id_569[au](1): ((id_565[au](1): interruptibleCommandHandleValues((id_562[au](COMMAND_DENIED): string))) || (id_567[au](1): ((id_563[au](1): isknown((id_562[au](COMMAND_DENIED): string))) && (id_398[au](1): boolean)))
   InvariantCondition: (id_400[au](1): boolean)
   PreCondition: (id_402[au](1): boolean)
   PostCondition: (id_551[au](UNKNOWN): (id_554[au](UNKNOWN): ((id_377[au](UNKNOWN):  command_handle) == (id_553[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_556[iu](UNKNOWN): (id_559[iu](UNKNOWN): ((id_377[au](UNKNOWN):  command_handle) == (id_558[iu](UNKNOWN):  command_handle))))
   AncestorInvariantCondition: (id_537[au](1): (TransparentWrapper(id_533[auT]{1}((id_302[au](1): boolean)) && TransparentWrapper(id_535[auT]{1}((id_294[au](1): boolean)))
   AncestorEndCondition: (id_543[iu](UNKNOWN): (TransparentWrapper(id_539[iuT]{0}((id_304[au](0): boolean)) || TransparentWrapper(id_541[iuT]{0}((id_481[au](0): childrenFinished(0:3))))
   ParentExecutingCondition: (id_545[iu](UNKNOWN): ((id_268[au](EXECUTING): state(EXECUTING)) == (id_496[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_414[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_561[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_547[iu](UNKNOWN): ((id_268[au](EXECUTING): state(EXECUTING)) == (id_499[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_549[iu](UNKNOWN): ((id_268[au](EXECUTING): state(EXECUTING)) == (id_502[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_573[au](1): ((id_571[au](1): allCommandHandleValues((id_562[au](COMMAND_DENIED): string))) && (id_422[au](1): boolean))
   command_handle: (id_377[au](UNKNOWN):  command_handle)
   v_priority2: (id_424[au](15): int)
  }
  C3{
   State: (id_427[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_447[au](0): boolean)
   StartCondition: (id_449[au](1): boolean)
   EndCondition: (id_609[au](0): ((id_605[au](0): interruptibleCommandHandleValues((id_602[au](UNKNOWN): string))) || (id_607[au](0): ((id_603[au](0): isknown((id_602[au](UNKNOWN): string))) && (id_451[au](1): boolean)))
   InvariantCondition: (id_453[au](1): boolean)
   PreCondition: (id_455[au](1): boolean)
   PostCondition: (id_596[au](UNKNOWN): (id_599[au](UNKNOWN): ((id_430[au](UNKNOWN):  command_handle) == (id_598[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_459[au](0): boolean)
   AncestorInvariantCondition: (id_582[au](1): (TransparentWrapper(id_578[auT]{1}((id_302[au](1): boolean)) && TransparentWrapper(id_580[auT]{1}((id_294[au](1): boolean)))
   AncestorEndCondition: (id_588[iu](UNKNOWN): (TransparentWrapper(id_584[iuT]{0}((id_304[au](0): boolean)) || TransparentWrapper(id_586[iuT]{0}((id_481[au](0): childrenFinished(0:3))))
   ParentExecutingCondition: (id_590[iu](UNKNOWN): ((id_268[au](EXECUTING): state(EXECUTING)) == (id_496[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_467[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_601[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_592[iu](UNKNOWN): ((id_268[au](EXECUTING): state(EXECUTING)) == (id_499[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_594[iu](UNKNOWN): ((id_268[au](EXECUTING): state(EXECUTING)) == (id_502[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_613[au](0): ((id_611[au](0): allCommandHandleValues((id_602[au](UNKNOWN): string))) && (id_475[au](1): boolean))
   command_handle: (id_430[au](UNKNOWN):  command_handle)
   v_priority: (id_477[au](10): int)
  }
}

[Test:testOutput]Sending command ACK c3() = (string)COMMAND_SENT_TO_SYSTEM
[PlexilExec:notifyNodeConditionChanged] for node C3
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 3
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 12
[PlexilExec:notifyNodeConditionChanged] for node C3
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C3' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C3' on the state change queue in position 13
[PlexilExec:step][3:0] State change queue: C2 C3 
[PlexilExec:lock]Locking node C2
[PlexilExec:lock]Locking node C3
[PlexilExec:step][3:0:0] Transitioning node C2
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:step][3:0:1] Transitioning node C3
[PlexilExec:notifyNodeConditionChanged] for node C3
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:unlock]Unlocking node C3
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 14
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C3' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C3' on the state change queue in position 15
[PlexilExec:step][3:1] State change queue: C2 C3 
[PlexilExec:lock]Locking node C2
[PlexilExec:lock]Locking node C3
[PlexilExec:step][3:1:0] Transitioning node C2
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:step][3:1:1] Transitioning node C3
[PlexilExec:notifyNodeConditionChanged] for node C3
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:unlock]Unlocking node C3
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 16
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C3' was previously eligible to transition but isn't now.
[PlexilExec:step][3:2] State change queue: C2 
[PlexilExec:lock]Locking node C2
[PlexilExec:step][3:2:0] Transitioning node C2
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:handleNeedsExecution]Storing action for node 'C2' of type 'Command' to be executed.
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C2' was previously eligible to transition but isn't now.
[Test:testOutput]Executing c2() into noId with ack (id_562[au](UNKNOWN): string)
[PlexilExec:cycle]==>End cycle 3
[PlexilExec:printPlan]
SimpleTask{
 State: (id_268[au](EXECUTING): state(EXECUTING)) (0)
 SkipCondition: (id_288[au](0): boolean)
 StartCondition: (id_290[au](1): boolean)
 EndCondition: (id_481[au](0): childrenFinished(1:3))
 InvariantCondition: (id_294[au](1): boolean)
 PreCondition: (id_296[au](1): boolean)
 PostCondition: (id_298[au](1): boolean)
 RepeatCondition: (id_300[au](0): boolean)
 AncestorInvariantCondition: (id_302[au](1): boolean)
 AncestorEndCondition: (id_304[au](0): boolean)
 ParentExecutingCondition: (id_306[au](1): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_478[iu](UNKNOWN): childrenWaitingOrFinished(0:3))
 AbortCompleteCondition: (id_310[au](UNKNOWN): boolean)
 ParentWaitingCondition: (id_312[au](0): boolean)
 ParentFinishedCondition: (id_314[au](0): boolean)
 CommandHandleReceivedCondition: (id_316[au](1): boolean)
 command_handle: (id_271[au](UNKNOWN):  command_handle)
  C1{
   State: (id_320[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_340[au](0): boolean)
   StartCondition: (id_342[au](1): boolean)
   EndCondition: (id_521[au](0): ((id_517[au](0): interruptibleCommandHandleValues((id_514[au](COMMAND_SENT_TO_SYSTEM): string))) || (id_519[au](0): ((id_515[au](1): isknown((id_514[au](COMMAND_SENT_TO_SYSTEM): string))) && (id_505[au](0): ((id_507[au](10): int) == (id_370[au](-1): int)))))
   InvariantCondition: (id_346[au](1): boolean)
   PreCondition: (id_348[au](1): boolean)
   PostCondition: (id_508[au](1): (id_511[au](1): ((id_323[au](COMMAND_SENT_TO_SYSTEM):  command_handle) == (id_510[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_352[au](0): boolean)
   AncestorInvariantCondition: (id_488[au](1): (TransparentWrapper(id_484[auT]{1}((id_302[au](1): boolean)) && TransparentWrapper(id_486[auT]{1}((id_294[au](1): boolean)))
   AncestorEndCondition: (id_494[iu](UNKNOWN): (TransparentWrapper(id_490[iuT]{0}((id_304[au](0): boolean)) || TransparentWrapper(id_492[iuT]{0}((id_481[au](0): childrenFinished(1:3))))
   ParentExecutingCondition: (id_497[iu](UNKNOWN): ((id_268[au](EXECUTING): state(EXECUTING)) == (id_496[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_360[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_513[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_500[iu](UNKNOWN): ((id_268[au](EXECUTING): state(EXECUTING)) == (id_499[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_503[iu](UNKNOWN): ((id_268[au](EXECUTING): state(EXECUTING)) == (id_502[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_525[au](1): ((id_523[au](1): allCommandHandleValues((id_514[au](COMMAND_SENT_TO_SYSTEM): string))) && (id_368[au](1): boolean))
   command_handle: (id_323[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   returnValue: (id_370[au](-1): int)
   mem_priority: (id_371[au](20): int)
  }
  C2{
   State: (id_374[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_394[au](0): boolean)
   StartCondition: (id_396[au](1): boolean)
   EndCondition: (id_569[au](0): ((id_565[au](0): interruptibleCommandHandleValues((id_562[au](UNKNOWN): string))) || (id_567[au](0): ((id_563[au](0): isknown((id_562[au](UNKNOWN): string))) && (id_398[au](1): boolean)))
   InvariantCondition: (id_400[au](1): boolean)
   PreCondition: (id_402[au](1): boolean)
   PostCondition: (id_551[au](UNKNOWN): (id_554[au](UNKNOWN): ((id_377[au](UNKNOWN):  command_handle) == (id_553[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_556[iu](UNKNOWN): (id_559[iu](UNKNOWN): ((id_377[au](UNKNOWN):  command_handle) == (id_558[iu](UNKNOWN):  command_handle))))
   AncestorInvariantCondition: (id_537[au](1): (TransparentWrapper(id_533[auT]{1}((id_302[au](1): boolean)) && TransparentWrapper(id_535[auT]{1}((id_294[au](1): boolean)))
   AncestorEndCondition: (id_543[iu](UNKNOWN): (TransparentWrapper(id_539[iuT]{0}((id_304[au](0): boolean)) || TransparentWrapper(id_541[iuT]{0}((id_481[au](0): childrenFinished(1:3))))
   ParentExecutingCondition: (id_545[iu](UNKNOWN): ((id_268[au](EXECUTING): state(EXECUTING)) == (id_496[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_414[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_561[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_547[iu](UNKNOWN): ((id_268[au](EXECUTING): state(EXECUTING)) == (id_499[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_549[iu](UNKNOWN): ((id_268[au](EXECUTING): state(EXECUTING)) == (id_502[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_573[au](0): ((id_571[au](0): allCommandHandleValues((id_562[au](UNKNOWN): string))) && (id_422[au](1): boolean))
   command_handle: (id_377[au](UNKNOWN):  command_handle)
   v_priority2: (id_424[au](15): int)
  }
  C3{
   State: (id_427[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_428[au](SUCCESS):  outcome)
   Command handle: (id_430[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   v_priority: (id_477[au](10): int)
  }
}

[Test:testOutput]Sending command result c1(20) = 10
[PlexilExec:notifyNodeConditionChanged] for node C1
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 4
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C1' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C1' on the state change queue in position 17
[PlexilExec:step][4:0] State change queue: C1 
[PlexilExec:lock]Locking node C1
[PlexilExec:step][4:0:0] Transitioning node C1
[PlexilExec:notifyNodeConditionChanged] for node C1
[PlexilExec:unlock]Unlocking node C1
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C1' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C1' on the state change queue in position 18
[PlexilExec:step][4:1] State change queue: C1 
[PlexilExec:lock]Locking node C1
[PlexilExec:step][4:1:0] Transitioning node C1
[PlexilExec:notifyNodeConditionChanged] for node C1
[PlexilExec:unlock]Unlocking node C1
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C1' was previously eligible to transition but isn't now.
[PlexilExec:cycle]==>End cycle 4
[PlexilExec:printPlan]
SimpleTask{
 State: (id_268[au](EXECUTING): state(EXECUTING)) (0)
 SkipCondition: (id_288[au](0): boolean)
 StartCondition: (id_290[au](1): boolean)
 EndCondition: (id_481[au](0): childrenFinished(2:3))
 InvariantCondition: (id_294[au](1): boolean)
 PreCondition: (id_296[au](1): boolean)
 PostCondition: (id_298[au](1): boolean)
 RepeatCondition: (id_300[au](0): boolean)
 AncestorInvariantCondition: (id_302[au](1): boolean)
 AncestorEndCondition: (id_304[au](0): boolean)
 ParentExecutingCondition: (id_306[au](1): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_478[iu](UNKNOWN): childrenWaitingOrFinished(0:3))
 AbortCompleteCondition: (id_310[au](UNKNOWN): boolean)
 ParentWaitingCondition: (id_312[au](0): boolean)
 ParentFinishedCondition: (id_314[au](0): boolean)
 CommandHandleReceivedCondition: (id_316[au](1): boolean)
 command_handle: (id_271[au](UNKNOWN):  command_handle)
  C1{
   State: (id_320[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_321[au](SUCCESS):  outcome)
   Command handle: (id_323[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   returnValue: (id_370[iu](10): int)
   mem_priority: (id_371[au](20): int)
  }
  C2{
   State: (id_374[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_394[au](0): boolean)
   StartCondition: (id_396[au](1): boolean)
   EndCondition: (id_569[au](0): ((id_565[au](0): interruptibleCommandHandleValues((id_562[au](UNKNOWN): string))) || (id_567[au](0): ((id_563[au](0): isknown((id_562[au](UNKNOWN): string))) && (id_398[au](1): boolean)))
   InvariantCondition: (id_400[au](1): boolean)
   PreCondition: (id_402[au](1): boolean)
   PostCondition: (id_551[au](UNKNOWN): (id_554[au](UNKNOWN): ((id_377[au](UNKNOWN):  command_handle) == (id_553[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_556[iu](UNKNOWN): (id_559[iu](UNKNOWN): ((id_377[au](UNKNOWN):  command_handle) == (id_558[iu](UNKNOWN):  command_handle))))
   AncestorInvariantCondition: (id_537[au](1): (TransparentWrapper(id_533[auT]{1}((id_302[au](1): boolean)) && TransparentWrapper(id_535[auT]{1}((id_294[au](1): boolean)))
   AncestorEndCondition: (id_543[iu](UNKNOWN): (TransparentWrapper(id_539[iuT]{0}((id_304[au](0): boolean)) || TransparentWrapper(id_541[iuT]{0}((id_481[au](0): childrenFinished(2:3))))
   ParentExecutingCondition: (id_545[iu](UNKNOWN): ((id_268[au](EXECUTING): state(EXECUTING)) == (id_496[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_414[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_561[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_547[iu](UNKNOWN): ((id_268[au](EXECUTING): state(EXECUTING)) == (id_499[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_549[iu](UNKNOWN): ((id_268[au](EXECUTING): state(EXECUTING)) == (id_502[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_573[au](0): ((id_571[au](0): allCommandHandleValues((id_562[au](UNKNOWN): string))) && (id_422[au](1): boolean))
   command_handle: (id_377[au](UNKNOWN):  command_handle)
   v_priority2: (id_424[au](15): int)
  }
  C3{
   State: (id_427[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_428[au](SUCCESS):  outcome)
   Command handle: (id_430[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   v_priority: (id_477[au](10): int)
  }
}

[Test:testOutput]Sending command ACK c2() = (string)COMMAND_SENT_TO_SYSTEM
[PlexilExec:notifyNodeConditionChanged] for node C2
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 5
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 19
[PlexilExec:step][5:0] State change queue: C2 
[PlexilExec:lock]Locking node C2
[PlexilExec:step][5:0:0] Transitioning node C2
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 20
[PlexilExec:step][5:1] State change queue: C2 
[PlexilExec:lock]Locking node C2
[PlexilExec:step][5:1:0] Transitioning node C2
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C2' was previously eligible to transition but isn't now.
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 21
[PlexilExec:step][5:2] State change queue: SimpleTask 
[PlexilExec:lock]Locking node SimpleTask
[PlexilExec:step][5:2:0] Transitioning node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:unlock]Unlocking node SimpleTask
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 22
[PlexilExec:step][5:3] State change queue: SimpleTask 
[PlexilExec:lock]Locking node SimpleTask
[PlexilExec:step][5:3:0] Transitioning node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:unlock]Unlocking node SimpleTask
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 23
[PlexilExec:step][5:4] State change queue: SimpleTask 
[PlexilExec:lock]Locking node SimpleTask
[PlexilExec:step][5:4:0] Transitioning node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:unlock]Unlocking node SimpleTask
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'SimpleTask' was previously eligible to transition but isn't now.
[PlexilExec:cycle]==>End cycle 5
[PlexilExec:printPlan]
SimpleTask{
 State: (id_268[au](FINISHED): state(FINISHED)) (0)
 Outcome: (id_269[au](SUCCESS):  outcome)
  C1{
   State: (id_320[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_321[au](SUCCESS):  outcome)
   Command handle: (id_323[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   returnValue: (id_370[iu](10): int)
   mem_priority: (id_371[au](20): int)
  }
  C2{
   State: (id_374[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_375[au](SUCCESS):  outcome)
   Command handle: (id_377[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   v_priority2: (id_424[au](15): int)
  }
  C3{
   State: (id_427[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_428[au](SUCCESS):  outcome)
   Command handle: (id_430[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   v_priority: (id_477[au](10): int)
  }
}

