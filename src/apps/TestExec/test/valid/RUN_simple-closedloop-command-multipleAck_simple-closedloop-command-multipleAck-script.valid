[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:addPlan]Added plan: 
SimpleDrive{
 State: SimpleDrive (id_34[au](INACTIVE): state) (inf)
  Drive{
   State: Drive (id_103[au](INACTIVE): state) (inf)
  }
  NextWaypoint{
   State: NextWaypoint (id_158[au](INACTIVE): state) (inf)
  }
}

[PlexilExec:notifyNodeConditionChanged] for node SimpleDrive
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 1
[PlexilExec:handleConditionsChanged]Node SimpleDrive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleDrive' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleDrive' on the state change queue in position 1
[PlexilExec:step][1:0] State change queue: SimpleDrive 
[PlexilExec:lock]Locking node SimpleDrive
[PlexilExec:step][1:0:0] Transitioning node SimpleDrive
[PlexilExec:notifyNodeConditionChanged] for node SimpleDrive
[PlexilExec:unlock]Unlocking node SimpleDrive
[PlexilExec:handleConditionsChanged]Node SimpleDrive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleDrive' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleDrive' on the state change queue in position 2
[PlexilExec:step][1:1] State change queue: SimpleDrive 
[PlexilExec:lock]Locking node SimpleDrive
[PlexilExec:step][1:1:0] Transitioning node SimpleDrive
[PlexilExec:notifyNodeConditionChanged] for node Drive
[PlexilExec:notifyNodeConditionChanged] for node NextWaypoint
[PlexilExec:handleNeedsExecution]Storing action for node 'SimpleDrive' of type 'NodeList' to be executed.
[PlexilExec:notifyNodeConditionChanged] for node SimpleDrive
[PlexilExec:unlock]Unlocking node SimpleDrive
[PlexilExec:handleConditionsChanged]Node Drive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'Drive' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'Drive' on the state change queue in position 3
[PlexilExec:handleConditionsChanged]Node NextWaypoint had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'NextWaypoint' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'NextWaypoint' on the state change queue in position 4
[PlexilExec:handleConditionsChanged]Node SimpleDrive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'SimpleDrive' was previously eligible to transition but isn't now.
[PlexilExec:step][1:2] State change queue: Drive NextWaypoint 
[PlexilExec:lock]Locking node Drive
[PlexilExec:lock]Locking node NextWaypoint
[PlexilExec:step][1:2:0] Transitioning node Drive
[PlexilExec:notifyNodeConditionChanged] for node Drive
[PlexilExec:step][1:2:1] Transitioning node NextWaypoint
[PlexilExec:notifyNodeConditionChanged] for node NextWaypoint
[PlexilExec:unlock]Unlocking node Drive
[PlexilExec:unlock]Unlocking node NextWaypoint
[PlexilExec:handleConditionsChanged]Node Drive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'Drive' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'Drive' on the state change queue in position 5
[PlexilExec:handleConditionsChanged]Node NextWaypoint had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'NextWaypoint' was previously eligible to transition but isn't now.
[PlexilExec:step][1:3] State change queue: Drive 
[PlexilExec:lock]Locking node Drive
[PlexilExec:step][1:3:0] Transitioning node Drive
[PlexilExec:notifyNodeConditionChanged] for node Drive
[PlexilExec:handleNeedsExecution]Storing action for node 'Drive' of type 'Command' to be executed.
[PlexilExec:unlock]Unlocking node Drive
[PlexilExec:handleConditionsChanged]Node Drive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'Drive' was previously eligible to transition but isn't now.
[PlexilExec:performAssignments] performing 0 assignments
[Test:testOutput]Executing drive() into retTestFunction (id_88[au](-1): int) with ack Drive ack (id_153[au](UNKNOWN): string)
[PlexilExec:cycle]==>End cycle 1
[PlexilExec:printPlan]
SimpleDrive{
 State: SimpleDrive (id_34[au](EXECUTING): state) (0)
 SkipCondition: Boolean constant false (id_84[au](0): boolean)
 StartCondition: Boolean constant true (id_86[au](1): boolean)
 EndCondition: (id_218[au](0): childrenFinished(0:2))
 InvariantCondition: Boolean constant true (id_86[au](1): boolean)
 PreCondition: Boolean constant true (id_86[au](1): boolean)
 PostCondition: Boolean constant true (id_86[au](1): boolean)
 RepeatCondition: Boolean constant false (id_84[au](0): boolean)
 AncestorEndCondition: Boolean constant false (id_84[au](0): boolean)
 AncestorInvariantCondition: Boolean constant true (id_86[au](1): boolean)
 ParentExecutingCondition: Boolean constant true (id_86[au](1): boolean)
 ParentFinishedCondition: Boolean constant false (id_84[au](0): boolean)
 ParentWaitingCondition: Boolean constant false (id_84[au](0): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_212[iu](UNKNOWN): childrenWaitingOrFinished(0:2))
 retTestFunction: retTestFunction (id_88[au](-1): int)
  Drive{
   State: Drive (id_103[au](EXECUTING): state) (0)
   SkipCondition: Boolean constant false (id_84[au](0): boolean)
   StartCondition: Boolean constant true (id_86[au](1): boolean)
   EndCondition: (id_249[au](0): ((id_243[au](0): interruptibleCommandHandleValues(Drive ack (id_153[au](UNKNOWN): string))) || (id_247[au](0): ((id_245[au](0): isknown(Drive ack (id_153[au](UNKNOWN): string))) && (id_233[au](0): (IntegerValue (id_235[au](10): int) == retTestFunction (id_88[au](-1): int)))))))
   InvariantCondition: Boolean constant true (id_86[au](1): boolean)
   PreCondition: Boolean constant true (id_86[au](1): boolean)
   PostCondition: (id_237[au](UNKNOWN): (id_241[au](UNKNOWN): (Drive (id_155[au](UNKNOWN): command_handle) == NodeCommandHandleValue (id_239[au](COMMAND_SUCCESS): command_handle))))
   RepeatCondition: Boolean constant false (id_84[au](0): boolean)
   AncestorEndCondition: (id_225[au](0): (Boolean constant false (id_84[au](0): boolean) || (id_218[au](0): childrenFinished(0:2))))
   AncestorInvariantCondition: (id_223[au](1): (Boolean constant true (id_86[au](1): boolean)))Boolean constant true (id_86[au](1): boolean)))
   ParentExecutingCondition: (id_92[au](1): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_90[au](EXECUTING): state)))
   ParentFinishedCondition: (id_96[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_94[au](FINISHED): state)))
   ParentWaitingCondition: (id_100[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_98[au](WAITING): state)))
   AbortCompleteCondition: anonymous (id_227[iu](UNKNOWN): boolean)
   CommandHandleReceivedCondition: (id_230[au](0): allCommandHandleValues(Drive ack (id_153[au](UNKNOWN): string)))
   Command handle: Drive (id_155[au](UNKNOWN): command_handle)
   retTestFunction: retTestFunction (id_88[au](-1): int)
  }
  NextWaypoint{
   State: NextWaypoint (id_158[au](WAITING): state) (0)
   SkipCondition: Boolean constant false (id_84[au](0): boolean)
   StartCondition: (id_260[au](UNKNOWN): (id_264[au](UNKNOWN): (Drive (id_155[au](UNKNOWN): command_handle) == NodeCommandHandleValue (id_262[au](COMMAND_RCVD_BY_SYSTEM): command_handle))))
   EndCondition: (id_272[iu](UNKNOWN): ((id_266[iu](UNKNOWN): interruptibleCommandHandleValues(NextWaypoint ack (id_208[iu](UNKNOWN): string))) || (id_270[iu](UNKNOWN): ((id_268[iu](UNKNOWN): isknown(NextWaypoint ack (id_208[iu](UNKNOWN): string))) && Boolean constant true (id_86[au](1): boolean)))))
   InvariantCondition: Boolean constant true (id_86[au](1): boolean)
   PreCondition: Boolean constant true (id_86[au](1): boolean)
   PostCondition: Boolean constant true (id_86[au](1): boolean)
   RepeatCondition: Boolean constant false (id_84[au](0): boolean)
   AncestorEndCondition: (id_225[au](0): (Boolean constant false (id_84[au](0): boolean) || (id_218[au](0): childrenFinished(0:2))))
   AncestorInvariantCondition: (id_223[au](1): (Boolean constant true (id_86[au](1): boolean)))Boolean constant true (id_86[au](1): boolean)))
   ParentExecutingCondition: (id_92[au](1): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_90[au](EXECUTING): state)))
   ParentFinishedCondition: (id_96[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_94[au](FINISHED): state)))
   ParentWaitingCondition: (id_100[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_98[au](WAITING): state)))
   AbortCompleteCondition: anonymous (id_254[iu](UNKNOWN): boolean)
   CommandHandleReceivedCondition: (id_257[iu](UNKNOWN): allCommandHandleValues(NextWaypoint ack (id_208[iu](UNKNOWN): string)))
   Command handle: NextWaypoint (id_210[au](UNKNOWN): command_handle)
  }
}

[Test:testOutput]Sending command ACK drive() = (string)COMMAND_ACCEPTED
[PlexilExec:notifyNodeConditionChanged] for node Drive
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 2
[PlexilExec:notifyNodeConditionChanged] for node Drive
[PlexilExec:notifyNodeConditionChanged] for node NextWaypoint
[PlexilExec:performAssignments] performing 0 assignments
[PlexilExec:cycle]==>End cycle 2
[PlexilExec:printPlan]
SimpleDrive{
 State: SimpleDrive (id_34[au](EXECUTING): state) (0)
 SkipCondition: Boolean constant false (id_84[au](0): boolean)
 StartCondition: Boolean constant true (id_86[au](1): boolean)
 EndCondition: (id_218[au](0): childrenFinished(0:2))
 InvariantCondition: Boolean constant true (id_86[au](1): boolean)
 PreCondition: Boolean constant true (id_86[au](1): boolean)
 PostCondition: Boolean constant true (id_86[au](1): boolean)
 RepeatCondition: Boolean constant false (id_84[au](0): boolean)
 AncestorEndCondition: Boolean constant false (id_84[au](0): boolean)
 AncestorInvariantCondition: Boolean constant true (id_86[au](1): boolean)
 ParentExecutingCondition: Boolean constant true (id_86[au](1): boolean)
 ParentFinishedCondition: Boolean constant false (id_84[au](0): boolean)
 ParentWaitingCondition: Boolean constant false (id_84[au](0): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_212[iu](UNKNOWN): childrenWaitingOrFinished(0:2))
 retTestFunction: retTestFunction (id_88[au](-1): int)
  Drive{
   State: Drive (id_103[au](EXECUTING): state) (0)
   SkipCondition: Boolean constant false (id_84[au](0): boolean)
   StartCondition: Boolean constant true (id_86[au](1): boolean)
   EndCondition: (id_249[au](0): ((id_243[au](0): interruptibleCommandHandleValues(Drive ack (id_153[au](COMMAND_ACCEPTED): string))) || (id_247[au](0): ((id_245[au](1): isknown(Drive ack (id_153[au](COMMAND_ACCEPTED): string))) && (id_233[au](0): (IntegerValue (id_235[au](10): int) == retTestFunction (id_88[au](-1): int)))))))
   InvariantCondition: Boolean constant true (id_86[au](1): boolean)
   PreCondition: Boolean constant true (id_86[au](1): boolean)
   PostCondition: (id_237[au](0): (id_241[au](0): (Drive (id_155[au](COMMAND_ACCEPTED): command_handle) == NodeCommandHandleValue (id_239[au](COMMAND_SUCCESS): command_handle))))
   RepeatCondition: Boolean constant false (id_84[au](0): boolean)
   AncestorEndCondition: (id_225[au](0): (Boolean constant false (id_84[au](0): boolean) || (id_218[au](0): childrenFinished(0:2))))
   AncestorInvariantCondition: (id_223[au](1): (Boolean constant true (id_86[au](1): boolean)))Boolean constant true (id_86[au](1): boolean)))
   ParentExecutingCondition: (id_92[au](1): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_90[au](EXECUTING): state)))
   ParentFinishedCondition: (id_96[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_94[au](FINISHED): state)))
   ParentWaitingCondition: (id_100[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_98[au](WAITING): state)))
   AbortCompleteCondition: anonymous (id_227[iu](UNKNOWN): boolean)
   CommandHandleReceivedCondition: (id_230[au](1): allCommandHandleValues(Drive ack (id_153[au](COMMAND_ACCEPTED): string)))
   Command handle: Drive (id_155[au](COMMAND_ACCEPTED): command_handle)
   retTestFunction: retTestFunction (id_88[au](-1): int)
  }
  NextWaypoint{
   State: NextWaypoint (id_158[au](WAITING): state) (0)
   SkipCondition: Boolean constant false (id_84[au](0): boolean)
   StartCondition: (id_260[au](0): (id_264[au](0): (Drive (id_155[au](COMMAND_ACCEPTED): command_handle) == NodeCommandHandleValue (id_262[au](COMMAND_RCVD_BY_SYSTEM): command_handle))))
   EndCondition: (id_272[iu](UNKNOWN): ((id_266[iu](UNKNOWN): interruptibleCommandHandleValues(NextWaypoint ack (id_208[iu](UNKNOWN): string))) || (id_270[iu](UNKNOWN): ((id_268[iu](UNKNOWN): isknown(NextWaypoint ack (id_208[iu](UNKNOWN): string))) && Boolean constant true (id_86[au](1): boolean)))))
   InvariantCondition: Boolean constant true (id_86[au](1): boolean)
   PreCondition: Boolean constant true (id_86[au](1): boolean)
   PostCondition: Boolean constant true (id_86[au](1): boolean)
   RepeatCondition: Boolean constant false (id_84[au](0): boolean)
   AncestorEndCondition: (id_225[au](0): (Boolean constant false (id_84[au](0): boolean) || (id_218[au](0): childrenFinished(0:2))))
   AncestorInvariantCondition: (id_223[au](1): (Boolean constant true (id_86[au](1): boolean)))Boolean constant true (id_86[au](1): boolean)))
   ParentExecutingCondition: (id_92[au](1): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_90[au](EXECUTING): state)))
   ParentFinishedCondition: (id_96[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_94[au](FINISHED): state)))
   ParentWaitingCondition: (id_100[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_98[au](WAITING): state)))
   AbortCompleteCondition: anonymous (id_254[iu](UNKNOWN): boolean)
   CommandHandleReceivedCondition: (id_257[iu](UNKNOWN): allCommandHandleValues(NextWaypoint ack (id_208[iu](UNKNOWN): string)))
   Command handle: NextWaypoint (id_210[au](UNKNOWN): command_handle)
  }
}

[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 3
[PlexilExec:performAssignments] performing 0 assignments
[PlexilExec:cycle]==>End cycle 3
[PlexilExec:printPlan]
SimpleDrive{
 State: SimpleDrive (id_34[au](EXECUTING): state) (0)
 SkipCondition: Boolean constant false (id_84[au](0): boolean)
 StartCondition: Boolean constant true (id_86[au](1): boolean)
 EndCondition: (id_218[au](0): childrenFinished(0:2))
 InvariantCondition: Boolean constant true (id_86[au](1): boolean)
 PreCondition: Boolean constant true (id_86[au](1): boolean)
 PostCondition: Boolean constant true (id_86[au](1): boolean)
 RepeatCondition: Boolean constant false (id_84[au](0): boolean)
 AncestorEndCondition: Boolean constant false (id_84[au](0): boolean)
 AncestorInvariantCondition: Boolean constant true (id_86[au](1): boolean)
 ParentExecutingCondition: Boolean constant true (id_86[au](1): boolean)
 ParentFinishedCondition: Boolean constant false (id_84[au](0): boolean)
 ParentWaitingCondition: Boolean constant false (id_84[au](0): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_212[iu](UNKNOWN): childrenWaitingOrFinished(0:2))
 retTestFunction: retTestFunction (id_88[au](-1): int)
  Drive{
   State: Drive (id_103[au](EXECUTING): state) (0)
   SkipCondition: Boolean constant false (id_84[au](0): boolean)
   StartCondition: Boolean constant true (id_86[au](1): boolean)
   EndCondition: (id_249[au](0): ((id_243[au](0): interruptibleCommandHandleValues(Drive ack (id_153[au](COMMAND_ACCEPTED): string))) || (id_247[au](0): ((id_245[au](1): isknown(Drive ack (id_153[au](COMMAND_ACCEPTED): string))) && (id_233[au](0): (IntegerValue (id_235[au](10): int) == retTestFunction (id_88[au](-1): int)))))))
   InvariantCondition: Boolean constant true (id_86[au](1): boolean)
   PreCondition: Boolean constant true (id_86[au](1): boolean)
   PostCondition: (id_237[au](0): (id_241[au](0): (Drive (id_155[au](COMMAND_ACCEPTED): command_handle) == NodeCommandHandleValue (id_239[au](COMMAND_SUCCESS): command_handle))))
   RepeatCondition: Boolean constant false (id_84[au](0): boolean)
   AncestorEndCondition: (id_225[au](0): (Boolean constant false (id_84[au](0): boolean) || (id_218[au](0): childrenFinished(0:2))))
   AncestorInvariantCondition: (id_223[au](1): (Boolean constant true (id_86[au](1): boolean)))Boolean constant true (id_86[au](1): boolean)))
   ParentExecutingCondition: (id_92[au](1): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_90[au](EXECUTING): state)))
   ParentFinishedCondition: (id_96[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_94[au](FINISHED): state)))
   ParentWaitingCondition: (id_100[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_98[au](WAITING): state)))
   AbortCompleteCondition: anonymous (id_227[iu](UNKNOWN): boolean)
   CommandHandleReceivedCondition: (id_230[au](1): allCommandHandleValues(Drive ack (id_153[au](COMMAND_ACCEPTED): string)))
   Command handle: Drive (id_155[au](COMMAND_ACCEPTED): command_handle)
   retTestFunction: retTestFunction (id_88[au](-1): int)
  }
  NextWaypoint{
   State: NextWaypoint (id_158[au](WAITING): state) (0)
   SkipCondition: Boolean constant false (id_84[au](0): boolean)
   StartCondition: (id_260[au](0): (id_264[au](0): (Drive (id_155[au](COMMAND_ACCEPTED): command_handle) == NodeCommandHandleValue (id_262[au](COMMAND_RCVD_BY_SYSTEM): command_handle))))
   EndCondition: (id_272[iu](UNKNOWN): ((id_266[iu](UNKNOWN): interruptibleCommandHandleValues(NextWaypoint ack (id_208[iu](UNKNOWN): string))) || (id_270[iu](UNKNOWN): ((id_268[iu](UNKNOWN): isknown(NextWaypoint ack (id_208[iu](UNKNOWN): string))) && Boolean constant true (id_86[au](1): boolean)))))
   InvariantCondition: Boolean constant true (id_86[au](1): boolean)
   PreCondition: Boolean constant true (id_86[au](1): boolean)
   PostCondition: Boolean constant true (id_86[au](1): boolean)
   RepeatCondition: Boolean constant false (id_84[au](0): boolean)
   AncestorEndCondition: (id_225[au](0): (Boolean constant false (id_84[au](0): boolean) || (id_218[au](0): childrenFinished(0:2))))
   AncestorInvariantCondition: (id_223[au](1): (Boolean constant true (id_86[au](1): boolean)))Boolean constant true (id_86[au](1): boolean)))
   ParentExecutingCondition: (id_92[au](1): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_90[au](EXECUTING): state)))
   ParentFinishedCondition: (id_96[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_94[au](FINISHED): state)))
   ParentWaitingCondition: (id_100[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_98[au](WAITING): state)))
   AbortCompleteCondition: anonymous (id_254[iu](UNKNOWN): boolean)
   CommandHandleReceivedCondition: (id_257[iu](UNKNOWN): allCommandHandleValues(NextWaypoint ack (id_208[iu](UNKNOWN): string)))
   Command handle: NextWaypoint (id_210[au](UNKNOWN): command_handle)
  }
}

[Test:testOutput]Sending command ACK drive() = (string)COMMAND_SENT_TO_SYSTEM
[PlexilExec:notifyNodeConditionChanged] for node Drive
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 4
[PlexilExec:performAssignments] performing 0 assignments
[PlexilExec:cycle]==>End cycle 4
[PlexilExec:printPlan]
SimpleDrive{
 State: SimpleDrive (id_34[au](EXECUTING): state) (0)
 SkipCondition: Boolean constant false (id_84[au](0): boolean)
 StartCondition: Boolean constant true (id_86[au](1): boolean)
 EndCondition: (id_218[au](0): childrenFinished(0:2))
 InvariantCondition: Boolean constant true (id_86[au](1): boolean)
 PreCondition: Boolean constant true (id_86[au](1): boolean)
 PostCondition: Boolean constant true (id_86[au](1): boolean)
 RepeatCondition: Boolean constant false (id_84[au](0): boolean)
 AncestorEndCondition: Boolean constant false (id_84[au](0): boolean)
 AncestorInvariantCondition: Boolean constant true (id_86[au](1): boolean)
 ParentExecutingCondition: Boolean constant true (id_86[au](1): boolean)
 ParentFinishedCondition: Boolean constant false (id_84[au](0): boolean)
 ParentWaitingCondition: Boolean constant false (id_84[au](0): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_212[iu](UNKNOWN): childrenWaitingOrFinished(0:2))
 retTestFunction: retTestFunction (id_88[au](-1): int)
  Drive{
   State: Drive (id_103[au](EXECUTING): state) (0)
   SkipCondition: Boolean constant false (id_84[au](0): boolean)
   StartCondition: Boolean constant true (id_86[au](1): boolean)
   EndCondition: (id_249[au](0): ((id_243[au](0): interruptibleCommandHandleValues(Drive ack (id_153[au](COMMAND_SENT_TO_SYSTEM): string))) || (id_247[au](0): ((id_245[au](1): isknown(Drive ack (id_153[au](COMMAND_SENT_TO_SYSTEM): string))) && (id_233[au](0): (IntegerValue (id_235[au](10): int) == retTestFunction (id_88[au](-1): int)))))))
   InvariantCondition: Boolean constant true (id_86[au](1): boolean)
   PreCondition: Boolean constant true (id_86[au](1): boolean)
   PostCondition: (id_237[au](0): (id_241[au](0): (Drive (id_155[au](COMMAND_SENT_TO_SYSTEM): command_handle) == NodeCommandHandleValue (id_239[au](COMMAND_SUCCESS): command_handle))))
   RepeatCondition: Boolean constant false (id_84[au](0): boolean)
   AncestorEndCondition: (id_225[au](0): (Boolean constant false (id_84[au](0): boolean) || (id_218[au](0): childrenFinished(0:2))))
   AncestorInvariantCondition: (id_223[au](1): (Boolean constant true (id_86[au](1): boolean)))Boolean constant true (id_86[au](1): boolean)))
   ParentExecutingCondition: (id_92[au](1): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_90[au](EXECUTING): state)))
   ParentFinishedCondition: (id_96[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_94[au](FINISHED): state)))
   ParentWaitingCondition: (id_100[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_98[au](WAITING): state)))
   AbortCompleteCondition: anonymous (id_227[iu](UNKNOWN): boolean)
   CommandHandleReceivedCondition: (id_230[au](1): allCommandHandleValues(Drive ack (id_153[au](COMMAND_SENT_TO_SYSTEM): string)))
   Command handle: Drive (id_155[au](COMMAND_SENT_TO_SYSTEM): command_handle)
   retTestFunction: retTestFunction (id_88[au](-1): int)
  }
  NextWaypoint{
   State: NextWaypoint (id_158[au](WAITING): state) (0)
   SkipCondition: Boolean constant false (id_84[au](0): boolean)
   StartCondition: (id_260[au](0): (id_264[au](0): (Drive (id_155[au](COMMAND_SENT_TO_SYSTEM): command_handle) == NodeCommandHandleValue (id_262[au](COMMAND_RCVD_BY_SYSTEM): command_handle))))
   EndCondition: (id_272[iu](UNKNOWN): ((id_266[iu](UNKNOWN): interruptibleCommandHandleValues(NextWaypoint ack (id_208[iu](UNKNOWN): string))) || (id_270[iu](UNKNOWN): ((id_268[iu](UNKNOWN): isknown(NextWaypoint ack (id_208[iu](UNKNOWN): string))) && Boolean constant true (id_86[au](1): boolean)))))
   InvariantCondition: Boolean constant true (id_86[au](1): boolean)
   PreCondition: Boolean constant true (id_86[au](1): boolean)
   PostCondition: Boolean constant true (id_86[au](1): boolean)
   RepeatCondition: Boolean constant false (id_84[au](0): boolean)
   AncestorEndCondition: (id_225[au](0): (Boolean constant false (id_84[au](0): boolean) || (id_218[au](0): childrenFinished(0:2))))
   AncestorInvariantCondition: (id_223[au](1): (Boolean constant true (id_86[au](1): boolean)))Boolean constant true (id_86[au](1): boolean)))
   ParentExecutingCondition: (id_92[au](1): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_90[au](EXECUTING): state)))
   ParentFinishedCondition: (id_96[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_94[au](FINISHED): state)))
   ParentWaitingCondition: (id_100[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_98[au](WAITING): state)))
   AbortCompleteCondition: anonymous (id_254[iu](UNKNOWN): boolean)
   CommandHandleReceivedCondition: (id_257[iu](UNKNOWN): allCommandHandleValues(NextWaypoint ack (id_208[iu](UNKNOWN): string)))
   Command handle: NextWaypoint (id_210[au](UNKNOWN): command_handle)
  }
}

[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 5
[PlexilExec:performAssignments] performing 0 assignments
[PlexilExec:cycle]==>End cycle 5
[PlexilExec:printPlan]
SimpleDrive{
 State: SimpleDrive (id_34[au](EXECUTING): state) (0)
 SkipCondition: Boolean constant false (id_84[au](0): boolean)
 StartCondition: Boolean constant true (id_86[au](1): boolean)
 EndCondition: (id_218[au](0): childrenFinished(0:2))
 InvariantCondition: Boolean constant true (id_86[au](1): boolean)
 PreCondition: Boolean constant true (id_86[au](1): boolean)
 PostCondition: Boolean constant true (id_86[au](1): boolean)
 RepeatCondition: Boolean constant false (id_84[au](0): boolean)
 AncestorEndCondition: Boolean constant false (id_84[au](0): boolean)
 AncestorInvariantCondition: Boolean constant true (id_86[au](1): boolean)
 ParentExecutingCondition: Boolean constant true (id_86[au](1): boolean)
 ParentFinishedCondition: Boolean constant false (id_84[au](0): boolean)
 ParentWaitingCondition: Boolean constant false (id_84[au](0): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_212[iu](UNKNOWN): childrenWaitingOrFinished(0:2))
 retTestFunction: retTestFunction (id_88[au](-1): int)
  Drive{
   State: Drive (id_103[au](EXECUTING): state) (0)
   SkipCondition: Boolean constant false (id_84[au](0): boolean)
   StartCondition: Boolean constant true (id_86[au](1): boolean)
   EndCondition: (id_249[au](0): ((id_243[au](0): interruptibleCommandHandleValues(Drive ack (id_153[au](COMMAND_SENT_TO_SYSTEM): string))) || (id_247[au](0): ((id_245[au](1): isknown(Drive ack (id_153[au](COMMAND_SENT_TO_SYSTEM): string))) && (id_233[au](0): (IntegerValue (id_235[au](10): int) == retTestFunction (id_88[au](-1): int)))))))
   InvariantCondition: Boolean constant true (id_86[au](1): boolean)
   PreCondition: Boolean constant true (id_86[au](1): boolean)
   PostCondition: (id_237[au](0): (id_241[au](0): (Drive (id_155[au](COMMAND_SENT_TO_SYSTEM): command_handle) == NodeCommandHandleValue (id_239[au](COMMAND_SUCCESS): command_handle))))
   RepeatCondition: Boolean constant false (id_84[au](0): boolean)
   AncestorEndCondition: (id_225[au](0): (Boolean constant false (id_84[au](0): boolean) || (id_218[au](0): childrenFinished(0:2))))
   AncestorInvariantCondition: (id_223[au](1): (Boolean constant true (id_86[au](1): boolean)))Boolean constant true (id_86[au](1): boolean)))
   ParentExecutingCondition: (id_92[au](1): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_90[au](EXECUTING): state)))
   ParentFinishedCondition: (id_96[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_94[au](FINISHED): state)))
   ParentWaitingCondition: (id_100[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_98[au](WAITING): state)))
   AbortCompleteCondition: anonymous (id_227[iu](UNKNOWN): boolean)
   CommandHandleReceivedCondition: (id_230[au](1): allCommandHandleValues(Drive ack (id_153[au](COMMAND_SENT_TO_SYSTEM): string)))
   Command handle: Drive (id_155[au](COMMAND_SENT_TO_SYSTEM): command_handle)
   retTestFunction: retTestFunction (id_88[au](-1): int)
  }
  NextWaypoint{
   State: NextWaypoint (id_158[au](WAITING): state) (0)
   SkipCondition: Boolean constant false (id_84[au](0): boolean)
   StartCondition: (id_260[au](0): (id_264[au](0): (Drive (id_155[au](COMMAND_SENT_TO_SYSTEM): command_handle) == NodeCommandHandleValue (id_262[au](COMMAND_RCVD_BY_SYSTEM): command_handle))))
   EndCondition: (id_272[iu](UNKNOWN): ((id_266[iu](UNKNOWN): interruptibleCommandHandleValues(NextWaypoint ack (id_208[iu](UNKNOWN): string))) || (id_270[iu](UNKNOWN): ((id_268[iu](UNKNOWN): isknown(NextWaypoint ack (id_208[iu](UNKNOWN): string))) && Boolean constant true (id_86[au](1): boolean)))))
   InvariantCondition: Boolean constant true (id_86[au](1): boolean)
   PreCondition: Boolean constant true (id_86[au](1): boolean)
   PostCondition: Boolean constant true (id_86[au](1): boolean)
   RepeatCondition: Boolean constant false (id_84[au](0): boolean)
   AncestorEndCondition: (id_225[au](0): (Boolean constant false (id_84[au](0): boolean) || (id_218[au](0): childrenFinished(0:2))))
   AncestorInvariantCondition: (id_223[au](1): (Boolean constant true (id_86[au](1): boolean)))Boolean constant true (id_86[au](1): boolean)))
   ParentExecutingCondition: (id_92[au](1): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_90[au](EXECUTING): state)))
   ParentFinishedCondition: (id_96[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_94[au](FINISHED): state)))
   ParentWaitingCondition: (id_100[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_98[au](WAITING): state)))
   AbortCompleteCondition: anonymous (id_254[iu](UNKNOWN): boolean)
   CommandHandleReceivedCondition: (id_257[iu](UNKNOWN): allCommandHandleValues(NextWaypoint ack (id_208[iu](UNKNOWN): string)))
   Command handle: NextWaypoint (id_210[au](UNKNOWN): command_handle)
  }
}

[Test:testOutput]Sending command ACK drive() = (string)COMMAND_RCVD_BY_SYSTEM
[PlexilExec:notifyNodeConditionChanged] for node Drive
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 6
[PlexilExec:notifyNodeConditionChanged] for node NextWaypoint
[PlexilExec:handleConditionsChanged]Node NextWaypoint had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'NextWaypoint' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'NextWaypoint' on the state change queue in position 6
[PlexilExec:step][6:0] State change queue: NextWaypoint 
[PlexilExec:lock]Locking node NextWaypoint
[PlexilExec:step][6:0:0] Transitioning node NextWaypoint
[PlexilExec:notifyNodeConditionChanged] for node NextWaypoint
[PlexilExec:handleNeedsExecution]Storing action for node 'NextWaypoint' of type 'Command' to be executed.
[PlexilExec:unlock]Unlocking node NextWaypoint
[PlexilExec:handleConditionsChanged]Node NextWaypoint had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'NextWaypoint' was previously eligible to transition but isn't now.
[PlexilExec:performAssignments] performing 0 assignments
[Test:testOutput]Executing next_waypoint() into noId with ack NextWaypoint ack (id_208[au](UNKNOWN): string)
[PlexilExec:cycle]==>End cycle 6
[PlexilExec:printPlan]
SimpleDrive{
 State: SimpleDrive (id_34[au](EXECUTING): state) (0)
 SkipCondition: Boolean constant false (id_84[au](0): boolean)
 StartCondition: Boolean constant true (id_86[au](1): boolean)
 EndCondition: (id_218[au](0): childrenFinished(0:2))
 InvariantCondition: Boolean constant true (id_86[au](1): boolean)
 PreCondition: Boolean constant true (id_86[au](1): boolean)
 PostCondition: Boolean constant true (id_86[au](1): boolean)
 RepeatCondition: Boolean constant false (id_84[au](0): boolean)
 AncestorEndCondition: Boolean constant false (id_84[au](0): boolean)
 AncestorInvariantCondition: Boolean constant true (id_86[au](1): boolean)
 ParentExecutingCondition: Boolean constant true (id_86[au](1): boolean)
 ParentFinishedCondition: Boolean constant false (id_84[au](0): boolean)
 ParentWaitingCondition: Boolean constant false (id_84[au](0): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_212[iu](UNKNOWN): childrenWaitingOrFinished(0:2))
 retTestFunction: retTestFunction (id_88[au](-1): int)
  Drive{
   State: Drive (id_103[au](EXECUTING): state) (0)
   SkipCondition: Boolean constant false (id_84[au](0): boolean)
   StartCondition: Boolean constant true (id_86[au](1): boolean)
   EndCondition: (id_249[au](0): ((id_243[au](0): interruptibleCommandHandleValues(Drive ack (id_153[au](COMMAND_RCVD_BY_SYSTEM): string))) || (id_247[au](0): ((id_245[au](1): isknown(Drive ack (id_153[au](COMMAND_RCVD_BY_SYSTEM): string))) && (id_233[au](0): (IntegerValue (id_235[au](10): int) == retTestFunction (id_88[au](-1): int)))))))
   InvariantCondition: Boolean constant true (id_86[au](1): boolean)
   PreCondition: Boolean constant true (id_86[au](1): boolean)
   PostCondition: (id_237[au](0): (id_241[au](0): (Drive (id_155[au](COMMAND_RCVD_BY_SYSTEM): command_handle) == NodeCommandHandleValue (id_239[au](COMMAND_SUCCESS): command_handle))))
   RepeatCondition: Boolean constant false (id_84[au](0): boolean)
   AncestorEndCondition: (id_225[au](0): (Boolean constant false (id_84[au](0): boolean) || (id_218[au](0): childrenFinished(0:2))))
   AncestorInvariantCondition: (id_223[au](1): (Boolean constant true (id_86[au](1): boolean)))Boolean constant true (id_86[au](1): boolean)))
   ParentExecutingCondition: (id_92[au](1): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_90[au](EXECUTING): state)))
   ParentFinishedCondition: (id_96[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_94[au](FINISHED): state)))
   ParentWaitingCondition: (id_100[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_98[au](WAITING): state)))
   AbortCompleteCondition: anonymous (id_227[iu](UNKNOWN): boolean)
   CommandHandleReceivedCondition: (id_230[au](1): allCommandHandleValues(Drive ack (id_153[au](COMMAND_RCVD_BY_SYSTEM): string)))
   Command handle: Drive (id_155[au](COMMAND_RCVD_BY_SYSTEM): command_handle)
   retTestFunction: retTestFunction (id_88[au](-1): int)
  }
  NextWaypoint{
   State: NextWaypoint (id_158[au](EXECUTING): state) (0)
   SkipCondition: Boolean constant false (id_84[au](0): boolean)
   StartCondition: (id_260[iu](UNKNOWN): (id_264[iu](UNKNOWN): (Drive (id_155[au](COMMAND_RCVD_BY_SYSTEM): command_handle) == NodeCommandHandleValue (id_262[au](COMMAND_RCVD_BY_SYSTEM): command_handle))))
   EndCondition: (id_272[au](0): ((id_266[au](0): interruptibleCommandHandleValues(NextWaypoint ack (id_208[au](UNKNOWN): string))) || (id_270[au](0): ((id_268[au](0): isknown(NextWaypoint ack (id_208[au](UNKNOWN): string))) && Boolean constant true (id_86[au](1): boolean)))))
   InvariantCondition: Boolean constant true (id_86[au](1): boolean)
   PreCondition: Boolean constant true (id_86[au](1): boolean)
   PostCondition: Boolean constant true (id_86[au](1): boolean)
   RepeatCondition: Boolean constant false (id_84[au](0): boolean)
   AncestorEndCondition: (id_225[au](0): (Boolean constant false (id_84[au](0): boolean) || (id_218[au](0): childrenFinished(0:2))))
   AncestorInvariantCondition: (id_223[au](1): (Boolean constant true (id_86[au](1): boolean)))Boolean constant true (id_86[au](1): boolean)))
   ParentExecutingCondition: (id_92[au](1): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_90[au](EXECUTING): state)))
   ParentFinishedCondition: (id_96[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_94[au](FINISHED): state)))
   ParentWaitingCondition: (id_100[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_98[au](WAITING): state)))
   AbortCompleteCondition: anonymous (id_254[iu](UNKNOWN): boolean)
   CommandHandleReceivedCondition: (id_257[au](0): allCommandHandleValues(NextWaypoint ack (id_208[au](UNKNOWN): string)))
   Command handle: NextWaypoint (id_210[au](UNKNOWN): command_handle)
  }
}

[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 7
[PlexilExec:performAssignments] performing 0 assignments
[PlexilExec:cycle]==>End cycle 7
[PlexilExec:printPlan]
SimpleDrive{
 State: SimpleDrive (id_34[au](EXECUTING): state) (0)
 SkipCondition: Boolean constant false (id_84[au](0): boolean)
 StartCondition: Boolean constant true (id_86[au](1): boolean)
 EndCondition: (id_218[au](0): childrenFinished(0:2))
 InvariantCondition: Boolean constant true (id_86[au](1): boolean)
 PreCondition: Boolean constant true (id_86[au](1): boolean)
 PostCondition: Boolean constant true (id_86[au](1): boolean)
 RepeatCondition: Boolean constant false (id_84[au](0): boolean)
 AncestorEndCondition: Boolean constant false (id_84[au](0): boolean)
 AncestorInvariantCondition: Boolean constant true (id_86[au](1): boolean)
 ParentExecutingCondition: Boolean constant true (id_86[au](1): boolean)
 ParentFinishedCondition: Boolean constant false (id_84[au](0): boolean)
 ParentWaitingCondition: Boolean constant false (id_84[au](0): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_212[iu](UNKNOWN): childrenWaitingOrFinished(0:2))
 retTestFunction: retTestFunction (id_88[au](-1): int)
  Drive{
   State: Drive (id_103[au](EXECUTING): state) (0)
   SkipCondition: Boolean constant false (id_84[au](0): boolean)
   StartCondition: Boolean constant true (id_86[au](1): boolean)
   EndCondition: (id_249[au](0): ((id_243[au](0): interruptibleCommandHandleValues(Drive ack (id_153[au](COMMAND_RCVD_BY_SYSTEM): string))) || (id_247[au](0): ((id_245[au](1): isknown(Drive ack (id_153[au](COMMAND_RCVD_BY_SYSTEM): string))) && (id_233[au](0): (IntegerValue (id_235[au](10): int) == retTestFunction (id_88[au](-1): int)))))))
   InvariantCondition: Boolean constant true (id_86[au](1): boolean)
   PreCondition: Boolean constant true (id_86[au](1): boolean)
   PostCondition: (id_237[au](0): (id_241[au](0): (Drive (id_155[au](COMMAND_RCVD_BY_SYSTEM): command_handle) == NodeCommandHandleValue (id_239[au](COMMAND_SUCCESS): command_handle))))
   RepeatCondition: Boolean constant false (id_84[au](0): boolean)
   AncestorEndCondition: (id_225[au](0): (Boolean constant false (id_84[au](0): boolean) || (id_218[au](0): childrenFinished(0:2))))
   AncestorInvariantCondition: (id_223[au](1): (Boolean constant true (id_86[au](1): boolean)))Boolean constant true (id_86[au](1): boolean)))
   ParentExecutingCondition: (id_92[au](1): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_90[au](EXECUTING): state)))
   ParentFinishedCondition: (id_96[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_94[au](FINISHED): state)))
   ParentWaitingCondition: (id_100[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_98[au](WAITING): state)))
   AbortCompleteCondition: anonymous (id_227[iu](UNKNOWN): boolean)
   CommandHandleReceivedCondition: (id_230[au](1): allCommandHandleValues(Drive ack (id_153[au](COMMAND_RCVD_BY_SYSTEM): string)))
   Command handle: Drive (id_155[au](COMMAND_RCVD_BY_SYSTEM): command_handle)
   retTestFunction: retTestFunction (id_88[au](-1): int)
  }
  NextWaypoint{
   State: NextWaypoint (id_158[au](EXECUTING): state) (0)
   SkipCondition: Boolean constant false (id_84[au](0): boolean)
   StartCondition: (id_260[iu](UNKNOWN): (id_264[iu](UNKNOWN): (Drive (id_155[au](COMMAND_RCVD_BY_SYSTEM): command_handle) == NodeCommandHandleValue (id_262[au](COMMAND_RCVD_BY_SYSTEM): command_handle))))
   EndCondition: (id_272[au](0): ((id_266[au](0): interruptibleCommandHandleValues(NextWaypoint ack (id_208[au](UNKNOWN): string))) || (id_270[au](0): ((id_268[au](0): isknown(NextWaypoint ack (id_208[au](UNKNOWN): string))) && Boolean constant true (id_86[au](1): boolean)))))
   InvariantCondition: Boolean constant true (id_86[au](1): boolean)
   PreCondition: Boolean constant true (id_86[au](1): boolean)
   PostCondition: Boolean constant true (id_86[au](1): boolean)
   RepeatCondition: Boolean constant false (id_84[au](0): boolean)
   AncestorEndCondition: (id_225[au](0): (Boolean constant false (id_84[au](0): boolean) || (id_218[au](0): childrenFinished(0:2))))
   AncestorInvariantCondition: (id_223[au](1): (Boolean constant true (id_86[au](1): boolean)))Boolean constant true (id_86[au](1): boolean)))
   ParentExecutingCondition: (id_92[au](1): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_90[au](EXECUTING): state)))
   ParentFinishedCondition: (id_96[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_94[au](FINISHED): state)))
   ParentWaitingCondition: (id_100[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_98[au](WAITING): state)))
   AbortCompleteCondition: anonymous (id_254[iu](UNKNOWN): boolean)
   CommandHandleReceivedCondition: (id_257[au](0): allCommandHandleValues(NextWaypoint ack (id_208[au](UNKNOWN): string)))
   Command handle: NextWaypoint (id_210[au](UNKNOWN): command_handle)
  }
}

[Test:testOutput]Sending command ACK drive() = (string)COMMAND_SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node Drive
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 8
[PlexilExec:notifyNodeConditionChanged] for node Drive
[PlexilExec:performAssignments] performing 0 assignments
[PlexilExec:cycle]==>End cycle 8
[PlexilExec:printPlan]
SimpleDrive{
 State: SimpleDrive (id_34[au](EXECUTING): state) (0)
 SkipCondition: Boolean constant false (id_84[au](0): boolean)
 StartCondition: Boolean constant true (id_86[au](1): boolean)
 EndCondition: (id_218[au](0): childrenFinished(0:2))
 InvariantCondition: Boolean constant true (id_86[au](1): boolean)
 PreCondition: Boolean constant true (id_86[au](1): boolean)
 PostCondition: Boolean constant true (id_86[au](1): boolean)
 RepeatCondition: Boolean constant false (id_84[au](0): boolean)
 AncestorEndCondition: Boolean constant false (id_84[au](0): boolean)
 AncestorInvariantCondition: Boolean constant true (id_86[au](1): boolean)
 ParentExecutingCondition: Boolean constant true (id_86[au](1): boolean)
 ParentFinishedCondition: Boolean constant false (id_84[au](0): boolean)
 ParentWaitingCondition: Boolean constant false (id_84[au](0): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_212[iu](UNKNOWN): childrenWaitingOrFinished(0:2))
 retTestFunction: retTestFunction (id_88[au](-1): int)
  Drive{
   State: Drive (id_103[au](EXECUTING): state) (0)
   SkipCondition: Boolean constant false (id_84[au](0): boolean)
   StartCondition: Boolean constant true (id_86[au](1): boolean)
   EndCondition: (id_249[au](0): ((id_243[au](0): interruptibleCommandHandleValues(Drive ack (id_153[au](COMMAND_SUCCESS): string))) || (id_247[au](0): ((id_245[au](1): isknown(Drive ack (id_153[au](COMMAND_SUCCESS): string))) && (id_233[au](0): (IntegerValue (id_235[au](10): int) == retTestFunction (id_88[au](-1): int)))))))
   InvariantCondition: Boolean constant true (id_86[au](1): boolean)
   PreCondition: Boolean constant true (id_86[au](1): boolean)
   PostCondition: (id_237[au](1): (id_241[au](1): (Drive (id_155[au](COMMAND_SUCCESS): command_handle) == NodeCommandHandleValue (id_239[au](COMMAND_SUCCESS): command_handle))))
   RepeatCondition: Boolean constant false (id_84[au](0): boolean)
   AncestorEndCondition: (id_225[au](0): (Boolean constant false (id_84[au](0): boolean) || (id_218[au](0): childrenFinished(0:2))))
   AncestorInvariantCondition: (id_223[au](1): (Boolean constant true (id_86[au](1): boolean)))Boolean constant true (id_86[au](1): boolean)))
   ParentExecutingCondition: (id_92[au](1): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_90[au](EXECUTING): state)))
   ParentFinishedCondition: (id_96[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_94[au](FINISHED): state)))
   ParentWaitingCondition: (id_100[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_98[au](WAITING): state)))
   AbortCompleteCondition: anonymous (id_227[iu](UNKNOWN): boolean)
   CommandHandleReceivedCondition: (id_230[au](1): allCommandHandleValues(Drive ack (id_153[au](COMMAND_SUCCESS): string)))
   Command handle: Drive (id_155[au](COMMAND_SUCCESS): command_handle)
   retTestFunction: retTestFunction (id_88[au](-1): int)
  }
  NextWaypoint{
   State: NextWaypoint (id_158[au](EXECUTING): state) (0)
   SkipCondition: Boolean constant false (id_84[au](0): boolean)
   StartCondition: (id_260[iu](UNKNOWN): (id_264[iu](UNKNOWN): (Drive (id_155[au](COMMAND_SUCCESS): command_handle) == NodeCommandHandleValue (id_262[au](COMMAND_RCVD_BY_SYSTEM): command_handle))))
   EndCondition: (id_272[au](0): ((id_266[au](0): interruptibleCommandHandleValues(NextWaypoint ack (id_208[au](UNKNOWN): string))) || (id_270[au](0): ((id_268[au](0): isknown(NextWaypoint ack (id_208[au](UNKNOWN): string))) && Boolean constant true (id_86[au](1): boolean)))))
   InvariantCondition: Boolean constant true (id_86[au](1): boolean)
   PreCondition: Boolean constant true (id_86[au](1): boolean)
   PostCondition: Boolean constant true (id_86[au](1): boolean)
   RepeatCondition: Boolean constant false (id_84[au](0): boolean)
   AncestorEndCondition: (id_225[au](0): (Boolean constant false (id_84[au](0): boolean) || (id_218[au](0): childrenFinished(0:2))))
   AncestorInvariantCondition: (id_223[au](1): (Boolean constant true (id_86[au](1): boolean)))Boolean constant true (id_86[au](1): boolean)))
   ParentExecutingCondition: (id_92[au](1): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_90[au](EXECUTING): state)))
   ParentFinishedCondition: (id_96[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_94[au](FINISHED): state)))
   ParentWaitingCondition: (id_100[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_98[au](WAITING): state)))
   AbortCompleteCondition: anonymous (id_254[iu](UNKNOWN): boolean)
   CommandHandleReceivedCondition: (id_257[au](0): allCommandHandleValues(NextWaypoint ack (id_208[au](UNKNOWN): string)))
   Command handle: NextWaypoint (id_210[au](UNKNOWN): command_handle)
  }
}

[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 9
[PlexilExec:performAssignments] performing 0 assignments
[PlexilExec:cycle]==>End cycle 9
[PlexilExec:printPlan]
SimpleDrive{
 State: SimpleDrive (id_34[au](EXECUTING): state) (0)
 SkipCondition: Boolean constant false (id_84[au](0): boolean)
 StartCondition: Boolean constant true (id_86[au](1): boolean)
 EndCondition: (id_218[au](0): childrenFinished(0:2))
 InvariantCondition: Boolean constant true (id_86[au](1): boolean)
 PreCondition: Boolean constant true (id_86[au](1): boolean)
 PostCondition: Boolean constant true (id_86[au](1): boolean)
 RepeatCondition: Boolean constant false (id_84[au](0): boolean)
 AncestorEndCondition: Boolean constant false (id_84[au](0): boolean)
 AncestorInvariantCondition: Boolean constant true (id_86[au](1): boolean)
 ParentExecutingCondition: Boolean constant true (id_86[au](1): boolean)
 ParentFinishedCondition: Boolean constant false (id_84[au](0): boolean)
 ParentWaitingCondition: Boolean constant false (id_84[au](0): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_212[iu](UNKNOWN): childrenWaitingOrFinished(0:2))
 retTestFunction: retTestFunction (id_88[au](-1): int)
  Drive{
   State: Drive (id_103[au](EXECUTING): state) (0)
   SkipCondition: Boolean constant false (id_84[au](0): boolean)
   StartCondition: Boolean constant true (id_86[au](1): boolean)
   EndCondition: (id_249[au](0): ((id_243[au](0): interruptibleCommandHandleValues(Drive ack (id_153[au](COMMAND_SUCCESS): string))) || (id_247[au](0): ((id_245[au](1): isknown(Drive ack (id_153[au](COMMAND_SUCCESS): string))) && (id_233[au](0): (IntegerValue (id_235[au](10): int) == retTestFunction (id_88[au](-1): int)))))))
   InvariantCondition: Boolean constant true (id_86[au](1): boolean)
   PreCondition: Boolean constant true (id_86[au](1): boolean)
   PostCondition: (id_237[au](1): (id_241[au](1): (Drive (id_155[au](COMMAND_SUCCESS): command_handle) == NodeCommandHandleValue (id_239[au](COMMAND_SUCCESS): command_handle))))
   RepeatCondition: Boolean constant false (id_84[au](0): boolean)
   AncestorEndCondition: (id_225[au](0): (Boolean constant false (id_84[au](0): boolean) || (id_218[au](0): childrenFinished(0:2))))
   AncestorInvariantCondition: (id_223[au](1): (Boolean constant true (id_86[au](1): boolean)))Boolean constant true (id_86[au](1): boolean)))
   ParentExecutingCondition: (id_92[au](1): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_90[au](EXECUTING): state)))
   ParentFinishedCondition: (id_96[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_94[au](FINISHED): state)))
   ParentWaitingCondition: (id_100[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_98[au](WAITING): state)))
   AbortCompleteCondition: anonymous (id_227[iu](UNKNOWN): boolean)
   CommandHandleReceivedCondition: (id_230[au](1): allCommandHandleValues(Drive ack (id_153[au](COMMAND_SUCCESS): string)))
   Command handle: Drive (id_155[au](COMMAND_SUCCESS): command_handle)
   retTestFunction: retTestFunction (id_88[au](-1): int)
  }
  NextWaypoint{
   State: NextWaypoint (id_158[au](EXECUTING): state) (0)
   SkipCondition: Boolean constant false (id_84[au](0): boolean)
   StartCondition: (id_260[iu](UNKNOWN): (id_264[iu](UNKNOWN): (Drive (id_155[au](COMMAND_SUCCESS): command_handle) == NodeCommandHandleValue (id_262[au](COMMAND_RCVD_BY_SYSTEM): command_handle))))
   EndCondition: (id_272[au](0): ((id_266[au](0): interruptibleCommandHandleValues(NextWaypoint ack (id_208[au](UNKNOWN): string))) || (id_270[au](0): ((id_268[au](0): isknown(NextWaypoint ack (id_208[au](UNKNOWN): string))) && Boolean constant true (id_86[au](1): boolean)))))
   InvariantCondition: Boolean constant true (id_86[au](1): boolean)
   PreCondition: Boolean constant true (id_86[au](1): boolean)
   PostCondition: Boolean constant true (id_86[au](1): boolean)
   RepeatCondition: Boolean constant false (id_84[au](0): boolean)
   AncestorEndCondition: (id_225[au](0): (Boolean constant false (id_84[au](0): boolean) || (id_218[au](0): childrenFinished(0:2))))
   AncestorInvariantCondition: (id_223[au](1): (Boolean constant true (id_86[au](1): boolean)))Boolean constant true (id_86[au](1): boolean)))
   ParentExecutingCondition: (id_92[au](1): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_90[au](EXECUTING): state)))
   ParentFinishedCondition: (id_96[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_94[au](FINISHED): state)))
   ParentWaitingCondition: (id_100[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_98[au](WAITING): state)))
   AbortCompleteCondition: anonymous (id_254[iu](UNKNOWN): boolean)
   CommandHandleReceivedCondition: (id_257[au](0): allCommandHandleValues(NextWaypoint ack (id_208[au](UNKNOWN): string)))
   Command handle: NextWaypoint (id_210[au](UNKNOWN): command_handle)
  }
}

[Test:testOutput]Sending command ACK next_waypoint() = (string)COMMAND_SENT_TO_SYSTEM
[PlexilExec:notifyNodeConditionChanged] for node NextWaypoint
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 10
[PlexilExec:handleConditionsChanged]Node NextWaypoint had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'NextWaypoint' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'NextWaypoint' on the state change queue in position 7
[PlexilExec:step][10:0] State change queue: NextWaypoint 
[PlexilExec:lock]Locking node NextWaypoint
[PlexilExec:step][10:0:0] Transitioning node NextWaypoint
[PlexilExec:notifyNodeConditionChanged] for node NextWaypoint
[PlexilExec:unlock]Unlocking node NextWaypoint
[PlexilExec:handleConditionsChanged]Node NextWaypoint had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'NextWaypoint' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'NextWaypoint' on the state change queue in position 8
[PlexilExec:step][10:1] State change queue: NextWaypoint 
[PlexilExec:lock]Locking node NextWaypoint
[PlexilExec:step][10:1:0] Transitioning node NextWaypoint
[PlexilExec:notifyNodeConditionChanged] for node NextWaypoint
[PlexilExec:unlock]Unlocking node NextWaypoint
[PlexilExec:handleConditionsChanged]Node NextWaypoint had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'NextWaypoint' was previously eligible to transition but isn't now.
[PlexilExec:performAssignments] performing 0 assignments
[PlexilExec:cycle]==>End cycle 10
[PlexilExec:printPlan]
SimpleDrive{
 State: SimpleDrive (id_34[au](EXECUTING): state) (0)
 SkipCondition: Boolean constant false (id_84[au](0): boolean)
 StartCondition: Boolean constant true (id_86[au](1): boolean)
 EndCondition: (id_218[au](0): childrenFinished(1:2))
 InvariantCondition: Boolean constant true (id_86[au](1): boolean)
 PreCondition: Boolean constant true (id_86[au](1): boolean)
 PostCondition: Boolean constant true (id_86[au](1): boolean)
 RepeatCondition: Boolean constant false (id_84[au](0): boolean)
 AncestorEndCondition: Boolean constant false (id_84[au](0): boolean)
 AncestorInvariantCondition: Boolean constant true (id_86[au](1): boolean)
 ParentExecutingCondition: Boolean constant true (id_86[au](1): boolean)
 ParentFinishedCondition: Boolean constant false (id_84[au](0): boolean)
 ParentWaitingCondition: Boolean constant false (id_84[au](0): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_212[iu](UNKNOWN): childrenWaitingOrFinished(0:2))
 retTestFunction: retTestFunction (id_88[au](-1): int)
  Drive{
   State: Drive (id_103[au](EXECUTING): state) (0)
   SkipCondition: Boolean constant false (id_84[au](0): boolean)
   StartCondition: Boolean constant true (id_86[au](1): boolean)
   EndCondition: (id_249[au](0): ((id_243[au](0): interruptibleCommandHandleValues(Drive ack (id_153[au](COMMAND_SUCCESS): string))) || (id_247[au](0): ((id_245[au](1): isknown(Drive ack (id_153[au](COMMAND_SUCCESS): string))) && (id_233[au](0): (IntegerValue (id_235[au](10): int) == retTestFunction (id_88[au](-1): int)))))))
   InvariantCondition: Boolean constant true (id_86[au](1): boolean)
   PreCondition: Boolean constant true (id_86[au](1): boolean)
   PostCondition: (id_237[au](1): (id_241[au](1): (Drive (id_155[au](COMMAND_SUCCESS): command_handle) == NodeCommandHandleValue (id_239[au](COMMAND_SUCCESS): command_handle))))
   RepeatCondition: Boolean constant false (id_84[au](0): boolean)
   AncestorEndCondition: (id_225[au](0): (Boolean constant false (id_84[au](0): boolean) || (id_218[au](0): childrenFinished(1:2))))
   AncestorInvariantCondition: (id_223[au](1): (Boolean constant true (id_86[au](1): boolean)))Boolean constant true (id_86[au](1): boolean)))
   ParentExecutingCondition: (id_92[au](1): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_90[au](EXECUTING): state)))
   ParentFinishedCondition: (id_96[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_94[au](FINISHED): state)))
   ParentWaitingCondition: (id_100[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_98[au](WAITING): state)))
   AbortCompleteCondition: anonymous (id_227[iu](UNKNOWN): boolean)
   CommandHandleReceivedCondition: (id_230[au](1): allCommandHandleValues(Drive ack (id_153[au](COMMAND_SUCCESS): string)))
   Command handle: Drive (id_155[au](COMMAND_SUCCESS): command_handle)
   retTestFunction: retTestFunction (id_88[au](-1): int)
  }
  NextWaypoint{
   State: NextWaypoint (id_158[au](FINISHED): state) (0)
   Outcome: NextWaypoint (id_160[au](SUCCESS): outcome)
   Command handle: NextWaypoint (id_210[au](COMMAND_SENT_TO_SYSTEM): command_handle)
  }
}

[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 11
[PlexilExec:performAssignments] performing 0 assignments
[PlexilExec:cycle]==>End cycle 11
[PlexilExec:printPlan]
SimpleDrive{
 State: SimpleDrive (id_34[au](EXECUTING): state) (0)
 SkipCondition: Boolean constant false (id_84[au](0): boolean)
 StartCondition: Boolean constant true (id_86[au](1): boolean)
 EndCondition: (id_218[au](0): childrenFinished(1:2))
 InvariantCondition: Boolean constant true (id_86[au](1): boolean)
 PreCondition: Boolean constant true (id_86[au](1): boolean)
 PostCondition: Boolean constant true (id_86[au](1): boolean)
 RepeatCondition: Boolean constant false (id_84[au](0): boolean)
 AncestorEndCondition: Boolean constant false (id_84[au](0): boolean)
 AncestorInvariantCondition: Boolean constant true (id_86[au](1): boolean)
 ParentExecutingCondition: Boolean constant true (id_86[au](1): boolean)
 ParentFinishedCondition: Boolean constant false (id_84[au](0): boolean)
 ParentWaitingCondition: Boolean constant false (id_84[au](0): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_212[iu](UNKNOWN): childrenWaitingOrFinished(0:2))
 retTestFunction: retTestFunction (id_88[au](-1): int)
  Drive{
   State: Drive (id_103[au](EXECUTING): state) (0)
   SkipCondition: Boolean constant false (id_84[au](0): boolean)
   StartCondition: Boolean constant true (id_86[au](1): boolean)
   EndCondition: (id_249[au](0): ((id_243[au](0): interruptibleCommandHandleValues(Drive ack (id_153[au](COMMAND_SUCCESS): string))) || (id_247[au](0): ((id_245[au](1): isknown(Drive ack (id_153[au](COMMAND_SUCCESS): string))) && (id_233[au](0): (IntegerValue (id_235[au](10): int) == retTestFunction (id_88[au](-1): int)))))))
   InvariantCondition: Boolean constant true (id_86[au](1): boolean)
   PreCondition: Boolean constant true (id_86[au](1): boolean)
   PostCondition: (id_237[au](1): (id_241[au](1): (Drive (id_155[au](COMMAND_SUCCESS): command_handle) == NodeCommandHandleValue (id_239[au](COMMAND_SUCCESS): command_handle))))
   RepeatCondition: Boolean constant false (id_84[au](0): boolean)
   AncestorEndCondition: (id_225[au](0): (Boolean constant false (id_84[au](0): boolean) || (id_218[au](0): childrenFinished(1:2))))
   AncestorInvariantCondition: (id_223[au](1): (Boolean constant true (id_86[au](1): boolean)))Boolean constant true (id_86[au](1): boolean)))
   ParentExecutingCondition: (id_92[au](1): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_90[au](EXECUTING): state)))
   ParentFinishedCondition: (id_96[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_94[au](FINISHED): state)))
   ParentWaitingCondition: (id_100[au](0): (SimpleDrive (id_34[au](EXECUTING): state) == anonymous (id_98[au](WAITING): state)))
   AbortCompleteCondition: anonymous (id_227[iu](UNKNOWN): boolean)
   CommandHandleReceivedCondition: (id_230[au](1): allCommandHandleValues(Drive ack (id_153[au](COMMAND_SUCCESS): string)))
   Command handle: Drive (id_155[au](COMMAND_SUCCESS): command_handle)
   retTestFunction: retTestFunction (id_88[au](-1): int)
  }
  NextWaypoint{
   State: NextWaypoint (id_158[au](FINISHED): state) (0)
   Outcome: NextWaypoint (id_160[au](SUCCESS): outcome)
   Command handle: NextWaypoint (id_210[au](COMMAND_SENT_TO_SYSTEM): command_handle)
  }
}

[Test:testOutput]Sending command result drive() = 10
[PlexilExec:notifyNodeConditionChanged] for node Drive
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 12
[PlexilExec:handleConditionsChanged]Node Drive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'Drive' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'Drive' on the state change queue in position 9
[PlexilExec:step][12:0] State change queue: Drive 
[PlexilExec:lock]Locking node Drive
[PlexilExec:step][12:0:0] Transitioning node Drive
[PlexilExec:notifyNodeConditionChanged] for node Drive
[PlexilExec:unlock]Unlocking node Drive
[PlexilExec:handleConditionsChanged]Node Drive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'Drive' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'Drive' on the state change queue in position 10
[PlexilExec:step][12:1] State change queue: Drive 
[PlexilExec:lock]Locking node Drive
[PlexilExec:step][12:1:0] Transitioning node Drive
[PlexilExec:notifyNodeConditionChanged] for node SimpleDrive
[PlexilExec:notifyNodeConditionChanged] for node Drive
[PlexilExec:unlock]Unlocking node Drive
[PlexilExec:handleConditionsChanged]Node SimpleDrive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleDrive' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleDrive' on the state change queue in position 11
[PlexilExec:handleConditionsChanged]Node Drive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'Drive' was previously eligible to transition but isn't now.
[PlexilExec:step][12:2] State change queue: SimpleDrive 
[PlexilExec:lock]Locking node SimpleDrive
[PlexilExec:step][12:2:0] Transitioning node SimpleDrive
[PlexilExec:notifyNodeConditionChanged] for node SimpleDrive
[PlexilExec:unlock]Unlocking node SimpleDrive
[PlexilExec:handleConditionsChanged]Node SimpleDrive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleDrive' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleDrive' on the state change queue in position 12
[PlexilExec:step][12:3] State change queue: SimpleDrive 
[PlexilExec:lock]Locking node SimpleDrive
[PlexilExec:step][12:3:0] Transitioning node SimpleDrive
[PlexilExec:notifyNodeConditionChanged] for node SimpleDrive
[PlexilExec:unlock]Unlocking node SimpleDrive
[PlexilExec:handleConditionsChanged]Node SimpleDrive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleDrive' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleDrive' on the state change queue in position 13
[PlexilExec:step][12:4] State change queue: SimpleDrive 
[PlexilExec:lock]Locking node SimpleDrive
[PlexilExec:step][12:4:0] Transitioning node SimpleDrive
[PlexilExec:notifyNodeConditionChanged] for node SimpleDrive
[PlexilExec:unlock]Unlocking node SimpleDrive
[PlexilExec:handleConditionsChanged]Node SimpleDrive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'SimpleDrive' was previously eligible to transition but isn't now.
[PlexilExec:performAssignments] performing 0 assignments
[PlexilExec:cycle]==>End cycle 12
[PlexilExec:printPlan]
SimpleDrive{
 State: SimpleDrive (id_34[au](FINISHED): state) (0)
 Outcome: SimpleDrive (id_36[au](SUCCESS): outcome)
 retTestFunction: retTestFunction (id_88[iu](10): int)
  Drive{
   State: Drive (id_103[au](FINISHED): state) (0)
   Outcome: Drive (id_105[au](SUCCESS): outcome)
   Command handle: Drive (id_155[au](COMMAND_SUCCESS): command_handle)
   retTestFunction: retTestFunction (id_88[iu](10): int)
  }
  NextWaypoint{
   State: NextWaypoint (id_158[au](FINISHED): state) (0)
   Outcome: NextWaypoint (id_160[au](SUCCESS): outcome)
   Command handle: NextWaypoint (id_210[au](COMMAND_SENT_TO_SYSTEM): command_handle)
  }
}

