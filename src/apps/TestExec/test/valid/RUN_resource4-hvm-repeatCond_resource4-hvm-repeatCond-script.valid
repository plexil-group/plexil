[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:addPlan]Added plan: 
SimpleTask{
 State: (id_266[au](INACTIVE): state(INACTIVE)) (inf)
  C1{
   State: (id_306[au](INACTIVE): state(INACTIVE)) (inf)
  }
  C2{
   State: (id_345[au](INACTIVE): state(INACTIVE)) (inf)
  }
  C3{
   State: (id_383[au](INACTIVE): state(INACTIVE)) (inf)
  }
}

[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 1
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 1
[PlexilExec:step][1:0] State change queue: SimpleTask 
[PlexilExec:lock]Locking node SimpleTask
[PlexilExec:step][1:0:0] Transitioning node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:unlock]Unlocking node SimpleTask
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 2
[PlexilExec:step][1:1] State change queue: SimpleTask 
[PlexilExec:lock]Locking node SimpleTask
[PlexilExec:step][1:1:0] Transitioning node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node C1
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:notifyNodeConditionChanged] for node C3
[PlexilExec:handleNeedsExecution]Storing action for node 'SimpleTask' of type 'NodeList' to be executed.
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:unlock]Unlocking node SimpleTask
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C1' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C1' on the state change queue in position 3
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 4
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C3' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C3' on the state change queue in position 5
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'SimpleTask' was previously eligible to transition but isn't now.
[PlexilExec:step][1:2] State change queue: C1 C2 C3 
[PlexilExec:lock]Locking node C1
[PlexilExec:lock]Locking node C2
[PlexilExec:lock]Locking node C3
[PlexilExec:step][1:2:0] Transitioning node C1
[PlexilExec:notifyNodeConditionChanged] for node C1
[PlexilExec:step][1:2:1] Transitioning node C2
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:step][1:2:2] Transitioning node C3
[PlexilExec:notifyNodeConditionChanged] for node C3
[PlexilExec:unlock]Unlocking node C1
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:unlock]Unlocking node C3
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C1' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C1' on the state change queue in position 6
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 7
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C3' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C3' on the state change queue in position 8
[PlexilExec:step][1:3] State change queue: C1 C2 C3 
[PlexilExec:lock]Locking node C1
[PlexilExec:lock]Locking node C2
[PlexilExec:lock]Locking node C3
[PlexilExec:step][1:3:0] Transitioning node C1
[PlexilExec:notifyNodeConditionChanged] for node C1
[PlexilExec:handleNeedsExecution]Storing action for node 'C1' of type 'Command' to be executed.
[PlexilExec:step][1:3:1] Transitioning node C2
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:handleNeedsExecution]Storing action for node 'C2' of type 'Command' to be executed.
[PlexilExec:step][1:3:2] Transitioning node C3
[PlexilExec:notifyNodeConditionChanged] for node C3
[PlexilExec:handleNeedsExecution]Storing action for node 'C3' of type 'Command' to be executed.
[PlexilExec:unlock]Unlocking node C1
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:unlock]Unlocking node C3
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C1' was previously eligible to transition but isn't now.
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C2' was previously eligible to transition but isn't now.
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C3' was previously eligible to transition but isn't now.
[Test:testOutput]Executing c1(20) into (id_341[au](-1): int) with ack (id_455[au](UNKNOWN): string)
[Test:testOutput]Permission to execute c2 has been denied by the resource arbiter.
[PlexilExec:notifyNodeConditionChanged] for node C2
[Test:testOutput]Executing c3() into noId with ack (id_537[au](UNKNOWN): string)
[PlexilExec:cycle]==>End cycle 1
[PlexilExec:printPlan]
SimpleTask{
 State: (id_266[au](EXECUTING): state(EXECUTING)) (0)
 SkipCondition: (id_301[au](0): boolean)
 StartCondition: (id_302[au](1): boolean)
 EndCondition: (id_422[au](0): childrenFinished(0:3))
 InvariantCondition: (id_302[au](1): boolean)
 PreCondition: (id_302[au](1): boolean)
 PostCondition: (id_302[au](1): boolean)
 RepeatCondition: (id_301[au](0): boolean)
 AncestorInvariantCondition: (id_302[au](1): boolean)
 AncestorEndCondition: (id_301[au](0): boolean)
 ParentExecutingCondition: (id_302[au](1): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_419[iu](UNKNOWN): childrenWaitingOrFinished(0:3))
 AbortCompleteCondition: (id_303[au](UNKNOWN): boolean)
 ParentWaitingCondition: (id_301[au](0): boolean)
 ParentFinishedCondition: (id_301[au](0): boolean)
 CommandHandleReceivedCondition: (id_302[au](1): boolean)
  C1{
   State: (id_306[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_301[au](0): boolean)
   StartCondition: (id_302[au](1): boolean)
   EndCondition: (id_462[au](0): ((id_456[au](0): interruptibleCommandHandleValues((id_455[au](UNKNOWN): string))) || (id_460[au](0): ((id_458[au](0): isknown((id_455[au](UNKNOWN): string))) && (id_446[au](0): ((id_448[au](10): int) == (id_341[au](-1): int)))))
   InvariantCondition: (id_302[au](1): boolean)
   PreCondition: (id_302[au](1): boolean)
   PostCondition: (id_449[au](UNKNOWN): (id_452[au](UNKNOWN): ((id_309[au](UNKNOWN):  command_handle) == (id_451[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_301[au](0): boolean)
   AncestorInvariantCondition: (id_429[au](1): (TransparentWrapper(id_425[auT]{1}((id_302[au](1): boolean)) && TransparentWrapper(id_427[auT]{1}((id_302[au](1): boolean)))
   AncestorEndCondition: (id_435[iu](UNKNOWN): (TransparentWrapper(id_431[iuT]{0}((id_301[au](0): boolean)) || TransparentWrapper(id_433[iuT]{0}((id_422[au](0): childrenFinished(0:3))))
   ParentExecutingCondition: (id_438[iu](UNKNOWN): ((id_266[au](EXECUTING): state(EXECUTING)) == (id_437[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_303[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_454[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_441[iu](UNKNOWN): ((id_266[au](EXECUTING): state(EXECUTING)) == (id_440[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_444[iu](UNKNOWN): ((id_266[au](EXECUTING): state(EXECUTING)) == (id_443[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_464[au](0): allCommandHandleValues((id_455[au](UNKNOWN): string)))
   Command handle: (id_309[au](UNKNOWN):  command_handle)
   head_priority: (id_342[au](20): int)
   returnValue: (id_341[au](-1): int)
  }
  C2{
   State: (id_345[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_301[au](0): boolean)
   StartCondition: (id_302[au](1): boolean)
   EndCondition: (id_506[au](1): ((id_500[au](1): interruptibleCommandHandleValues((id_499[au](COMMAND_DENIED): string))) || (id_504[au](1): ((id_502[au](1): isknown((id_499[au](COMMAND_DENIED): string))) && (id_302[au](1): boolean)))
   InvariantCondition: (id_302[au](1): boolean)
   PreCondition: (id_302[au](1): boolean)
   PostCondition: (id_488[au](UNKNOWN): (id_491[au](UNKNOWN): ((id_348[au](UNKNOWN):  command_handle) == (id_490[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_493[iu](UNKNOWN): (id_496[iu](UNKNOWN): ((id_348[au](UNKNOWN):  command_handle) == (id_495[iu](UNKNOWN):  command_handle))))
   AncestorInvariantCondition: (id_474[au](1): (TransparentWrapper(id_470[auT]{1}((id_302[au](1): boolean)) && TransparentWrapper(id_472[auT]{1}((id_302[au](1): boolean)))
   AncestorEndCondition: (id_480[iu](UNKNOWN): (TransparentWrapper(id_476[iuT]{0}((id_301[au](0): boolean)) || TransparentWrapper(id_478[iuT]{0}((id_422[au](0): childrenFinished(0:3))))
   ParentExecutingCondition: (id_482[iu](UNKNOWN): ((id_266[au](EXECUTING): state(EXECUTING)) == (id_437[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_303[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_498[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_484[iu](UNKNOWN): ((id_266[au](EXECUTING): state(EXECUTING)) == (id_440[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_486[iu](UNKNOWN): ((id_266[au](EXECUTING): state(EXECUTING)) == (id_443[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_508[au](1): allCommandHandleValues((id_499[au](COMMAND_DENIED): string)))
   Command handle: (id_348[au](UNKNOWN):  command_handle)
   v_priority2: (id_380[au](25): int)
  }
  C3{
   State: (id_383[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_301[au](0): boolean)
   StartCondition: (id_302[au](1): boolean)
   EndCondition: (id_544[au](0): ((id_538[au](0): interruptibleCommandHandleValues((id_537[au](UNKNOWN): string))) || (id_542[au](0): ((id_540[au](0): isknown((id_537[au](UNKNOWN): string))) && (id_302[au](1): boolean)))
   InvariantCondition: (id_302[au](1): boolean)
   PreCondition: (id_302[au](1): boolean)
   PostCondition: (id_531[au](UNKNOWN): (id_534[au](UNKNOWN): ((id_386[au](UNKNOWN):  command_handle) == (id_533[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_301[au](0): boolean)
   AncestorInvariantCondition: (id_517[au](1): (TransparentWrapper(id_513[auT]{1}((id_302[au](1): boolean)) && TransparentWrapper(id_515[auT]{1}((id_302[au](1): boolean)))
   AncestorEndCondition: (id_523[iu](UNKNOWN): (TransparentWrapper(id_519[iuT]{0}((id_301[au](0): boolean)) || TransparentWrapper(id_521[iuT]{0}((id_422[au](0): childrenFinished(0:3))))
   ParentExecutingCondition: (id_525[iu](UNKNOWN): ((id_266[au](EXECUTING): state(EXECUTING)) == (id_437[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_303[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_536[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_527[iu](UNKNOWN): ((id_266[au](EXECUTING): state(EXECUTING)) == (id_440[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_529[iu](UNKNOWN): ((id_266[au](EXECUTING): state(EXECUTING)) == (id_443[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_546[au](0): allCommandHandleValues((id_537[au](UNKNOWN): string)))
   Command handle: (id_386[au](UNKNOWN):  command_handle)
   mem_priority2: (id_418[au](30): int)
  }
}

[Test:testOutput]Sending command ACK c1(20) = (string)COMMAND_SENT_TO_SYSTEM
[PlexilExec:notifyNodeConditionChanged] for node C1
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 2
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 9
[PlexilExec:notifyNodeConditionChanged] for node C1
[PlexilExec:step][2:0] State change queue: C2 
[PlexilExec:lock]Locking node C2
[PlexilExec:step][2:0:0] Transitioning node C2
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 10
[PlexilExec:step][2:1] State change queue: C2 
[PlexilExec:lock]Locking node C2
[PlexilExec:step][2:1:0] Transitioning node C2
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 11
[PlexilExec:step][2:2] State change queue: C2 
[PlexilExec:lock]Locking node C2
[PlexilExec:step][2:2:0] Transitioning node C2
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:handleNeedsExecution]Storing action for node 'C2' of type 'Command' to be executed.
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C2' was previously eligible to transition but isn't now.
[Test:testOutput]Permission to execute c2 has been denied by the resource arbiter.
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:cycle]==>End cycle 2
[PlexilExec:printPlan]
SimpleTask{
 State: (id_266[au](EXECUTING): state(EXECUTING)) (0)
 SkipCondition: (id_301[au](0): boolean)
 StartCondition: (id_302[au](1): boolean)
 EndCondition: (id_422[au](0): childrenFinished(0:3))
 InvariantCondition: (id_302[au](1): boolean)
 PreCondition: (id_302[au](1): boolean)
 PostCondition: (id_302[au](1): boolean)
 RepeatCondition: (id_301[au](0): boolean)
 AncestorInvariantCondition: (id_302[au](1): boolean)
 AncestorEndCondition: (id_301[au](0): boolean)
 ParentExecutingCondition: (id_302[au](1): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_419[iu](UNKNOWN): childrenWaitingOrFinished(0:3))
 AbortCompleteCondition: (id_303[au](UNKNOWN): boolean)
 ParentWaitingCondition: (id_301[au](0): boolean)
 ParentFinishedCondition: (id_301[au](0): boolean)
 CommandHandleReceivedCondition: (id_302[au](1): boolean)
  C1{
   State: (id_306[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_301[au](0): boolean)
   StartCondition: (id_302[au](1): boolean)
   EndCondition: (id_462[au](0): ((id_456[au](0): interruptibleCommandHandleValues((id_455[au](COMMAND_SENT_TO_SYSTEM): string))) || (id_460[au](0): ((id_458[au](1): isknown((id_455[au](COMMAND_SENT_TO_SYSTEM): string))) && (id_446[au](0): ((id_448[au](10): int) == (id_341[au](-1): int)))))
   InvariantCondition: (id_302[au](1): boolean)
   PreCondition: (id_302[au](1): boolean)
   PostCondition: (id_449[au](1): (id_452[au](1): ((id_309[au](COMMAND_SENT_TO_SYSTEM):  command_handle) == (id_451[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_301[au](0): boolean)
   AncestorInvariantCondition: (id_429[au](1): (TransparentWrapper(id_425[auT]{1}((id_302[au](1): boolean)) && TransparentWrapper(id_427[auT]{1}((id_302[au](1): boolean)))
   AncestorEndCondition: (id_435[iu](UNKNOWN): (TransparentWrapper(id_431[iuT]{0}((id_301[au](0): boolean)) || TransparentWrapper(id_433[iuT]{0}((id_422[au](0): childrenFinished(0:3))))
   ParentExecutingCondition: (id_438[iu](UNKNOWN): ((id_266[au](EXECUTING): state(EXECUTING)) == (id_437[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_303[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_454[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_441[iu](UNKNOWN): ((id_266[au](EXECUTING): state(EXECUTING)) == (id_440[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_444[iu](UNKNOWN): ((id_266[au](EXECUTING): state(EXECUTING)) == (id_443[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_464[au](1): allCommandHandleValues((id_455[au](COMMAND_SENT_TO_SYSTEM): string)))
   Command handle: (id_309[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   head_priority: (id_342[au](20): int)
   returnValue: (id_341[au](-1): int)
  }
  C2{
   State: (id_345[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_301[au](0): boolean)
   StartCondition: (id_302[au](1): boolean)
   EndCondition: (id_506[au](1): ((id_500[au](1): interruptibleCommandHandleValues((id_499[au](COMMAND_DENIED): string))) || (id_504[au](1): ((id_502[au](1): isknown((id_499[au](COMMAND_DENIED): string))) && (id_302[au](1): boolean)))
   InvariantCondition: (id_302[au](1): boolean)
   PreCondition: (id_302[au](1): boolean)
   PostCondition: (id_488[au](UNKNOWN): (id_491[au](UNKNOWN): ((id_348[au](UNKNOWN):  command_handle) == (id_490[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_493[iu](UNKNOWN): (id_496[iu](UNKNOWN): ((id_348[au](UNKNOWN):  command_handle) == (id_495[iu](UNKNOWN):  command_handle))))
   AncestorInvariantCondition: (id_474[au](1): (TransparentWrapper(id_470[auT]{1}((id_302[au](1): boolean)) && TransparentWrapper(id_472[auT]{1}((id_302[au](1): boolean)))
   AncestorEndCondition: (id_480[iu](UNKNOWN): (TransparentWrapper(id_476[iuT]{0}((id_301[au](0): boolean)) || TransparentWrapper(id_478[iuT]{0}((id_422[au](0): childrenFinished(0:3))))
   ParentExecutingCondition: (id_482[iu](UNKNOWN): ((id_266[au](EXECUTING): state(EXECUTING)) == (id_437[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_303[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_498[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_484[iu](UNKNOWN): ((id_266[au](EXECUTING): state(EXECUTING)) == (id_440[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_486[iu](UNKNOWN): ((id_266[au](EXECUTING): state(EXECUTING)) == (id_443[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_508[au](1): allCommandHandleValues((id_499[au](COMMAND_DENIED): string)))
   Command handle: (id_348[au](UNKNOWN):  command_handle)
   v_priority2: (id_380[au](25): int)
  }
  C3{
   State: (id_383[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_301[au](0): boolean)
   StartCondition: (id_302[au](1): boolean)
   EndCondition: (id_544[au](0): ((id_538[au](0): interruptibleCommandHandleValues((id_537[au](UNKNOWN): string))) || (id_542[au](0): ((id_540[au](0): isknown((id_537[au](UNKNOWN): string))) && (id_302[au](1): boolean)))
   InvariantCondition: (id_302[au](1): boolean)
   PreCondition: (id_302[au](1): boolean)
   PostCondition: (id_531[au](UNKNOWN): (id_534[au](UNKNOWN): ((id_386[au](UNKNOWN):  command_handle) == (id_533[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_301[au](0): boolean)
   AncestorInvariantCondition: (id_517[au](1): (TransparentWrapper(id_513[auT]{1}((id_302[au](1): boolean)) && TransparentWrapper(id_515[auT]{1}((id_302[au](1): boolean)))
   AncestorEndCondition: (id_523[iu](UNKNOWN): (TransparentWrapper(id_519[iuT]{0}((id_301[au](0): boolean)) || TransparentWrapper(id_521[iuT]{0}((id_422[au](0): childrenFinished(0:3))))
   ParentExecutingCondition: (id_525[iu](UNKNOWN): ((id_266[au](EXECUTING): state(EXECUTING)) == (id_437[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_303[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_536[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_527[iu](UNKNOWN): ((id_266[au](EXECUTING): state(EXECUTING)) == (id_440[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_529[iu](UNKNOWN): ((id_266[au](EXECUTING): state(EXECUTING)) == (id_443[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_546[au](0): allCommandHandleValues((id_537[au](UNKNOWN): string)))
   Command handle: (id_386[au](UNKNOWN):  command_handle)
   mem_priority2: (id_418[au](30): int)
  }
}

[Test:testOutput]Sending command ACK c3() = (string)COMMAND_SENT_TO_SYSTEM
[PlexilExec:notifyNodeConditionChanged] for node C3
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 3
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 12
[PlexilExec:notifyNodeConditionChanged] for node C3
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C3' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C3' on the state change queue in position 13
[PlexilExec:step][3:0] State change queue: C2 C3 
[PlexilExec:lock]Locking node C2
[PlexilExec:lock]Locking node C3
[PlexilExec:step][3:0:0] Transitioning node C2
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:step][3:0:1] Transitioning node C3
[PlexilExec:notifyNodeConditionChanged] for node C3
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:unlock]Unlocking node C3
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 14
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C3' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C3' on the state change queue in position 15
[PlexilExec:step][3:1] State change queue: C2 C3 
[PlexilExec:lock]Locking node C2
[PlexilExec:lock]Locking node C3
[PlexilExec:step][3:1:0] Transitioning node C2
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:step][3:1:1] Transitioning node C3
[PlexilExec:notifyNodeConditionChanged] for node C3
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:unlock]Unlocking node C3
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 16
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C3' was previously eligible to transition but isn't now.
[PlexilExec:step][3:2] State change queue: C2 
[PlexilExec:lock]Locking node C2
[PlexilExec:step][3:2:0] Transitioning node C2
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:handleNeedsExecution]Storing action for node 'C2' of type 'Command' to be executed.
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C2' was previously eligible to transition but isn't now.
[Test:testOutput]Permission to execute c2 has been denied by the resource arbiter.
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:cycle]==>End cycle 3
[PlexilExec:printPlan]
SimpleTask{
 State: (id_266[au](EXECUTING): state(EXECUTING)) (0)
 SkipCondition: (id_301[au](0): boolean)
 StartCondition: (id_302[au](1): boolean)
 EndCondition: (id_422[au](0): childrenFinished(1:3))
 InvariantCondition: (id_302[au](1): boolean)
 PreCondition: (id_302[au](1): boolean)
 PostCondition: (id_302[au](1): boolean)
 RepeatCondition: (id_301[au](0): boolean)
 AncestorInvariantCondition: (id_302[au](1): boolean)
 AncestorEndCondition: (id_301[au](0): boolean)
 ParentExecutingCondition: (id_302[au](1): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_419[iu](UNKNOWN): childrenWaitingOrFinished(0:3))
 AbortCompleteCondition: (id_303[au](UNKNOWN): boolean)
 ParentWaitingCondition: (id_301[au](0): boolean)
 ParentFinishedCondition: (id_301[au](0): boolean)
 CommandHandleReceivedCondition: (id_302[au](1): boolean)
  C1{
   State: (id_306[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_301[au](0): boolean)
   StartCondition: (id_302[au](1): boolean)
   EndCondition: (id_462[au](0): ((id_456[au](0): interruptibleCommandHandleValues((id_455[au](COMMAND_SENT_TO_SYSTEM): string))) || (id_460[au](0): ((id_458[au](1): isknown((id_455[au](COMMAND_SENT_TO_SYSTEM): string))) && (id_446[au](0): ((id_448[au](10): int) == (id_341[au](-1): int)))))
   InvariantCondition: (id_302[au](1): boolean)
   PreCondition: (id_302[au](1): boolean)
   PostCondition: (id_449[au](1): (id_452[au](1): ((id_309[au](COMMAND_SENT_TO_SYSTEM):  command_handle) == (id_451[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_301[au](0): boolean)
   AncestorInvariantCondition: (id_429[au](1): (TransparentWrapper(id_425[auT]{1}((id_302[au](1): boolean)) && TransparentWrapper(id_427[auT]{1}((id_302[au](1): boolean)))
   AncestorEndCondition: (id_435[iu](UNKNOWN): (TransparentWrapper(id_431[iuT]{0}((id_301[au](0): boolean)) || TransparentWrapper(id_433[iuT]{0}((id_422[au](0): childrenFinished(1:3))))
   ParentExecutingCondition: (id_438[iu](UNKNOWN): ((id_266[au](EXECUTING): state(EXECUTING)) == (id_437[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_303[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_454[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_441[iu](UNKNOWN): ((id_266[au](EXECUTING): state(EXECUTING)) == (id_440[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_444[iu](UNKNOWN): ((id_266[au](EXECUTING): state(EXECUTING)) == (id_443[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_464[au](1): allCommandHandleValues((id_455[au](COMMAND_SENT_TO_SYSTEM): string)))
   Command handle: (id_309[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   head_priority: (id_342[au](20): int)
   returnValue: (id_341[au](-1): int)
  }
  C2{
   State: (id_345[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_301[au](0): boolean)
   StartCondition: (id_302[au](1): boolean)
   EndCondition: (id_506[au](1): ((id_500[au](1): interruptibleCommandHandleValues((id_499[au](COMMAND_DENIED): string))) || (id_504[au](1): ((id_502[au](1): isknown((id_499[au](COMMAND_DENIED): string))) && (id_302[au](1): boolean)))
   InvariantCondition: (id_302[au](1): boolean)
   PreCondition: (id_302[au](1): boolean)
   PostCondition: (id_488[au](UNKNOWN): (id_491[au](UNKNOWN): ((id_348[au](UNKNOWN):  command_handle) == (id_490[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_493[iu](UNKNOWN): (id_496[iu](UNKNOWN): ((id_348[au](UNKNOWN):  command_handle) == (id_495[iu](UNKNOWN):  command_handle))))
   AncestorInvariantCondition: (id_474[au](1): (TransparentWrapper(id_470[auT]{1}((id_302[au](1): boolean)) && TransparentWrapper(id_472[auT]{1}((id_302[au](1): boolean)))
   AncestorEndCondition: (id_480[iu](UNKNOWN): (TransparentWrapper(id_476[iuT]{0}((id_301[au](0): boolean)) || TransparentWrapper(id_478[iuT]{0}((id_422[au](0): childrenFinished(1:3))))
   ParentExecutingCondition: (id_482[iu](UNKNOWN): ((id_266[au](EXECUTING): state(EXECUTING)) == (id_437[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_303[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_498[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_484[iu](UNKNOWN): ((id_266[au](EXECUTING): state(EXECUTING)) == (id_440[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_486[iu](UNKNOWN): ((id_266[au](EXECUTING): state(EXECUTING)) == (id_443[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_508[au](1): allCommandHandleValues((id_499[au](COMMAND_DENIED): string)))
   Command handle: (id_348[au](UNKNOWN):  command_handle)
   v_priority2: (id_380[au](25): int)
  }
  C3{
   State: (id_383[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_384[au](SUCCESS):  outcome)
   Command handle: (id_386[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   mem_priority2: (id_418[au](30): int)
  }
}

[Test:testOutput]Sending command result c1(20) = 10
[PlexilExec:notifyNodeConditionChanged] for node C1
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 4
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 17
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C1' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C1' on the state change queue in position 18
[PlexilExec:step][4:0] State change queue: C2 C1 
[PlexilExec:lock]Locking node C2
[PlexilExec:lock]Locking node C1
[PlexilExec:step][4:0:0] Transitioning node C2
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:step][4:0:1] Transitioning node C1
[PlexilExec:notifyNodeConditionChanged] for node C1
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:unlock]Unlocking node C1
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 19
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C1' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C1' on the state change queue in position 20
[PlexilExec:step][4:1] State change queue: C2 C1 
[PlexilExec:lock]Locking node C2
[PlexilExec:lock]Locking node C1
[PlexilExec:step][4:1:0] Transitioning node C2
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:step][4:1:1] Transitioning node C1
[PlexilExec:notifyNodeConditionChanged] for node C1
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:unlock]Unlocking node C1
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 21
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C1' was previously eligible to transition but isn't now.
[PlexilExec:step][4:2] State change queue: C2 
[PlexilExec:lock]Locking node C2
[PlexilExec:step][4:2:0] Transitioning node C2
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:handleNeedsExecution]Storing action for node 'C2' of type 'Command' to be executed.
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C2' was previously eligible to transition but isn't now.
[Test:testOutput]Executing c2() into noId with ack (id_499[au](UNKNOWN): string)
[PlexilExec:cycle]==>End cycle 4
[PlexilExec:printPlan]
SimpleTask{
 State: (id_266[au](EXECUTING): state(EXECUTING)) (0)
 SkipCondition: (id_301[au](0): boolean)
 StartCondition: (id_302[au](1): boolean)
 EndCondition: (id_422[au](0): childrenFinished(2:3))
 InvariantCondition: (id_302[au](1): boolean)
 PreCondition: (id_302[au](1): boolean)
 PostCondition: (id_302[au](1): boolean)
 RepeatCondition: (id_301[au](0): boolean)
 AncestorInvariantCondition: (id_302[au](1): boolean)
 AncestorEndCondition: (id_301[au](0): boolean)
 ParentExecutingCondition: (id_302[au](1): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_419[iu](UNKNOWN): childrenWaitingOrFinished(0:3))
 AbortCompleteCondition: (id_303[au](UNKNOWN): boolean)
 ParentWaitingCondition: (id_301[au](0): boolean)
 ParentFinishedCondition: (id_301[au](0): boolean)
 CommandHandleReceivedCondition: (id_302[au](1): boolean)
  C1{
   State: (id_306[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_307[au](SUCCESS):  outcome)
   Command handle: (id_309[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   head_priority: (id_342[au](20): int)
   returnValue: (id_341[iu](10): int)
  }
  C2{
   State: (id_345[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_301[au](0): boolean)
   StartCondition: (id_302[au](1): boolean)
   EndCondition: (id_506[au](0): ((id_500[au](0): interruptibleCommandHandleValues((id_499[au](UNKNOWN): string))) || (id_504[au](0): ((id_502[au](0): isknown((id_499[au](UNKNOWN): string))) && (id_302[au](1): boolean)))
   InvariantCondition: (id_302[au](1): boolean)
   PreCondition: (id_302[au](1): boolean)
   PostCondition: (id_488[au](UNKNOWN): (id_491[au](UNKNOWN): ((id_348[au](UNKNOWN):  command_handle) == (id_490[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_493[iu](UNKNOWN): (id_496[iu](UNKNOWN): ((id_348[au](UNKNOWN):  command_handle) == (id_495[iu](UNKNOWN):  command_handle))))
   AncestorInvariantCondition: (id_474[au](1): (TransparentWrapper(id_470[auT]{1}((id_302[au](1): boolean)) && TransparentWrapper(id_472[auT]{1}((id_302[au](1): boolean)))
   AncestorEndCondition: (id_480[iu](UNKNOWN): (TransparentWrapper(id_476[iuT]{0}((id_301[au](0): boolean)) || TransparentWrapper(id_478[iuT]{0}((id_422[au](0): childrenFinished(2:3))))
   ParentExecutingCondition: (id_482[iu](UNKNOWN): ((id_266[au](EXECUTING): state(EXECUTING)) == (id_437[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_303[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_498[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_484[iu](UNKNOWN): ((id_266[au](EXECUTING): state(EXECUTING)) == (id_440[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_486[iu](UNKNOWN): ((id_266[au](EXECUTING): state(EXECUTING)) == (id_443[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_508[au](0): allCommandHandleValues((id_499[au](UNKNOWN): string)))
   Command handle: (id_348[au](UNKNOWN):  command_handle)
   v_priority2: (id_380[au](25): int)
  }
  C3{
   State: (id_383[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_384[au](SUCCESS):  outcome)
   Command handle: (id_386[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   mem_priority2: (id_418[au](30): int)
  }
}

[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 5
[PlexilExec:cycle]==>End cycle 5
[PlexilExec:printPlan]
SimpleTask{
 State: (id_266[au](EXECUTING): state(EXECUTING)) (0)
 SkipCondition: (id_301[au](0): boolean)
 StartCondition: (id_302[au](1): boolean)
 EndCondition: (id_422[au](0): childrenFinished(2:3))
 InvariantCondition: (id_302[au](1): boolean)
 PreCondition: (id_302[au](1): boolean)
 PostCondition: (id_302[au](1): boolean)
 RepeatCondition: (id_301[au](0): boolean)
 AncestorInvariantCondition: (id_302[au](1): boolean)
 AncestorEndCondition: (id_301[au](0): boolean)
 ParentExecutingCondition: (id_302[au](1): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_419[iu](UNKNOWN): childrenWaitingOrFinished(0:3))
 AbortCompleteCondition: (id_303[au](UNKNOWN): boolean)
 ParentWaitingCondition: (id_301[au](0): boolean)
 ParentFinishedCondition: (id_301[au](0): boolean)
 CommandHandleReceivedCondition: (id_302[au](1): boolean)
  C1{
   State: (id_306[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_307[au](SUCCESS):  outcome)
   Command handle: (id_309[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   head_priority: (id_342[au](20): int)
   returnValue: (id_341[iu](10): int)
  }
  C2{
   State: (id_345[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_301[au](0): boolean)
   StartCondition: (id_302[au](1): boolean)
   EndCondition: (id_506[au](0): ((id_500[au](0): interruptibleCommandHandleValues((id_499[au](UNKNOWN): string))) || (id_504[au](0): ((id_502[au](0): isknown((id_499[au](UNKNOWN): string))) && (id_302[au](1): boolean)))
   InvariantCondition: (id_302[au](1): boolean)
   PreCondition: (id_302[au](1): boolean)
   PostCondition: (id_488[au](UNKNOWN): (id_491[au](UNKNOWN): ((id_348[au](UNKNOWN):  command_handle) == (id_490[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_493[iu](UNKNOWN): (id_496[iu](UNKNOWN): ((id_348[au](UNKNOWN):  command_handle) == (id_495[iu](UNKNOWN):  command_handle))))
   AncestorInvariantCondition: (id_474[au](1): (TransparentWrapper(id_470[auT]{1}((id_302[au](1): boolean)) && TransparentWrapper(id_472[auT]{1}((id_302[au](1): boolean)))
   AncestorEndCondition: (id_480[iu](UNKNOWN): (TransparentWrapper(id_476[iuT]{0}((id_301[au](0): boolean)) || TransparentWrapper(id_478[iuT]{0}((id_422[au](0): childrenFinished(2:3))))
   ParentExecutingCondition: (id_482[iu](UNKNOWN): ((id_266[au](EXECUTING): state(EXECUTING)) == (id_437[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_303[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_498[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_484[iu](UNKNOWN): ((id_266[au](EXECUTING): state(EXECUTING)) == (id_440[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_486[iu](UNKNOWN): ((id_266[au](EXECUTING): state(EXECUTING)) == (id_443[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_508[au](0): allCommandHandleValues((id_499[au](UNKNOWN): string)))
   Command handle: (id_348[au](UNKNOWN):  command_handle)
   v_priority2: (id_380[au](25): int)
  }
  C3{
   State: (id_383[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_384[au](SUCCESS):  outcome)
   Command handle: (id_386[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   mem_priority2: (id_418[au](30): int)
  }
}

[Test:testOutput]Sending command ACK c2() = (string)COMMAND_SENT_TO_SYSTEM
[PlexilExec:notifyNodeConditionChanged] for node C2
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 6
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 22
[PlexilExec:step][6:0] State change queue: C2 
[PlexilExec:lock]Locking node C2
[PlexilExec:step][6:0:0] Transitioning node C2
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 23
[PlexilExec:step][6:1] State change queue: C2 
[PlexilExec:lock]Locking node C2
[PlexilExec:step][6:1:0] Transitioning node C2
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C2' was previously eligible to transition but isn't now.
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 24
[PlexilExec:step][6:2] State change queue: SimpleTask 
[PlexilExec:lock]Locking node SimpleTask
[PlexilExec:step][6:2:0] Transitioning node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:unlock]Unlocking node SimpleTask
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 25
[PlexilExec:step][6:3] State change queue: SimpleTask 
[PlexilExec:lock]Locking node SimpleTask
[PlexilExec:step][6:3:0] Transitioning node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:unlock]Unlocking node SimpleTask
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 26
[PlexilExec:step][6:4] State change queue: SimpleTask 
[PlexilExec:lock]Locking node SimpleTask
[PlexilExec:step][6:4:0] Transitioning node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:unlock]Unlocking node SimpleTask
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'SimpleTask' was previously eligible to transition but isn't now.
[PlexilExec:cycle]==>End cycle 6
[PlexilExec:printPlan]
SimpleTask{
 State: (id_266[au](FINISHED): state(FINISHED)) (0)
 Outcome: (id_267[au](SUCCESS):  outcome)
  C1{
   State: (id_306[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_307[au](SUCCESS):  outcome)
   Command handle: (id_309[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   head_priority: (id_342[au](20): int)
   returnValue: (id_341[iu](10): int)
  }
  C2{
   State: (id_345[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_346[au](SUCCESS):  outcome)
   Command handle: (id_348[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   v_priority2: (id_380[au](25): int)
  }
  C3{
   State: (id_383[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_384[au](SUCCESS):  outcome)
   Command handle: (id_386[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   mem_priority2: (id_418[au](30): int)
  }
}

