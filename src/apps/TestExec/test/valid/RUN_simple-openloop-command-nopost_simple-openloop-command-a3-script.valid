[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:addPlan]Added plan: 
SimpleDrive{
 State: (id_217[au](INACTIVE): state(INACTIVE)) (inf)
  Drive{
   State: (id_269[au](INACTIVE): state(INACTIVE)) (inf)
  }
}

[PlexilExec:notifyNodeConditionChanged] for node SimpleDrive
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 1
[PlexilExec:handleConditionsChanged]Node SimpleDrive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleDrive' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleDrive' on the state change queue in position 1
[PlexilExec:step][1:0] State change queue: SimpleDrive 
[PlexilExec:lock]Locking node SimpleDrive
[PlexilExec:step][1:0:0] Transitioning node SimpleDrive
[PlexilExec:notifyNodeConditionChanged] for node SimpleDrive
[PlexilExec:unlock]Unlocking node SimpleDrive
[PlexilExec:handleConditionsChanged]Node SimpleDrive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleDrive' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleDrive' on the state change queue in position 2
[PlexilExec:step][1:1] State change queue: SimpleDrive 
[PlexilExec:lock]Locking node SimpleDrive
[PlexilExec:step][1:1:0] Transitioning node SimpleDrive
[PlexilExec:notifyNodeConditionChanged] for node Drive
[PlexilExec:handleNeedsExecution]Storing action for node 'SimpleDrive' of type 'NodeList' to be executed.
[PlexilExec:notifyNodeConditionChanged] for node SimpleDrive
[PlexilExec:unlock]Unlocking node SimpleDrive
[PlexilExec:handleConditionsChanged]Node Drive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'Drive' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'Drive' on the state change queue in position 3
[PlexilExec:handleConditionsChanged]Node SimpleDrive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'SimpleDrive' was previously eligible to transition but isn't now.
[PlexilExec:step][1:2] State change queue: Drive 
[PlexilExec:lock]Locking node Drive
[PlexilExec:step][1:2:0] Transitioning node Drive
[PlexilExec:notifyNodeConditionChanged] for node Drive
[PlexilExec:unlock]Unlocking node Drive
[PlexilExec:handleConditionsChanged]Node Drive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'Drive' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'Drive' on the state change queue in position 4
[PlexilExec:step][1:3] State change queue: Drive 
[PlexilExec:lock]Locking node Drive
[PlexilExec:step][1:3:0] Transitioning node Drive
[PlexilExec:notifyNodeConditionChanged] for node Drive
[PlexilExec:handleNeedsExecution]Storing action for node 'Drive' of type 'Command' to be executed.
[PlexilExec:unlock]Unlocking node Drive
[PlexilExec:handleConditionsChanged]Node Drive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'Drive' was previously eligible to transition but isn't now.
[Test:testOutput]Executing drive() into noId with ack (id_347[au](UNKNOWN): string)
[PlexilExec:cycle]==>End cycle 1
[PlexilExec:printPlan]
SimpleDrive{
 State: (id_217[au](EXECUTING): state(EXECUTING)) (0)
 SkipCondition: (id_237[au](0): boolean)
 StartCondition: (id_239[au](1): boolean)
 EndCondition: (id_322[au](0): childrenFinished(0:1))
 InvariantCondition: (id_243[au](1): boolean)
 PreCondition: (id_245[au](1): boolean)
 PostCondition: (id_247[au](1): boolean)
 RepeatCondition: (id_249[au](0): boolean)
 AncestorInvariantCondition: (id_251[au](1): boolean)
 AncestorEndCondition: (id_253[au](0): boolean)
 ParentExecutingCondition: (id_255[au](1): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_319[iu](UNKNOWN): childrenWaitingOrFinished(0:1))
 AbortCompleteCondition: (id_259[au](UNKNOWN): boolean)
 ParentWaitingCondition: (id_261[au](0): boolean)
 ParentFinishedCondition: (id_263[au](0): boolean)
 CommandHandleReceivedCondition: (id_265[au](1): boolean)
 command_handle: (id_220[au](UNKNOWN):  command_handle)
  Drive{
   State: (id_269[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_289[au](0): boolean)
   StartCondition: (id_291[au](1): boolean)
   EndCondition: (id_354[au](0): ((id_350[au](0): interruptibleCommandHandleValues((id_347[au](UNKNOWN): string))) || (id_352[au](0): ((id_348[au](0): isknown((id_347[au](UNKNOWN): string))) && (id_293[au](1): boolean)))
   InvariantCondition: (id_295[au](1): boolean)
   PreCondition: (id_297[au](1): boolean)
   PostCondition: (id_299[au](1): boolean)
   RepeatCondition: (id_301[au](0): boolean)
   AncestorInvariantCondition: (id_329[au](1): (TransparentWrapper(id_325[auT]{1}((id_251[au](1): boolean)) && TransparentWrapper(id_327[auT]{1}((id_243[au](1): boolean)))
   AncestorEndCondition: (id_335[iu](UNKNOWN): (TransparentWrapper(id_331[iuT]{0}((id_253[au](0): boolean)) || TransparentWrapper(id_333[iuT]{0}((id_322[au](0): childrenFinished(0:1))))
   ParentExecutingCondition: (id_338[iu](UNKNOWN): ((id_217[au](EXECUTING): state(EXECUTING)) == (id_337[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_309[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_346[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_341[iu](UNKNOWN): ((id_217[au](EXECUTING): state(EXECUTING)) == (id_340[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_344[iu](UNKNOWN): ((id_217[au](EXECUTING): state(EXECUTING)) == (id_343[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_358[au](0): ((id_356[au](0): allCommandHandleValues((id_347[au](UNKNOWN): string))) && (id_317[au](1): boolean))
   command_handle: (id_272[au](UNKNOWN):  command_handle)
  }
}

[Test:testOutput]Sending command ACK drive() = (string)COMMAND_DENIED
[PlexilExec:notifyNodeConditionChanged] for node Drive
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 2
[PlexilExec:handleConditionsChanged]Node Drive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'Drive' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'Drive' on the state change queue in position 5
[PlexilExec:step][2:0] State change queue: Drive 
[PlexilExec:lock]Locking node Drive
[PlexilExec:step][2:0:0] Transitioning node Drive
[PlexilExec:notifyNodeConditionChanged] for node Drive
[PlexilExec:unlock]Unlocking node Drive
[PlexilExec:handleConditionsChanged]Node Drive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'Drive' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'Drive' on the state change queue in position 6
[PlexilExec:step][2:1] State change queue: Drive 
[PlexilExec:lock]Locking node Drive
[PlexilExec:step][2:1:0] Transitioning node Drive
[PlexilExec:notifyNodeConditionChanged] for node Drive
[PlexilExec:notifyNodeConditionChanged] for node SimpleDrive
[PlexilExec:unlock]Unlocking node Drive
[PlexilExec:handleConditionsChanged]Node Drive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'Drive' was previously eligible to transition but isn't now.
[PlexilExec:handleConditionsChanged]Node SimpleDrive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleDrive' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleDrive' on the state change queue in position 7
[PlexilExec:step][2:2] State change queue: SimpleDrive 
[PlexilExec:lock]Locking node SimpleDrive
[PlexilExec:step][2:2:0] Transitioning node SimpleDrive
[PlexilExec:notifyNodeConditionChanged] for node SimpleDrive
[PlexilExec:unlock]Unlocking node SimpleDrive
[PlexilExec:handleConditionsChanged]Node SimpleDrive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleDrive' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleDrive' on the state change queue in position 8
[PlexilExec:step][2:3] State change queue: SimpleDrive 
[PlexilExec:lock]Locking node SimpleDrive
[PlexilExec:step][2:3:0] Transitioning node SimpleDrive
[PlexilExec:notifyNodeConditionChanged] for node SimpleDrive
[PlexilExec:unlock]Unlocking node SimpleDrive
[PlexilExec:handleConditionsChanged]Node SimpleDrive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleDrive' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleDrive' on the state change queue in position 9
[PlexilExec:step][2:4] State change queue: SimpleDrive 
[PlexilExec:lock]Locking node SimpleDrive
[PlexilExec:step][2:4:0] Transitioning node SimpleDrive
[PlexilExec:notifyNodeConditionChanged] for node SimpleDrive
[PlexilExec:unlock]Unlocking node SimpleDrive
[PlexilExec:handleConditionsChanged]Node SimpleDrive had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'SimpleDrive' was previously eligible to transition but isn't now.
[PlexilExec:cycle]==>End cycle 2
[PlexilExec:printPlan]
SimpleDrive{
 State: (id_217[au](FINISHED): state(FINISHED)) (0)
 Outcome: (id_218[au](SUCCESS):  outcome)
  Drive{
   State: (id_269[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_270[au](SUCCESS):  outcome)
   Command handle: (id_272[au](COMMAND_DENIED):  command_handle)
  }
}

