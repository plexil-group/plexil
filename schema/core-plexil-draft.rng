<?xml version="1.0"?>
<grammar ns="" xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
    <start>
        <choice>
            <ref name="DeclareVariable"/>
            <ref name="NodeTimepointValue"/>
            <ref name="Tolerance"/>
            <ref name="NodeRef"/>
            <ref name="LookupNow"/>
            <ref name="LT"/>
            <ref name="ArrayElement"/>
            <ref name="StringRHS"/>
            <ref name="MOD"/>
            <ref name="NumericRHS"/>
            <ref name="BooleanRHS"/>
            <ref name="DeclareArray"/>
            <ref name="BooleanVariable"/>
            <ref name="StateDeclaration"/>
            <ref name="IntegerVariable"/>
            <ref name="SkipCondition"/>
            <ref name="CommandDeclaration"/>
            <ref name="SUB"/>
            <ref name="Date"/>
            <ref name="ResourceList"/>
            <ref name="BooleanValue"/>
            <ref name="NOT"/>
            <ref name="NodeFailureVariable"/>
            <ref name="EQInternal"/>
            <ref name="AND"/>
            <ref name="PreCondition"/>
            <ref name="Arguments"/>
            <ref name="RealValue"/>
            <ref name="RealVariable"/>
            <ref name="InOut"/>
            <ref name="Interface"/>
            <ref name="NodeCommandHandleVariable"/>
            <ref name="LibraryNodeCall"/>
            <ref name="LookupOnChange"/>
            <ref name="Timepoint"/>
            <ref name="Node"/>
            <ref name="ArrayVariable"/>
            <ref name="Return"/>
            <ref name="NEString"/>
            <ref name="NodeList"/>
            <ref name="ADD"/>
            <ref name="LookupRHS"/>
            <ref name="Command"/>
            <ref name="NodeBody"/>
            <ref name="GE"/>
            <ref name="In"/>
            <ref name="NENumeric"/>
            <ref name="XOR"/>
            <ref name="NodeStateVariable"/>
            <ref name="Update"/>
            <ref name="Pair"/>
            <ref name="Assignment"/>
            <ref name="RepeatCondition"/>
            <ref name="Concat"/>
            <ref name="NodeStateValue"/>
            <ref name="TimePoint"/>
            <choice>
                <notAllowed/>
                <element name="TimeInterval">
                    <interleave>
                        <element name="Start">
                            <ref name="TimePoint"/>
                        </element>
                        <element name="End">
                            <ref name="TimePoint"/>
                        </element>
                        <element name="Duration">
                            <ref name="Duration"/>
                        </element>
                    </interleave>
                </element>
            </choice>
            <ref name="PostCondition"/>
            <ref name="NodeId"/>
            <ref name="Time"/>
            <ref name="VariableDeclarations"/>
            <ref name="NEInternal"/>
            <ref name="Duration"/>
            <ref name="SQRT"/>
            <ref name="LibraryNodeDeclaration"/>
            <ref name="StringVariable"/>
            <ref name="NodeCommandHandleValue"/>
            <ref name="MUL"/>
            <ref name="EQNumeric"/>
            <ref name="InvariantCondition"/>
            <ref name="Parameter"/>
            <ref name="IsKnown"/>
            <ref name="ABS"/>
            <ref name="NodeOutcomeVariable"/>
            <ref name="IntegerValue"/>
            <ref name="Resource"/>
            <ref name="NodeOutcomeValue"/>
            <ref name="StartCondition"/>
            <ref name="GlobalDeclarations"/>
            <choice>
                <notAllowed/>
                <element name="PlexilPlan">
                    <ref name="SourceLocators"/>
                    <optional>
                        <ref name="GlobalDeclarations"/>
                    </optional>
                    <ref name="Action"/>
                </element>
            </choice>
            <ref name="StringValue"/>
            <ref name="EQBoolean"/>
            <ref name="OR"/>
            <ref name="EQString"/>
            <ref name="EndCondition"/>
            <ref name="Name"/>
            <ref name="NEBoolean"/>
            <choice>
                <notAllowed/>
                <element name="ArrayValue">
                    <ref name="SourceLocators"/>
                    <attribute name="Type">
                        <choice>
                            <value type="NMTOKEN">Real</value>
                            <value type="NMTOKEN">String</value>
                            <value type="NMTOKEN">Boolean</value>
                            <value type="NMTOKEN">Integer</value>
                        </choice>
                    </attribute>
                    <choice>
                        <oneOrMore>
                            <ref name="IntegerValue"/>
                        </oneOrMore>
                        <oneOrMore>
                            <ref name="RealValue"/>
                        </oneOrMore>
                        <oneOrMore>
                            <ref name="BooleanValue"/>
                        </oneOrMore>
                        <oneOrMore>
                            <ref name="StringValue"/>
                        </oneOrMore>
                    </choice>
                </element>
            </choice>
            <ref name="GT"/>
            <ref name="Alias"/>
            <ref name="ArrayRHS"/>
            <ref name="DIV"/>
            <ref name="LE"/>
            <ref name="NodeFailureValue"/>
        </choice>
    </start>
    <define name="OR">
        <choice>
            <notAllowed/>
            <element name="OR">
                <ref name="SourceLocators"/>
                <zeroOrMore>
                    <ref name="BooleanExpression"/>
                </zeroOrMore>
            </element>
        </choice>
    </define>
    <define name="ArrayElement">
        <choice>
            <notAllowed/>
            <element name="ArrayElement">
                <ref name="SourceLocators"/>
                <element name="Name">
                    <ref name="NCName"/>
                </element>
                <element name="Index">
                    <ref name="NumericExpression"/>
                </element>
            </element>
        </choice>
    </define>
    <define name="Concat">
        <choice>
            <notAllowed/>
            <element name="Concat">
                <ref name="SourceLocators"/>
                <zeroOrMore>
                    <ref name="StringExpression"/>
                </zeroOrMore>
            </element>
        </choice>
    </define>
    <define name="node-reference">
        <group>
            <ref name="SourceLocators"/>
            <ref name="NodeReference"/>
        </group>
        <empty/>
    </define>
    <define name="ArrayRHS">
        <choice>
            <notAllowed/>
            <element name="ArrayRHS">
                <ref name="SourceLocators"/>
                <ref name="ArrayVariable"/>
            </element>
        </choice>
    </define>
    <define name="LookupOnChange">
        <choice>
            <notAllowed/>
            <element name="LookupOnChange">
                <ref name="SourceLocators"/>
                <ref name="Name"/>
                <optional>
                    <ref name="Tolerance"/>
                </optional>
                <optional>
                    <ref name="Arguments"/>
                </optional>
            </element>
        </choice>
    </define>
    <define name="GlobalDeclarations">
        <choice>
            <notAllowed/>
            <element name="GlobalDeclarations">
                <ref name="SourceLocators"/>
                <oneOrMore>
                    <choice>
                        <ref name="CommandDeclaration"/>
                        <empty/>
                        <ref name="StateDeclaration"/>
                        <ref name="LibraryNodeDeclaration"/>
                        <element name="TimeScalingUnitsSubunits">
                            <ref name="integer"/>
                        </element>
                    </choice>
                </oneOrMore>
            </element>
        </choice>
    </define>
    <define name="Tolerance">
        <choice>
            <notAllowed/>
            <element name="Tolerance">
                <choice>
                    <ref name="RealValue"/>
                    <ref name="RealVariable"/>
                </choice>
            </element>
        </choice>
    </define>
    <define name="SourceLocators">
        <optional>
            <attribute name="ColNo">
                <data type="integer"/>
            </attribute>
        </optional>
        <optional>
            <attribute name="LineNo">
                <data type="integer"/>
            </attribute>
        </optional>
        <optional>
            <attribute name="FileName">
                <data type="string"/>
            </attribute>
        </optional>
    </define>
    <define name="IsKnown">
        <choice>
            <notAllowed/>
            <element name="IsKnown">
                <ref name="SourceLocators"/>
                <choice>
                    <ref name="DeclaredVariable"/>
                    <ref name="LookupGroup"/>
                    <ref name="NodeStateVariable"/>
                    <ref name="NodeOutcomeVariable"/>
                    <ref name="NodeTimepointValue"/>
                </choice>
            </element>
        </choice>
    </define>
    <define name="SUB">
        <choice>
            <notAllowed/>
            <element name="SUB">
                <ref name="SourceLocators"/>
                <ref name="NumericExpression"/>
                <ref name="NumericExpression"/>
            </element>
        </choice>
    </define>
    <define name="GE">
        <choice>
            <notAllowed/>
            <element name="GE">
                <ref name="SourceLocators"/>
                <ref name="NumericExpression"/>
                <ref name="NumericExpression"/>
            </element>
        </choice>
    </define>
    <define name="AtomicTypeValues">
        <choice>
            <value type="NMTOKEN">Real</value>
            <value type="NMTOKEN">String</value>
            <value type="NMTOKEN">Boolean</value>
            <value type="NMTOKEN">Integer</value>
        </choice>
    </define>
    <define name="LE">
        <choice>
            <notAllowed/>
            <element name="LE">
                <ref name="SourceLocators"/>
                <ref name="NumericExpression"/>
                <ref name="NumericExpression"/>
            </element>
        </choice>
    </define>
    <define name="NodeId">
        <choice>
            <notAllowed/>
            <element name="NodeId">
                <ref name="NCName"/>
            </element>
        </choice>
    </define>
    <define name="BooleanRHS">
        <choice>
            <notAllowed/>
            <element name="BooleanRHS">
                <ref name="SourceLocators"/>
                <ref name="BooleanExpression"/>
            </element>
        </choice>
    </define>
    <define name="NumericComparison">
        <choice>
            <ref name="GT"/>
            <ref name="GE"/>
            <ref name="LT"/>
            <ref name="LE"/>
        </choice>
    </define>
    <define name="LibraryNodeCall">
        <choice>
            <notAllowed/>
            <element name="LibraryNodeCall">
                <ref name="SourceLocators"/>
                <ref name="NodeId"/>
                <optional>
                    <element name="RenameNodeId">
                        <ref name="NCName"/>
                    </element>
                </optional>
                <zeroOrMore>
                    <ref name="Alias"/>
                </zeroOrMore>
            </element>
        </choice>
    </define>
    <define name="MOD">
        <choice>
            <notAllowed/>
            <element name="MOD">
                <ref name="SourceLocators"/>
                <ref name="NumericExpression"/>
                <ref name="NumericExpression"/>
            </element>
        </choice>
    </define>
    <define name="LogicalOperator">
        <choice>
            <ref name="OR"/>
            <ref name="XOR"/>
            <ref name="AND"/>
            <ref name="NOT"/>
        </choice>
    </define>
    <define name="InOut">
        <choice>
            <notAllowed/>
            <element name="InOut">
                <ref name="SourceLocators"/>
                <oneOrMore>
                    <choice>
                        <ref name="DeclareVariable"/>
                        <ref name="DeclareArray"/>
                    </choice>
                </oneOrMore>
            </element>
        </choice>
    </define>
    <define name="NodeReference">
        <choice>
            <ref name="NodeId"/>
            <ref name="NodeRef"/>
        </choice>
    </define>
    <define name="NodeOutcomeVariable">
        <choice>
            <notAllowed/>
            <element name="NodeOutcomeVariable">
                <ref name="node-reference"/>
            </element>
        </choice>
    </define>
    <define name="NodeList">
        <choice>
            <notAllowed/>
            <element name="NodeList">
                <zeroOrMore>
                    <ref name="Action"/>
                </zeroOrMore>
            </element>
        </choice>
    </define>
    <define name="StateDeclaration">
        <choice>
            <notAllowed/>
            <element name="StateDeclaration">
                <ref name="SourceLocators"/>
                <element name="Name">
                    <ref name="NCName"/>
                </element>
                <ref name="Return"/>
                <zeroOrMore>
                    <ref name="Parameter"/>
                </zeroOrMore>
            </element>
        </choice>
    </define>
    <define name="Name">
        <choice>
            <notAllowed/>
            <element name="Name">
                <ref name="SourceLocators"/>
                <ref name="StringExpression"/>
            </element>
        </choice>
    </define>
    <define name="Return">
        <choice>
            <notAllowed/>
            <element name="Return">
                <optional>
                    <element name="Name">
                        <ref name="NCName"/>
                    </element>
                </optional>
                <element name="Type">
                    <ref name="AtomicTypeValues"/>
                </element>
                <optional>
                    <element name="MaxSize">
                        <ref name="nonNegativeInteger"/>
                    </element>
                </optional>
            </element>
        </choice>
    </define>
    <define name="NodeCommandHandle">
        <choice>
            <ref name="NodeCommandHandleVariable"/>
            <ref name="NodeCommandHandleValue"/>
        </choice>
    </define>
    <define name="DeclareVariable">
        <choice>
            <notAllowed/>
            <element name="DeclareVariable">
                <ref name="SourceLocators"/>
                <element name="Name">
                    <ref name="NCName"/>
                </element>
                <element name="Type">
                    <ref name="AtomicTypeValues"/>
                </element>
                <optional>
                    <element name="InitialValue">
                        <ref name="Value"/>
                    </element>
                </optional>
            </element>
        </choice>
    </define>
    <define name="Value">
        <choice>
            <ref name="IntegerValue"/>
            <ref name="RealValue"/>
            <ref name="BooleanValue"/>
            <ref name="StringValue"/>
        </choice>
    </define>
    <define name="BooleanVariable">
        <choice>
            <notAllowed/>
            <element name="BooleanVariable">
                <ref name="NCName"/>
            </element>
        </choice>
    </define>
    <define name="IntegerValue">
        <choice>
            <notAllowed/>
            <element name="IntegerValue">
                <data type="integer"/>
            </element>
        </choice>
    </define>
    <define name="StringVariable">
        <choice>
            <notAllowed/>
            <element name="StringVariable">
                <ref name="NCName"/>
            </element>
        </choice>
    </define>
    <define name="ADD">
        <choice>
            <notAllowed/>
            <element name="ADD">
                <ref name="SourceLocators"/>
                <ref name="NumericExpression"/>
                <ref name="NumericExpression"/>
                <zeroOrMore>
                    <ref name="NumericExpression"/>
                </zeroOrMore>
            </element>
        </choice>
    </define>
    <define name="RepeatCondition">
        <choice>
            <notAllowed/>
            <element name="RepeatCondition">
                <ref name="SourceLocators"/>
                <ref name="BooleanExpression"/>
            </element>
        </choice>
    </define>
    <define name="CommandDeclaration">
        <choice>
            <notAllowed/>
            <element name="CommandDeclaration">
                <ref name="SourceLocators"/>
                <element name="Name">
                    <ref name="NCName"/>
                </element>
                <zeroOrMore>
                    <ref name="Return"/>
                </zeroOrMore>
                <zeroOrMore>
                    <ref name="Parameter"/>
                </zeroOrMore>
                <optional>
                    <ref name="ResourceList"/>
                </optional>
            </element>
        </choice>
    </define>
    <define name="VariableDeclarations">
        <choice>
            <notAllowed/>
            <element name="VariableDeclarations">
                <oneOrMore>
                    <choice>
                        <ref name="DeclareVariable"/>
                        <ref name="DeclareArray"/>
                    </choice>
                </oneOrMore>
            </element>
        </choice>
    </define>
    <define name="InvariantCondition">
        <choice>
            <notAllowed/>
            <element name="InvariantCondition">
                <ref name="SourceLocators"/>
                <ref name="BooleanExpression"/>
            </element>
        </choice>
    </define>
    <define name="RealVariable">
        <choice>
            <notAllowed/>
            <element name="RealVariable">
                <ref name="NCName"/>
            </element>
        </choice>
    </define>
    <define name="Equality">
        <choice>
            <ref name="EQBoolean"/>
            <ref name="EQNumeric"/>
            <ref name="EQInternal"/>
            <ref name="EQString"/>
            <ref name="NEBoolean"/>
            <ref name="NENumeric"/>
            <ref name="NEInternal"/>
            <ref name="NEString"/>
        </choice>
    </define>
    <define name="StringValue">
        <choice>
            <notAllowed/>
            <element name="StringValue">
                <data type="string"/>
            </element>
        </choice>
    </define>
    <define name="NodeState">
        <choice>
            <ref name="NodeStateVariable"/>
            <ref name="NodeStateValue"/>
        </choice>
    </define>
    <define name="DeclareArray">
        <choice>
            <notAllowed/>
            <element name="DeclareArray">
                <ref name="SourceLocators"/>
                <element name="Name">
                    <ref name="NCName"/>
                </element>
                <element name="Type">
                    <ref name="AtomicTypeValues"/>
                </element>
                <element name="MaxSize">
                    <ref name="nonNegativeInteger"/>
                </element>
                <optional>
                    <element name="InitialValue">
                        <oneOrMore>
                            <ref name="Value"/>
                        </oneOrMore>
                    </element>
                </optional>
            </element>
        </choice>
    </define>
    <define name="nonNegativeInteger">
        <data type="nonNegativeInteger"/>
    </define>
    <define name="DeclaredVariable">
        <choice>
            <ref name="IntegerVariable"/>
            <ref name="RealVariable"/>
            <ref name="BooleanVariable"/>
            <ref name="StringVariable"/>
            <ref name="ArrayVariable"/>
            <ref name="ArrayElement"/>
        </choice>
    </define>
    <define name="NEString">
        <choice>
            <notAllowed/>
            <element name="NEString">
                <ref name="SourceLocators"/>
                <ref name="StringExpression"/>
                <ref name="StringExpression"/>
            </element>
        </choice>
    </define>
    <define name="Time">
        <choice>
            <notAllowed/>
            <element name="Time">
                <interleave>
                    <element name="Hour">
                        <ref name="integer"/>
                    </element>
                    <element name="Minute">
                        <ref name="integer"/>
                    </element>
                    <element name="Second">
                        <ref name="float"/>
                    </element>
                    <element name="Offset">
                        <ref name="integer"/>
                    </element>
                </interleave>
            </element>
        </choice>
    </define>
    <define name="EQString">
        <choice>
            <notAllowed/>
            <element name="EQString">
                <ref name="SourceLocators"/>
                <ref name="StringExpression"/>
                <ref name="StringExpression"/>
            </element>
        </choice>
    </define>
    <define name="LookupGroup">
        <choice>
            <ref name="LookupOnChange"/>
            <ref name="LookupNow"/>
        </choice>
    </define>
    <define name="ABS">
        <choice>
            <notAllowed/>
            <element name="ABS">
                <ref name="SourceLocators"/>
                <ref name="NumericExpression"/>
            </element>
        </choice>
    </define>
    <define name="BooleanExpression">
        <choice>
            <ref name="LogicalOperator"/>
            <ref name="Equality"/>
            <ref name="NumericComparison"/>
            <ref name="LookupGroup"/>
            <ref name="IsKnown"/>
            <ref name="BooleanVariable"/>
            <ref name="BooleanValue"/>
            <ref name="ArrayElement"/>
        </choice>
    </define>
    <define name="PostCondition">
        <choice>
            <notAllowed/>
            <element name="PostCondition">
                <ref name="SourceLocators"/>
                <ref name="BooleanExpression"/>
            </element>
        </choice>
    </define>
    <define name="Action">
        <ref name="Node"/>
    </define>
    <define name="NodeBody">
        <choice>
            <notAllowed/>
            <element name="NodeBody">
                <choice>
                    <ref name="NodeList"/>
                    <ref name="Command"/>
                    <ref name="Assignment"/>
                    <ref name="Update"/>
                    <ref name="LibraryNodeCall"/>
                </choice>
            </element>
        </choice>
    </define>
    <define name="NodeOutcome">
        <choice>
            <ref name="NodeOutcomeVariable"/>
            <ref name="NodeOutcomeValue"/>
        </choice>
    </define>
    <define name="NodeCommandHandleVariable">
        <choice>
            <notAllowed/>
            <element name="NodeCommandHandleVariable">
                <ref name="SourceLocators"/>
                <ref name="NodeId"/>
            </element>
        </choice>
    </define>
    <define name="MUL">
        <choice>
            <notAllowed/>
            <element name="MUL">
                <ref name="SourceLocators"/>
                <ref name="NumericExpression"/>
                <ref name="NumericExpression"/>
                <zeroOrMore>
                    <ref name="NumericExpression"/>
                </zeroOrMore>
            </element>
        </choice>
    </define>
    <define name="SkipCondition">
        <choice>
            <notAllowed/>
            <element name="SkipCondition">
                <ref name="SourceLocators"/>
                <ref name="BooleanExpression"/>
            </element>
        </choice>
    </define>
    <define name="Node">
        <choice>
            <notAllowed/>
            <element name="Node">
                <ref name="SourceLocators"/>
                <optional>
                    <attribute name="epx">
                        <data type="NCName"/>
                    </attribute>
                </optional>
                <attribute name="NodeType">
                    <choice>
                        <value type="NMTOKEN">Empty</value>
                        <value type="NMTOKEN">Command</value>
                        <value type="NMTOKEN">LibraryNodeCall</value>
                        <value type="NMTOKEN">Update</value>
                        <value type="NMTOKEN">Assignment</value>
                        <value type="NMTOKEN">NodeList</value>
                    </choice>
                </attribute>
                <interleave>
                    <optional>
                        <element name="Comment">
                            <data type="string"/>
                        </element>
                    </optional>
                    <ref name="NodeId"/>
                    <optional>
                        <ref name="StartCondition"/>
                    </optional>
                    <optional>
                        <ref name="RepeatCondition"/>
                    </optional>
                    <optional>
                        <ref name="PreCondition"/>
                    </optional>
                    <optional>
                        <ref name="PostCondition"/>
                    </optional>
                    <optional>
                        <ref name="InvariantCondition"/>
                    </optional>
                    <optional>
                        <ref name="EndCondition"/>
                    </optional>
                    <optional>
                        <ref name="SkipCondition"/>
                    </optional>
                    <optional>
                        <element name="Priority">
                            <ref name="nonNegativeInteger"/>
                        </element>
                    </optional>
                    <optional>
                        <ref name="Interface"/>
                    </optional>
                    <optional>
                        <ref name="VariableDeclarations"/>
                    </optional>
                    <optional>
                        <ref name="NodeBody"/>
                    </optional>
                </interleave>
            </element>
        </choice>
    </define>
    <define name="StringRHS">
        <choice>
            <notAllowed/>
            <element name="StringRHS">
                <ref name="SourceLocators"/>
                <ref name="StringExpression"/>
            </element>
        </choice>
    </define>
    <define name="NOT">
        <choice>
            <notAllowed/>
            <element name="NOT">
                <ref name="SourceLocators"/>
                <ref name="BooleanExpression"/>
            </element>
        </choice>
    </define>
    <define name="Command">
        <choice>
            <notAllowed/>
            <element name="Command">
                <ref name="SourceLocators"/>
                <optional>
                    <ref name="ResourceList"/>
                </optional>
                <optional>
                    <ref name="DeclaredVariable"/>
                </optional>
                <ref name="Name"/>
                <optional>
                    <ref name="Arguments"/>
                </optional>
            </element>
        </choice>
    </define>
    <define name="Resource">
        <choice>
            <notAllowed/>
            <element name="Resource">
                <ref name="SourceLocators"/>
                <interleave>
                    <element name="ResourceName">
                        <ref name="StringExpression"/>
                    </element>
                    <element name="ResourcePriority">
                        <ref name="NumericExpression"/>
                    </element>
                    <optional>
                        <element name="ResourceLowerBound">
                            <ref name="NumericExpression"/>
                        </element>
                    </optional>
                    <optional>
                        <element name="ResourceUpperBound">
                            <ref name="NumericExpression"/>
                        </element>
                    </optional>
                    <optional>
                        <element name="ResourceReleaseAtTermination">
                            <ref name="BooleanExpression"/>
                        </element>
                    </optional>
                </interleave>
            </element>
        </choice>
    </define>
    <define name="ResourceList">
        <choice>
            <notAllowed/>
            <element name="ResourceList">
                <ref name="SourceLocators"/>
                <zeroOrMore>
                    <ref name="Resource"/>
                </zeroOrMore>
            </element>
        </choice>
    </define>
    <define name="NEInternal">
        <choice>
            <notAllowed/>
            <element name="NEInternal">
                <ref name="SourceLocators"/>
                <choice>
                    <group>
                        <ref name="NodeState"/>
                        <ref name="NodeState"/>
                    </group>
                    <group>
                        <ref name="NodeOutcome"/>
                        <ref name="NodeOutcome"/>
                    </group>
                    <group>
                        <ref name="NodeFailure"/>
                        <ref name="NodeFailure"/>
                    </group>
                    <group>
                        <ref name="NodeCommandHandle"/>
                        <ref name="NodeCommandHandle"/>
                    </group>
                </choice>
            </element>
        </choice>
    </define>
    <define name="NodeOutcomeValue">
        <choice>
            <notAllowed/>
            <element name="NodeOutcomeValue">
                <choice>
                    <value type="NMTOKEN">SUCCESS</value>
                    <value type="NMTOKEN">SKIPPED</value>
                    <value type="NMTOKEN">FAILURE</value>
                </choice>
            </element>
        </choice>
    </define>
    <define name="NodeStateValue">
        <choice>
            <notAllowed/>
            <element name="NodeStateValue">
                <choice>
                    <value type="NMTOKEN">ITERATION_ENDED</value>
                    <value type="NMTOKEN">EXECUTING</value>
                    <value type="NMTOKEN">WAITING</value>
                    <value type="NMTOKEN">FINISHING</value>
                    <value type="NMTOKEN">INACTIVE</value>
                    <value type="NMTOKEN">FAILING</value>
                    <value type="NMTOKEN">FINISHED</value>
                </choice>
            </element>
        </choice>
    </define>
    <define name="Interface">
        <choice>
            <notAllowed/>
            <element name="Interface">
                <ref name="SourceLocators"/>
                <interleave>
                    <optional>
                        <ref name="In"/>
                    </optional>
                    <optional>
                        <ref name="InOut"/>
                    </optional>
                </interleave>
            </element>
        </choice>
    </define>
    <define name="BooleanValue">
        <choice>
            <notAllowed/>
            <element name="BooleanValue">
                <data type="boolean"/>
            </element>
        </choice>
    </define>
    <define name="NumericRHS">
        <choice>
            <notAllowed/>
            <element name="NumericRHS">
                <ref name="SourceLocators"/>
                <ref name="NumericExpression"/>
            </element>
        </choice>
    </define>
    <define name="EQInternal">
        <choice>
            <notAllowed/>
            <element name="EQInternal">
                <ref name="SourceLocators"/>
                <choice>
                    <group>
                        <ref name="NodeState"/>
                        <ref name="NodeState"/>
                    </group>
                    <group>
                        <ref name="NodeOutcome"/>
                        <ref name="NodeOutcome"/>
                    </group>
                    <group>
                        <ref name="NodeFailure"/>
                        <ref name="NodeFailure"/>
                    </group>
                    <group>
                        <ref name="NodeCommandHandle"/>
                        <ref name="NodeCommandHandle"/>
                    </group>
                </choice>
            </element>
        </choice>
    </define>
    <define name="EQBoolean">
        <choice>
            <notAllowed/>
            <element name="EQBoolean">
                <ref name="SourceLocators"/>
                <ref name="BooleanExpression"/>
                <ref name="BooleanExpression"/>
            </element>
        </choice>
    </define>
    <define name="Update">
        <choice>
            <notAllowed/>
            <element name="Update">
                <ref name="SourceLocators"/>
                <zeroOrMore>
                    <ref name="Pair"/>
                </zeroOrMore>
            </element>
        </choice>
    </define>
    <define name="LookupNow">
        <choice>
            <notAllowed/>
            <element name="LookupNow">
                <ref name="SourceLocators"/>
                <ref name="Name"/>
                <optional>
                    <ref name="Arguments"/>
                </optional>
            </element>
        </choice>
    </define>
    <define name="Date">
        <choice>
            <notAllowed/>
            <element name="Date">
                <interleave>
                    <element name="Year">
                        <ref name="integer"/>
                    </element>
                    <element name="Month">
                        <ref name="integer"/>
                    </element>
                    <element name="Day">
                        <ref name="integer"/>
                    </element>
                </interleave>
            </element>
        </choice>
    </define>
    <define name="NodeTimepointValue">
        <choice>
            <notAllowed/>
            <element name="NodeTimepointValue">
                <ref name="SourceLocators"/>
                <ref name="NodeReference"/>
                <ref name="NodeStateValue"/>
                <ref name="Timepoint"/>
            </element>
        </choice>
    </define>
    <define name="Alias">
        <choice>
            <notAllowed/>
            <element name="Alias">
                <ref name="SourceLocators"/>
                <element name="NodeParameter">
                    <ref name="NCName"/>
                </element>
                <choice>
                    <ref name="Value"/>
                    <ref name="DeclaredVariable"/>
                    <ref name="LookupGroup"/>
                    <ref name="LogicalOperator"/>
                    <ref name="Equality"/>
                    <ref name="NumericComparison"/>
                    <ref name="IsKnown"/>
                    <ref name="ADD"/>
                    <ref name="SUB"/>
                    <ref name="MUL"/>
                    <ref name="DIV"/>
                    <ref name="MOD"/>
                    <ref name="SQRT"/>
                    <ref name="ABS"/>
                    <ref name="NodeTimepointValue"/>
                    <element name="ArraySize">
                        <ref name="NCName"/>
                    </element>
                    <element name="ArrayMaxSize">
                        <ref name="NCName"/>
                    </element>
                    <ref name="StringOperator"/>
                </choice>
            </element>
        </choice>
    </define>
    <define name="NEBoolean">
        <choice>
            <notAllowed/>
            <element name="NEBoolean">
                <ref name="SourceLocators"/>
                <ref name="BooleanExpression"/>
                <ref name="BooleanExpression"/>
            </element>
        </choice>
    </define>
    <define name="LibraryNodeDeclaration">
        <choice>
            <notAllowed/>
            <element name="LibraryNodeDeclaration">
                <ref name="SourceLocators"/>
                <element name="Name">
                    <ref name="NCName"/>
                </element>
                <ref name="Interface"/>
            </element>
        </choice>
    </define>
    <define name="Pair">
        <choice>
            <notAllowed/>
            <element name="Pair">
                <element name="Name">
                    <ref name="NCName"/>
                </element>
                <choice>
                    <ref name="Value"/>
                    <ref name="DeclaredVariable"/>
                    <ref name="LookupNow"/>
                </choice>
            </element>
        </choice>
    </define>
    <define name="Timepoint">
        <choice>
            <notAllowed/>
            <element name="Timepoint">
                <choice>
                    <value type="NMTOKEN">START</value>
                    <value type="NMTOKEN">END</value>
                </choice>
            </element>
        </choice>
    </define>
    <define name="NodeFailureVariable">
        <choice>
            <notAllowed/>
            <element name="NodeFailureVariable">
                <ref name="node-reference"/>
            </element>
        </choice>
    </define>
    <define name="Arguments">
        <choice>
            <notAllowed/>
            <element name="Arguments">
                <ref name="SourceLocators"/>
                <oneOrMore>
                    <choice>
                        <ref name="BooleanExpression"/>
                        <ref name="NumericExpression"/>
                        <ref name="StringExpression"/>
                        <ref name="ArrayVariable"/>
                    </choice>
                </oneOrMore>
            </element>
        </choice>
    </define>
    <define name="float">
        <data type="float"/>
    </define>
    <define name="LT">
        <choice>
            <notAllowed/>
            <element name="LT">
                <ref name="SourceLocators"/>
                <ref name="NumericExpression"/>
                <ref name="NumericExpression"/>
            </element>
        </choice>
    </define>
    <define name="LookupRHS">
        <choice>
            <notAllowed/>
            <element name="LookupRHS">
                <ref name="SourceLocators"/>
                <ref name="LookupGroup"/>
            </element>
        </choice>
    </define>
    <define name="StringOperator">
        <ref name="Concat"/>
    </define>
    <define name="RealValue">
        <choice>
            <notAllowed/>
            <element name="RealValue">
                <data type="double"/>
            </element>
        </choice>
    </define>
    <define name="XOR">
        <choice>
            <notAllowed/>
            <element name="XOR">
                <ref name="SourceLocators"/>
                <zeroOrMore>
                    <ref name="BooleanExpression"/>
                </zeroOrMore>
            </element>
        </choice>
    </define>
    <define name="ArrayVariable">
        <choice>
            <notAllowed/>
            <element name="ArrayVariable">
                <ref name="NCName"/>
            </element>
        </choice>
    </define>
    <define name="NodeFailure">
        <choice>
            <ref name="NodeFailureVariable"/>
            <ref name="NodeFailureValue"/>
        </choice>
    </define>
    <define name="NodeFailureValue">
        <choice>
            <notAllowed/>
            <element name="NodeFailureValue">
                <choice>
                    <value type="NMTOKEN">INVARIANT_CONDITION_FAILED</value>
                    <value type="NMTOKEN">PRE_CONDITION_FAILED</value>
                    <value type="NMTOKEN">POST_CONDITION_FAILED</value>
                    <value type="NMTOKEN">PARENT_FAILED</value>
                </choice>
            </element>
        </choice>
    </define>
    <define name="NENumeric">
        <choice>
            <notAllowed/>
            <element name="NENumeric">
                <ref name="SourceLocators"/>
                <ref name="NumericExpression"/>
                <ref name="NumericExpression"/>
            </element>
        </choice>
    </define>
    <define name="IntegerVariable">
        <choice>
            <notAllowed/>
            <element name="IntegerVariable">
                <ref name="NCName"/>
            </element>
        </choice>
    </define>
    <define name="TimePoint">
        <choice>
            <notAllowed/>
            <element name="TimePoint">
                <interleave>
                    <ref name="Date"/>
                    <ref name="Time"/>
                </interleave>
            </element>
        </choice>
    </define>
    <define name="NodeRef">
        <choice>
            <notAllowed/>
            <element name="NodeRef">
                <optional>
                    <attribute name="dir">
                        <choice>
                            <value type="NMTOKEN">child</value>
                            <value type="NMTOKEN">sibling</value>
                            <value type="NMTOKEN">parent</value>
                            <value type="NMTOKEN">self</value>
                        </choice>
                    </attribute>
                </optional>
                <choice>
                    <data type="NCName"/>
                    <value type="string"></value>
                </choice>
            </element>
        </choice>
    </define>
    <define name="NodeCommandHandleValue">
        <choice>
            <notAllowed/>
            <element name="NodeCommandHandleValue">
                <choice>
                    <value type="NMTOKEN">COMMAND_ACCEPTED</value>
                    <value type="NMTOKEN">COMMAND_ABORTED</value>
                    <value type="NMTOKEN">COMMAND_FAILED</value>
                    <value type="NMTOKEN">COMMAND_SUCCESS</value>
                    <value type="NMTOKEN">COMMAND_SENT_TO_SYSTEM</value>
                    <value type="NMTOKEN">COMMAND_ABORT_FAILED</value>
                    <value type="NMTOKEN">COMMAND_DENIED</value>
                    <value type="NMTOKEN">COMMAND_RCVD_BY_SYSTEM</value>
                </choice>
            </element>
        </choice>
    </define>
    <define name="EndCondition">
        <choice>
            <notAllowed/>
            <element name="EndCondition">
                <ref name="SourceLocators"/>
                <ref name="BooleanExpression"/>
            </element>
        </choice>
    </define>
    <define name="Parameter">
        <choice>
            <notAllowed/>
            <element name="Parameter">
                <optional>
                    <element name="Name">
                        <ref name="NCName"/>
                    </element>
                </optional>
                <element name="Type">
                    <ref name="AtomicTypeValues"/>
                </element>
                <optional>
                    <element name="MaxSize">
                        <ref name="nonNegativeInteger"/>
                    </element>
                </optional>
            </element>
        </choice>
    </define>
    <define name="EQNumeric">
        <choice>
            <notAllowed/>
            <element name="EQNumeric">
                <ref name="SourceLocators"/>
                <ref name="NumericExpression"/>
                <ref name="NumericExpression"/>
            </element>
        </choice>
    </define>
    <define name="NCName">
        <data type="NCName"/>
    </define>
    <define name="integer">
        <data type="integer"/>
    </define>
    <define name="Duration">
        <choice>
            <notAllowed/>
            <element name="Duration">
                <interleave>
                    <element name="Days">
                        <ref name="integer"/>
                    </element>
                    <element name="Hours">
                        <ref name="integer"/>
                    </element>
                    <element name="Minutes">
                        <ref name="integer"/>
                    </element>
                    <element name="Seconds">
                        <ref name="float"/>
                    </element>
                </interleave>
            </element>
        </choice>
    </define>
    <define name="NumericExpression">
        <choice>
            <ref name="ADD"/>
            <ref name="SUB"/>
            <ref name="MUL"/>
            <ref name="DIV"/>
            <ref name="SQRT"/>
            <ref name="ABS"/>
            <ref name="IntegerVariable"/>
            <ref name="RealVariable"/>
            <ref name="IntegerValue"/>
            <ref name="RealValue"/>
            <ref name="LookupGroup"/>
            <ref name="NodeTimepointValue"/>
            <choice>
                <notAllowed/>
                <element name="ArraySize">
                    <ref name="NCName"/>
                </element>
            </choice>
            <choice>
                <notAllowed/>
                <element name="ArrayMaxSize">
                    <ref name="NCName"/>
                </element>
            </choice>
            <ref name="ArrayElement"/>
            <ref name="Duration"/>
        </choice>
    </define>
    <define name="Assignment">
        <choice>
            <notAllowed/>
            <element name="Assignment">
                <ref name="SourceLocators"/>
                <ref name="DeclaredVariable"/>
                <choice>
                    <ref name="BooleanRHS"/>
                    <ref name="NumericRHS"/>
                    <ref name="StringRHS"/>
                    <ref name="LookupRHS"/>
                    <ref name="ArrayRHS"/>
                </choice>
            </element>
        </choice>
    </define>
    <define name="GT">
        <choice>
            <notAllowed/>
            <element name="GT">
                <ref name="SourceLocators"/>
                <ref name="NumericExpression"/>
                <ref name="NumericExpression"/>
            </element>
        </choice>
    </define>
    <define name="AND">
        <choice>
            <notAllowed/>
            <element name="AND">
                <ref name="SourceLocators"/>
                <zeroOrMore>
                    <ref name="BooleanExpression"/>
                </zeroOrMore>
            </element>
        </choice>
    </define>
    <define name="StringExpression">
        <choice>
            <ref name="StringVariable"/>
            <ref name="StringValue"/>
            <ref name="StringOperator"/>
            <ref name="LookupGroup"/>
            <ref name="ArrayElement"/>
        </choice>
    </define>
    <define name="StartCondition">
        <choice>
            <notAllowed/>
            <element name="StartCondition">
                <ref name="SourceLocators"/>
                <ref name="BooleanExpression"/>
            </element>
        </choice>
    </define>
    <define name="NodeStateVariable">
        <choice>
            <notAllowed/>
            <element name="NodeStateVariable">
                <ref name="node-reference"/>
            </element>
        </choice>
    </define>
    <define name="PreCondition">
        <choice>
            <notAllowed/>
            <element name="PreCondition">
                <ref name="SourceLocators"/>
                <ref name="BooleanExpression"/>
            </element>
        </choice>
    </define>
    <define name="In">
        <choice>
            <notAllowed/>
            <element name="In">
                <ref name="SourceLocators"/>
                <oneOrMore>
                    <choice>
                        <ref name="DeclareVariable"/>
                        <ref name="DeclareArray"/>
                    </choice>
                </oneOrMore>
            </element>
        </choice>
    </define>
    <define name="DIV">
        <choice>
            <notAllowed/>
            <element name="DIV">
                <ref name="SourceLocators"/>
                <ref name="NumericExpression"/>
                <ref name="NumericExpression"/>
            </element>
        </choice>
    </define>
    <define name="SQRT">
        <choice>
            <notAllowed/>
            <element name="SQRT">
                <ref name="SourceLocators"/>
                <ref name="NumericExpression"/>
            </element>
        </choice>
    </define>
</grammar>
