<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE schema PUBLIC "-//W3C//DTD XMLSCHEMA 200102//EN" "http://www.w3.org/2001/XMLSchema.dtd" >

<!--
* Copyright (c) 2006-2016, Universities Space Research Association (USRA).
*  All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*     * Redistributions of source code must retain the above copyright
*       notice, this list of conditions and the following disclaimer.
*     * Redistributions in binary form must reproduce the above copyright
*       notice, this list of conditions and the following disclaimer in the
*       documentation and/or other materials provided with the distribution.
*     * Neither the name of the Universities Space Research Association nor the
*       names of its contributors may be used to endorse or promote products
*       derived from this software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY USRA ``AS IS'' AND ANY EXPRESS OR IMPLIED
* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
* MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
* DISCLAIMED. IN NO EVENT SHALL USRA BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
* BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
* OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
* TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
* USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<!-- Schema for the Test Executive simulation script  -->

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xml:lang="en">

  <xs:element name="PLEXILScript">
    <xs:complexType>
      <xs:sequence>
	<xs:element ref="InitialState" minOccurs="0"/>
	<xs:element ref="Script"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element name="InitialState">
    <xs:complexType>
      <xs:sequence>
	<xs:element ref="State" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element name="Script">
    <xs:complexType>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="State"/>
          <xs:element ref="UpdateAck"/>
          <xs:element ref="Command"/>
          <xs:element ref="CommandAck"/>
          <xs:element ref="CommandAbort"/>
          <xs:element ref="Simultaneous"/>
          <xs:element ref="SendPlan"/>
          <xs:element name="Delay"/>
        </xs:choice>
    </xs:complexType>
  </xs:element>

  <xs:element name="SendPlan">
    <xs:complexType>
      <xs:attribute name="file" type="xs:string"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="Simultaneous">
    <xs:complexType>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="State" />
          <xs:element ref="UpdateAck" />
          <xs:element ref="Command" />
          <xs:element ref="CommandAck" />
          <xs:element ref="CommandAbort" />
        </xs:choice>
    </xs:complexType>
  </xs:element>

  <xs:element name="State">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="Param" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="Value" type="xs:string" maxOccurs="unbounded"/>
      </xs:sequence>
      <xs:attribute name="name" type="xs:string"/>
      <xs:attribute ref="type"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="Command" type="command-type"/>

  <xs:element name="CommandAck" type="command-type"/>

  <xs:element name="CommandAbort" type="command-type"/>

  <xs:element name="Param">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:string">
          <xs:attribute ref="type"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="UpdateAck">
    <xs:complexType>
      <xs:attribute name="name" type="xs:string"/>
    </xs:complexType>
  </xs:element>

  <xs:complexType name="command-type">
    <xs:sequence>
      <xs:element ref="Param" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Result" type="xs:string" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string"/>
    <xs:attribute ref="type"/>
  </xs:complexType>

  <xs:attribute name="type">
    <xs:simpleType>
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="bool"/>
        <xs:enumeration value="real"/>
        <xs:enumeration value="int"/>
        <xs:enumeration value="string"/>
        <xs:enumeration value="bool-array"/>
        <xs:enumeration value="real-array"/>
        <xs:enumeration value="int-array"/>
        <xs:enumeration value="string-array"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>

</xs:schema>
