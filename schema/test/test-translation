#! /bin/sh
# Test the translation of one Extended Plexil test case
# stdout is presumed to be a log file

# Copyright (c) 2006-2022, Universities Space Research Association (USRA).
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the Universities Space Research Association nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY USRA ``AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL USRA BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
# USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

set -e 

# Set PLEXIL_HOME for convenience of following scripts
if [ -z "$PLEXIL_HOME" ]
then
    PLEXIL_HOME="$(cd "$(dirname "$0")"/../.. && pwd -P)"
    export PLEXIL_HOME
fi

eplexil="$PLEXIL_HOME/scripts/eplexil"
schema_dir="$PLEXIL_HOME/schema"
validator="$schema_dir/validator/validate"
core_plexil_schema="$schema_dir/core-plexil.xsd"
validate_opts="--cache --schema $core_plexil_schema"

echo "$1"

infile="input/$1.epx"
outfile="output/$1.plx"
verified="verified/verified-${1}.plx"

rm -f "$outfile"

if ! "$eplexil" "$infile" "$outfile"
then
	echo " *** Translation of $infile failed ***" >&2
	echo " *** Translation of $infile failed ***"
	exit 1
fi

if ! "$validator" $validate_opts "$outfile"
then
	echo " *** $outfile failed validation ***" >&2
	echo " *** $outfile failed validation ***"
    exit 1
fi


if [ -r "$verified" ]
then
    if diff -B -w "$outfile" "$verified"
    then
        printf "Verified %s\n" "$outfile" >&2
    else
	    echo " *** $outfile failed verification ***" >&2
	    echo " *** $outfile failed verification ***"
        exit 1
    fi
else
    printf "Validated %s; no verified file, skipping verification\n" "$outfile" >&2
fi

exit 0
