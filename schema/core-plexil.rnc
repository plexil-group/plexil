namespace xsi = "http://www.w3.org/2001/XMLSchema-instance"
default namespace = ""

start =
  DeclareVariable
  | NodeTimepointValue
  | Tolerance
  | NodeRef
  | LookupNow
  | LT
  | ArrayElement
  | StringRHS
  | MOD
  | NumericRHS
  | BooleanRHS
  | DeclareArray
  | BooleanVariable
  | MAX
  | StateDeclaration
  | IntegerVariable
  | SkipCondition
  | CommandDeclaration
  | SUB
  | ResourceList
  | BooleanValue
  | NOT
  | NodeFailureVariable
  | EQInternal
  | AND
  | PreCondition
  | Arguments
  | RealValue
  | RealVariable
  | InOut
  | Interface
  | NodeCommandHandleVariable
  | LibraryNodeCall
  | LookupOnChange
  | Timepoint
  | Node
  | ArrayVariable
  | Return
  | NEString
  | NodeList
  | ADD
  | LookupRHS
  | Command
  | NodeBody
  | GE
  | In
  | NENumeric
  | XOR
  | NodeStateVariable
  | Update
  | Pair
  | Assignment
  | RepeatCondition
  | Concat
  | NodeStateValue
  | PostCondition
  | NodeId
  | VariableDeclarations
  | MIN
  | NEInternal
  | SQRT
  | LibraryNodeDeclaration
  | StringVariable
  | NodeCommandHandleValue
  | MUL
  | EQNumeric
  | InvariantCondition
  | Parameter
  | IsKnown
  | ABS
  | NodeOutcomeVariable
  | IntegerValue
  | Resource
  | NodeOutcomeValue
  | StartCondition
  | GlobalDeclarations
  | (notAllowed
     | element PlexilPlan {
         SourceLocators, GlobalDeclarations?, Action
       })
  | StringValue
  | EQBoolean
  | OR
  | EQString
  | EndCondition
  | Name
  | NEBoolean
  | (notAllowed
     | element ArrayValue {
         SourceLocators,
         attribute Type {
           xsd:NMTOKEN "Real"
           | xsd:NMTOKEN "String"
           | xsd:NMTOKEN "Boolean"
           | xsd:NMTOKEN "Integer"
         },
         (IntegerValue+ | RealValue+ | BooleanValue+ | StringValue+)
       })
  | GT
  | Alias
  | ArrayRHS
  | DIV
  | LE
  | NodeFailureValue
NodeId =
  notAllowed
  | element NodeId { NCName }
SourceLocators =
  attribute ColNo { xsd:integer }?,
  attribute LineNo { xsd:integer }?,
  attribute FileName { xsd:string }?
nonNegativeInteger = xsd:nonNegativeInteger
ADD =
  notAllowed
  | element ADD {
      SourceLocators,
      NumericExpression,
      NumericExpression,
      NumericExpression*
    }
EQBoolean =
  notAllowed
  | element EQBoolean {
      SourceLocators, BooleanExpression, BooleanExpression
    }
NodeFailure = NodeFailureVariable | NodeFailureValue
NEInternal =
  notAllowed
  | element NEInternal {
      SourceLocators,
      ((NodeState, NodeState)
       | (NodeOutcome, NodeOutcome)
       | (NodeFailure, NodeFailure)
       | (NodeCommandHandle, NodeCommandHandle))
    }
NENumeric =
  notAllowed
  | element NENumeric {
      SourceLocators, NumericExpression, NumericExpression
    }
ArithmeticOperator =
  ADD | SUB | MUL | DIV | MOD | MAX | MIN | SQRT | ABS
DeclareVariable =
  notAllowed
  | element DeclareVariable {
      SourceLocators,
      element Name { NCName },
      element Type { AtomicTypeValues },
      element InitialValue { Value }?
    }
Assignment =
  notAllowed
  | element Assignment {
      SourceLocators,
      DeclaredVariable,
      (BooleanRHS | NumericRHS | StringRHS | LookupRHS | ArrayRHS)
    }
Arguments =
  notAllowed
  | element Arguments {
      SourceLocators,
      (BooleanExpression
       | NumericExpression
       | StringExpression
       | ArrayVariable)+
    }
RealVariable =
  notAllowed
  | element RealVariable { NCName }
Tolerance =
  notAllowed
  | element Tolerance { RealValue | RealVariable }
NodeBody =
  notAllowed
  | element NodeBody {
      NodeList | Command | Assignment | Update | LibraryNodeCall
    }
Concat =
  notAllowed
  | element Concat { SourceLocators, StringExpression* }
EQNumeric =
  notAllowed
  | element EQNumeric {
      SourceLocators, NumericExpression, NumericExpression
    }
DeclareArray =
  notAllowed
  | element DeclareArray {
      SourceLocators,
      element Name { NCName },
      element Type { AtomicTypeValues },
      element MaxSize { nonNegativeInteger },
      element InitialValue { Value+ }?
    }
NodeFailureValue =
  notAllowed
  | element NodeFailureValue {
      xsd:NMTOKEN "INVARIANT_CONDITION_FAILED"
      | xsd:NMTOKEN "PRE_CONDITION_FAILED"
      | xsd:NMTOKEN "POST_CONDITION_FAILED"
      | xsd:NMTOKEN "PARENT_FAILED"
    }
Name =
  notAllowed
  | element Name { SourceLocators, StringExpression }
NodeOutcomeValue =
  notAllowed
  | element NodeOutcomeValue {
      xsd:NMTOKEN "SUCCESS"
      | xsd:NMTOKEN "SKIPPED"
      | xsd:NMTOKEN "FAILURE"
    }
EQString =
  notAllowed
  | element EQString {
      SourceLocators, StringExpression, StringExpression
    }
ArrayVariable =
  notAllowed
  | element ArrayVariable { NCName }
BooleanValue =
  notAllowed
  | element BooleanValue { xsd:boolean }
EndCondition =
  notAllowed
  | element EndCondition { SourceLocators, BooleanExpression }
ArrayElement =
  notAllowed
  | element ArrayElement {
      SourceLocators,
      element Name { NCName },
      element Index { NumericExpression }
    }
RepeatCondition =
  notAllowed
  | element RepeatCondition { SourceLocators, BooleanExpression }
NodeStateValue =
  notAllowed
  | element NodeStateValue {
      xsd:NMTOKEN "ITERATION_ENDED"
      | xsd:NMTOKEN "EXECUTING"
      | xsd:NMTOKEN "WAITING"
      | xsd:NMTOKEN "FINISHING"
      | xsd:NMTOKEN "INACTIVE"
      | xsd:NMTOKEN "FAILING"
      | xsd:NMTOKEN "FINISHED"
    }
BooleanExpression =
  LogicalOperator
  | Equality
  | NumericComparison
  | LookupGroup
  | IsKnown
  | BooleanVariable
  | BooleanValue
  | ArrayElement
PreCondition =
  notAllowed
  | element PreCondition { SourceLocators, BooleanExpression }
NodeOutcome = NodeOutcomeVariable | NodeOutcomeValue
SkipCondition =
  notAllowed
  | element SkipCondition { SourceLocators, BooleanExpression }
CommandDeclaration =
  notAllowed
  | element CommandDeclaration {
      SourceLocators,
      element Name { NCName },
      Return*,
      Parameter*,
      ResourceList?
    }
StringVariable =
  notAllowed
  | element StringVariable { NCName }
NodeTimepointValue =
  notAllowed
  | element NodeTimepointValue {
      SourceLocators, NodeReference, NodeStateValue, Timepoint
    }
LE =
  notAllowed
  | element LE { SourceLocators, NumericExpression, NumericExpression }
NodeCommandHandleVariable =
  notAllowed
  | element NodeCommandHandleVariable { SourceLocators, NodeId }
MUL =
  notAllowed
  | element MUL {
      SourceLocators,
      NumericExpression,
      NumericExpression,
      NumericExpression*
    }
Action = Node
ResourceList =
  notAllowed
  | element ResourceList { SourceLocators, Resource* }
IntegerValue =
  notAllowed
  | element IntegerValue { xsd:integer }
Alias =
  notAllowed
  | element Alias {
      SourceLocators,
      element NodeParameter { NCName },
      (Value
       | DeclaredVariable
       | LookupGroup
       | LogicalOperator
       | Equality
       | NumericComparison
       | IsKnown
       | ArithmeticOperator
       | NodeTimepointValue
       | element ArraySize { NCName }
       | element ArrayMaxSize { NCName }
       | StringOperator)
    }
Return =
  notAllowed
  | element Return {
      element Name { NCName }?,
      element Type { AtomicTypeValues },
      element MaxSize { nonNegativeInteger }?
    }
NCName = xsd:NCName
Equality =
  EQBoolean
  | EQNumeric
  | EQInternal
  | EQString
  | NEBoolean
  | NENumeric
  | NEInternal
  | NEString
LookupNow =
  notAllowed
  | element LookupNow { SourceLocators, Name, Arguments? }
AtomicTypeValues =
  xsd:NMTOKEN "Real"
  | xsd:NMTOKEN "String"
  | xsd:NMTOKEN "Boolean"
  | xsd:NMTOKEN "Integer"
NumericRHS =
  notAllowed
  | element NumericRHS { SourceLocators, NumericExpression }
InOut =
  notAllowed
  | element InOut { SourceLocators, (DeclareVariable | DeclareArray)+ }
ABS =
  notAllowed
  | element ABS { SourceLocators, NumericExpression }
NodeList =
  notAllowed
  | element NodeList { Action* }
Node =
  notAllowed
  | element Node {
      SourceLocators,
      attribute epx { xsd:NCName }?,
      attribute NodeType {
        xsd:NMTOKEN "Empty"
        | xsd:NMTOKEN "Command"
        | xsd:NMTOKEN "LibraryNodeCall"
        | xsd:NMTOKEN "Update"
        | xsd:NMTOKEN "Assignment"
        | xsd:NMTOKEN "NodeList"
      },
      (element Comment { xsd:string }?
       & NodeId
       & StartCondition?
       & RepeatCondition?
       & PreCondition?
       & PostCondition?
       & InvariantCondition?
       & EndCondition?
       & SkipCondition?
       & element Priority { nonNegativeInteger }?
       & Interface?
       & VariableDeclarations?
       & NodeBody?)
    }
Parameter =
  notAllowed
  | element Parameter {
      element Name { NCName }?,
      element Type { AtomicTypeValues },
      element MaxSize { nonNegativeInteger }?
    }
NodeReference = NodeId | NodeRef
AND =
  notAllowed
  | element AND { SourceLocators, BooleanExpression* }
NOT =
  notAllowed
  | element NOT { SourceLocators, BooleanExpression }
IntegerVariable =
  notAllowed
  | element IntegerVariable { NCName }
VariableDeclarations =
  notAllowed
  | element VariableDeclarations { (DeclareVariable | DeclareArray)+ }
Pair =
  notAllowed
  | element Pair {
      element Name { NCName },
      (Value | DeclaredVariable | LookupNow)
    }
XOR =
  notAllowed
  | element XOR { SourceLocators, BooleanExpression* }
BooleanRHS =
  notAllowed
  | element BooleanRHS { SourceLocators, BooleanExpression }
Update =
  notAllowed
  | element Update { SourceLocators, Pair* }
NumericComparison = GT | GE | LT | LE
SQRT =
  notAllowed
  | element SQRT { SourceLocators, NumericExpression }
Timepoint =
  notAllowed
  | element Timepoint { xsd:NMTOKEN "START" | xsd:NMTOKEN "END" }
LibraryNodeDeclaration =
  notAllowed
  | element LibraryNodeDeclaration {
      SourceLocators,
      element Name { NCName },
      Interface
    }
DIV =
  notAllowed
  | element DIV { SourceLocators, NumericExpression, NumericExpression }
NumericExpression =
  ArithmeticOperator
  | IntegerVariable
  | RealVariable
  | IntegerValue
  | RealValue
  | LookupGroup
  | NodeTimepointValue
  | (notAllowed
     | element ArraySize { NCName })
  | (notAllowed
     | element ArrayMaxSize { NCName })
  | ArrayElement
In =
  notAllowed
  | element In { SourceLocators, (DeclareVariable | DeclareArray)+ }
Value = IntegerValue | RealValue | BooleanValue | StringValue
PostCondition =
  notAllowed
  | element PostCondition { SourceLocators, BooleanExpression }
NodeRef =
  notAllowed
  | element NodeRef {
      attribute dir {
        xsd:NMTOKEN "child"
        | xsd:NMTOKEN "sibling"
        | xsd:NMTOKEN "parent"
        | xsd:NMTOKEN "self"
      }?,
      (xsd:NCName | xsd:string "")
    }
LT =
  notAllowed
  | element LT { SourceLocators, NumericExpression, NumericExpression }
Command =
  notAllowed
  | element Command {
      SourceLocators, ResourceList?, DeclaredVariable?, Name, Arguments?
    }
StateDeclaration =
  notAllowed
  | element StateDeclaration {
      SourceLocators,
      element Name { NCName },
      Return,
      Parameter*
    }
SUB =
  notAllowed
  | element SUB { SourceLocators, NumericExpression, NumericExpression }
GE =
  notAllowed
  | element GE { SourceLocators, NumericExpression, NumericExpression }
Interface =
  notAllowed
  | element Interface { SourceLocators, (In? & InOut?) }
EQInternal =
  notAllowed
  | element EQInternal {
      SourceLocators,
      ((NodeState, NodeState)
       | (NodeOutcome, NodeOutcome)
       | (NodeFailure, NodeFailure)
       | (NodeCommandHandle, NodeCommandHandle))
    }
NodeState = NodeStateVariable | NodeStateValue
StringRHS =
  notAllowed
  | element StringRHS { SourceLocators, StringExpression }
LookupOnChange =
  notAllowed
  | element LookupOnChange {
      SourceLocators, Name, Tolerance?, Arguments?
    }
StringExpression =
  StringVariable
  | StringValue
  | StringOperator
  | LookupGroup
  | ArrayElement
StringValue =
  notAllowed
  | element StringValue { xsd:string }
NEBoolean =
  notAllowed
  | element NEBoolean {
      SourceLocators, BooleanExpression, BooleanExpression
    }
Resource =
  notAllowed
  | element Resource {
      SourceLocators,
      (element ResourceName { StringExpression }
       & element ResourcePriority { NumericExpression }
       & element ResourceLowerBound { NumericExpression }?
       & element ResourceUpperBound { NumericExpression }?
       & element ResourceReleaseAtTermination { BooleanExpression }?)
    }
DeclaredVariable =
  IntegerVariable
  | RealVariable
  | BooleanVariable
  | StringVariable
  | ArrayVariable
  | ArrayElement
NodeOutcomeVariable =
  notAllowed
  | element NodeOutcomeVariable { node-reference }
IsKnown =
  notAllowed
  | element IsKnown {
      SourceLocators,
      (DeclaredVariable
       | LookupGroup
       | NodeStateVariable
       | NodeOutcomeVariable
       | NodeTimepointValue)
    }
BooleanVariable =
  notAllowed
  | element BooleanVariable { NCName }
GT =
  notAllowed
  | element GT { SourceLocators, NumericExpression, NumericExpression }
NodeCommandHandle = NodeCommandHandleVariable | NodeCommandHandleValue
NodeStateVariable =
  notAllowed
  | element NodeStateVariable { node-reference }
LookupRHS =
  notAllowed
  | element LookupRHS { SourceLocators, LookupGroup }
LookupGroup = LookupOnChange | LookupNow
StringOperator = Concat
LibraryNodeCall =
  notAllowed
  | element LibraryNodeCall {
      SourceLocators,
      NodeId,
      element RenameNodeId { NCName }?,
      Alias*
    }
MOD =
  notAllowed
  | element MOD { SourceLocators, NumericExpression, NumericExpression }
LogicalOperator = OR | XOR | AND | NOT
ArrayRHS =
  notAllowed
  | element ArrayRHS { SourceLocators, ArrayVariable }
RealValue =
  notAllowed
  | element RealValue { xsd:double }
StartCondition =
  notAllowed
  | element StartCondition { SourceLocators, BooleanExpression }
NodeCommandHandleValue =
  notAllowed
  | element NodeCommandHandleValue {
      xsd:NMTOKEN "COMMAND_ACCEPTED"
      | xsd:NMTOKEN "COMMAND_ABORTED"
      | xsd:NMTOKEN "COMMAND_FAILED"
      | xsd:NMTOKEN "COMMAND_SUCCESS"
      | xsd:NMTOKEN "COMMAND_SENT_TO_SYSTEM"
      | xsd:NMTOKEN "COMMAND_ABORT_FAILED"
      | xsd:NMTOKEN "COMMAND_DENIED"
      | xsd:NMTOKEN "COMMAND_RCVD_BY_SYSTEM"
    }
OR =
  notAllowed
  | element OR { SourceLocators, BooleanExpression* }
NEString =
  notAllowed
  | element NEString {
      SourceLocators, StringExpression, StringExpression
    }
NodeFailureVariable =
  notAllowed
  | element NodeFailureVariable { node-reference }
MIN =
  notAllowed
  | element MIN { SourceLocators, NumericExpression, NumericExpression }
node-reference = (SourceLocators, NodeReference), empty
GlobalDeclarations =
  notAllowed
  | element GlobalDeclarations {
      SourceLocators,
      (CommandDeclaration
       | empty
       | StateDeclaration
       | LibraryNodeDeclaration
       | element TimeScalingUnitsSubunits { xsd:integer })+
    }
InvariantCondition =
  notAllowed
  | element InvariantCondition { SourceLocators, BooleanExpression }
MAX =
  notAllowed
  | element MAX { SourceLocators, NumericExpression, NumericExpression }
PlexilPlanAttributes = 
  notAllowed
  | attribute xsi:* { xsd:anyURI }*
