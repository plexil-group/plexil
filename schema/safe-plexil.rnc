namespace xsi = "http://www.w3.org/2001/XMLSchema-instance"
default namespace = ""

start =
  DeclareMutex
  | SQRT
  | Node
  | NumericRHS
  | Assignment
  | ALL_KNOWN
  | FLOOR
  | LibraryNodeDeclaration
  | ArrayVariable
  | BooleanValue
  | EQBoolean
  | EQString
  | CEIL
  | StringValue
  | IsKnown
  | NodeCommandHandleValue
  | SUB
  | StringRHS
  | NodeBody
  | NodeList
  | StartCondition
  | Arguments
  | PostCondition
  | STRLEN
  | ResourceList
  | MIN
  | InvariantCondition
  | NEInternal
  | XOR
  | In
  | MAX
  | LookupOnChange
  | TRUNC
  | NEString
  | VariableDeclarations
  | Timepoint
  | NodeRef
  | EndCondition
  | ABS
  | NodeStateVariable
  | ArraySize
  | REAL_TO_INT
  | RealValue
  | NodeOutcomeVariable
  | RealVariable
  | NodeOutcomeValue
  | StringVariable
  | EQNumeric
  | DIV
  | Parameter
  | LE
  | Interface
  | ADD
  | DeclareArray
  | ArrayMaxSize
  | LT
  | Update
  | Name
  | Concat
  | IntegerVariable
  | BooleanRHS
  | ANY_KNOWN
  | RepeatCondition
  | NodeFailureValue
  | ArrayElement
  | NodeStateValue
  | (notAllowed
     | element PlexilPlan {
         SourceLocators, GlobalDeclarations?, Action
       })
  | MUL
  | PreCondition
  | Resource
  | NOT
  | AND
  | NodeId
  | ExitCondition
  | ArrayValue
  | NodeCommandHandleVariable
  | EQInternal
  | ROUND
  | DeclareVariable
  | NodeFailureVariable
  | ArrayRHS
  | NENumeric
  | GlobalDeclarations
  | CommandDeclaration
  | UsingMutex
  | GE
  | LookupNow
  | Pair
  | Return
  | OR
  | MOD
  | IntegerValue
  | Tolerance
  | NodeTimepointValue
  | LibraryNodeCall
  | GT
  | NEBoolean
  | Command
  | BooleanVariable
  | Alias
  | SkipCondition
  | InOut
  | StateDeclaration
CEIL =
  notAllowed
  | element CEIL { SourceLocators, GeneralizedNumericExpression }
Pair =
  notAllowed
  | element Pair {
      element Name { NCName },
      Expression
    }
LookupOnChange =
  notAllowed
  | element LookupOnChange {
      SourceLocators, Name, Tolerance?, Arguments?
    }
Command =
  notAllowed
  | element Command {
      SourceLocators, ResourceList?, DeclaredVariable?, Name, Arguments?
    }
DeclaredVariable =
  IntegerVariable
  | RealVariable
  | BooleanVariable
  | StringVariable
  | ArrayVariable
  | ArrayElement
EndCondition =
  notAllowed
  | element EndCondition {
      SourceLocators, GeneralizedBooleanExpression
    }
OR =
  notAllowed
  | element OR { SourceLocators, GeneralizedBooleanExpression* }
DeclareMutex =
  notAllowed
  | element DeclareMutex {
      SourceLocators,
      element Name { SourceLocators, xsd:NCName }
    }
EQNumeric =
  notAllowed
  | element EQNumeric {
      SourceLocators,
      GeneralizedNumericExpression,
      GeneralizedNumericExpression
    }
NodeStateVariable =
  notAllowed
  | element NodeStateVariable { node-reference }
ArrayMaxSize =
  notAllowed
  | element ArrayMaxSize { SourceLocators, GeneralizedArrayExpression }
InvariantCondition =
  notAllowed
  | element InvariantCondition {
      SourceLocators, GeneralizedBooleanExpression
    }
NodeState = NodeStateVariable | NodeStateValue
ArrayExpression = ArrayValue | ArrayVariable
PostCondition =
  notAllowed
  | element PostCondition {
      SourceLocators, GeneralizedBooleanExpression
    }
NENumeric =
  notAllowed
  | element NENumeric {
      SourceLocators,
      GeneralizedNumericExpression,
      GeneralizedNumericExpression
    }
EQBoolean =
  notAllowed
  | element EQBoolean {
      SourceLocators,
      GeneralizedBooleanExpression,
      GeneralizedBooleanExpression
    }
MAX =
  notAllowed
  | element MAX {
      SourceLocators,
      GeneralizedNumericExpression,
      GeneralizedNumericExpression
    }
NumericRHS =
  notAllowed
  | element NumericRHS { SourceLocators, GeneralizedNumericExpression }
Node =
  notAllowed
  | element Node {
      SourceLocators,
      attribute epx { xsd:NCName }?,
      attribute NodeType {
        xsd:NMTOKEN "Assignment"
        | xsd:NMTOKEN "Empty"
        | xsd:NMTOKEN "Command"
        | xsd:NMTOKEN "NodeList"
        | xsd:NMTOKEN "Update"
        | xsd:NMTOKEN "LibraryNodeCall"
      },
      (element Comment { \string }?
       & NodeId
       & StartCondition?
       & RepeatCondition?
       & PreCondition?
       & PostCondition?
       & InvariantCondition?
       & EndCondition?
       & ExitCondition?
       & SkipCondition?
       & element Priority { nonNegativeInteger }?
       & Interface?
       & VariableDeclarations?
       & UsingMutex?
       & NodeBody?)
    }
DIV =
  notAllowed
  | element DIV {
      SourceLocators,
      GeneralizedNumericExpression,
      GeneralizedNumericExpression
    }
FLOOR =
  notAllowed
  | element FLOOR { SourceLocators, GeneralizedNumericExpression }
DeclareArray =
  notAllowed
  | element DeclareArray {
      SourceLocators,
      element Name { NCName },
      element Type { AtomicTypeValues },
      element MaxSize { nonNegativeInteger }?,
      element InitialValue { Value+ | ArrayValue }?
    }
ALL_KNOWN =
  notAllowed
  | element ALL_KNOWN { SourceLocators, GeneralizedArrayExpression }
NEString =
  notAllowed
  | element NEString {
      SourceLocators,
      GeneralizedStringExpression,
      GeneralizedStringExpression
    }
NumericExpression =
  (ADD
   | SUB
   | MUL
   | DIV
   | MOD
   | MAX
   | MIN
   | SQRT
   | ABS
   | CEIL
   | FLOOR
   | ROUND
   | TRUNC
   | REAL_TO_INT
   | STRLEN)
  | IntegerVariable
  | RealVariable
  | IntegerValue
  | RealValue
  | NodeTimepointValue
  | ArraySize
  | ArrayMaxSize
VariableDeclarations =
  notAllowed
  | element VariableDeclarations {
      (DeclareVariable | DeclareArray | DeclareMutex)+
    }
STRLEN =
  notAllowed
  | element STRLEN { SourceLocators, GeneralizedStringExpression }
NodeStateValue =
  notAllowed
  | element NodeStateValue {
      xsd:NMTOKEN "EXECUTING"
      | xsd:NMTOKEN "FAILING"
      | xsd:NMTOKEN "ITERATION_ENDED"
      | xsd:NMTOKEN "INACTIVE"
      | xsd:NMTOKEN "WAITING"
      | xsd:NMTOKEN "FINISHING"
      | xsd:NMTOKEN "FINISHED"
    }
NCName = xsd:NCName
TRUNC =
  notAllowed
  | element TRUNC { SourceLocators, GeneralizedNumericExpression }
NodeReference = NodeId | NodeRef
ABS =
  notAllowed
  | element ABS { SourceLocators, GeneralizedNumericExpression }
IntegerValue =
  notAllowed
  | element IntegerValue { xsd:integer }
RepeatCondition =
  notAllowed
  | element RepeatCondition {
      SourceLocators, GeneralizedBooleanExpression
    }
ArrayValue =
  notAllowed
  | element ArrayValue {
      SourceLocators,
      attribute Type {
        xsd:NMTOKEN "Integer"
        | xsd:NMTOKEN "Real"
        | xsd:NMTOKEN "String"
        | xsd:NMTOKEN "Boolean"
      },
      (IntegerValue+ | RealValue+ | BooleanValue+ | StringValue+)
    }
GeneralizedStringExpression =
  StringExpression | LookupGroup | ArrayElement
Value = IntegerValue | RealValue | BooleanValue | StringValue
GeneralizedArrayExpression = ArrayExpression | LookupGroup
GlobalDeclarations =
  notAllowed
  | element GlobalDeclarations {
      SourceLocators,
      (CommandDeclaration
       | empty
       | StateDeclaration
       | LibraryNodeDeclaration
       | DeclareMutex
       | element TimeScalingUnitsSubunits { xsd:integer })+
    }
NOT =
  notAllowed
  | element NOT { SourceLocators, GeneralizedBooleanExpression }
GT =
  notAllowed
  | element GT {
      SourceLocators,
      GeneralizedNumericExpression,
      GeneralizedNumericExpression
    }
NEInternal =
  notAllowed
  | element NEInternal {
      SourceLocators,
      ((NodeState, NodeState)
       | (NodeOutcome, NodeOutcome)
       | (NodeFailure, NodeFailure)
       | (NodeCommandHandle, NodeCommandHandle))
    }
Parameter =
  notAllowed
  | element Parameter {
      element Name { NCName }?,
      element Type {
        xsd:NMTOKEN "Integer"
        | xsd:NMTOKEN "Real"
        | xsd:NMTOKEN "String"
        | xsd:NMTOKEN "Boolean"
      },
      element MaxSize { nonNegativeInteger }?
    }
Resource =
  notAllowed
  | element Resource {
      SourceLocators,
      (element ResourceName { GeneralizedStringExpression }
       & element ResourcePriority { GeneralizedNumericExpression }
       & element ResourceLowerBound { GeneralizedNumericExpression }?
       & element ResourceUpperBound { GeneralizedNumericExpression }?
       & element ResourceReleaseAtTermination {
           GeneralizedBooleanExpression
         }?)
    }
NodeId =
  notAllowed
  | element NodeId { NCName }
Timepoint =
  notAllowed
  | element Timepoint { xsd:NMTOKEN "START" | xsd:NMTOKEN "END" }
RealVariable =
  notAllowed
  | element RealVariable { NCName }
GeneralizedNumericExpression =
  NumericExpression | LookupGroup | ArrayElement
SUB =
  notAllowed
  | element SUB {
      SourceLocators,
      GeneralizedNumericExpression,
      GeneralizedNumericExpression,
      GeneralizedNumericExpression*
    }
CommandDeclaration =
  notAllowed
  | element CommandDeclaration {
      SourceLocators,
      element Name { NCName },
      Return*,
      ParameterSpec?,
      ResourceList?
    }
PreCondition =
  notAllowed
  | element PreCondition {
      SourceLocators, GeneralizedBooleanExpression
    }
nonNegativeInteger = xsd:nonNegativeInteger
Return =
  notAllowed
  | element Return {
      element Name { NCName }?,
      element Type { AtomicTypeValues },
      element MaxSize { nonNegativeInteger }?
    }
MOD =
  notAllowed
  | element MOD {
      SourceLocators,
      GeneralizedNumericExpression,
      GeneralizedNumericExpression
    }
ArrayVariable =
  notAllowed
  | element ArrayVariable { NCName }
EQString =
  notAllowed
  | element EQString {
      SourceLocators,
      GeneralizedStringExpression,
      GeneralizedStringExpression
    }
XOR =
  notAllowed
  | element XOR { SourceLocators, GeneralizedBooleanExpression* }
ExitCondition =
  notAllowed
  | element ExitCondition {
      SourceLocators, GeneralizedBooleanExpression
    }
StringExpression = StringVariable | StringValue | Concat
ParameterSpec =
  Parameter*,
  (notAllowed
   | element AnyParameters {
       mixed {
         (attribute * { text }
          | element0)*
       }
     })?
SQRT =
  notAllowed
  | element SQRT { SourceLocators, GeneralizedNumericExpression }
BooleanValue =
  notAllowed
  | element BooleanValue { xsd:boolean }
Concat =
  notAllowed
  | element Concat { SourceLocators, GeneralizedStringExpression* }
UsingMutex =
  notAllowed
  | element UsingMutex {
      SourceLocators,
      element Name {
        SourceLocators,
        element StringValue { NCName }
      }+
    }
LookupNow =
  notAllowed
  | element LookupNow { SourceLocators, Name, Arguments? }
Name =
  notAllowed
  | element Name { \string }
Action = Node
Assignment =
  notAllowed
  | element Assignment {
      SourceLocators,
      DeclaredVariable,
      (BooleanRHS | NumericRHS | StringRHS | ArrayRHS)
    }
StringValue =
  notAllowed
  | element StringValue { xsd:string }
NodeCommandHandleVariable =
  notAllowed
  | element NodeCommandHandleVariable { node-reference }
ROUND =
  notAllowed
  | element ROUND { SourceLocators, GeneralizedNumericExpression }
DeclareVariable =
  notAllowed
  | element DeclareVariable {
      SourceLocators,
      element Name { NCName },
      element Type { AtomicTypeValues },
      element InitialValue { Value }?
    }
Tolerance =
  notAllowed
  | element Tolerance { GeneralizedNumericExpression }
SkipCondition =
  notAllowed
  | element SkipCondition {
      SourceLocators, GeneralizedBooleanExpression
    }
ResourceList =
  notAllowed
  | element ResourceList { SourceLocators, Resource* }
BooleanRHS =
  notAllowed
  | element BooleanRHS { SourceLocators, GeneralizedBooleanExpression }
AtomicTypeValues =
  xsd:NMTOKEN "Integer"
  | xsd:NMTOKEN "Real"
  | xsd:NMTOKEN "String"
  | xsd:NMTOKEN "Boolean"
NodeBody =
  notAllowed
  | element NodeBody {
      NodeList | Command | Assignment | Update | LibraryNodeCall
    }
NodeFailure = NodeFailureVariable | NodeFailureValue
NodeFailureValue =
  notAllowed
  | element NodeFailureValue {
      xsd:NMTOKEN "PRE_CONDITION_FAILED"
      | xsd:NMTOKEN "EXITED"
      | xsd:NMTOKEN "INVARIANT_CONDITION_FAILED"
      | xsd:NMTOKEN "PARENT_FAILED"
      | xsd:NMTOKEN "PARENT_EXITED"
      | xsd:NMTOKEN "POST_CONDITION_FAILED"
    }
StartCondition =
  notAllowed
  | element StartCondition {
      SourceLocators, GeneralizedBooleanExpression
    }
Expression =
  BooleanExpression
  | NumericExpression
  | StringExpression
  | ArrayExpression
  | LookupGroup
  | ArrayElement
SourceLocators =
  attribute ColNo { xsd:integer }?,
  attribute LineNo { xsd:integer }?,
  attribute FileName { xsd:string }?
Update =
  notAllowed
  | element Update { SourceLocators, Pair* }
element0 =
  element * {
    mixed {
      (attribute * { text }
       | element0)*
    }
  }
LT =
  notAllowed
  | element LT {
      SourceLocators,
      GeneralizedNumericExpression,
      GeneralizedNumericExpression
    }
IntegerVariable =
  notAllowed
  | element IntegerVariable { NCName }
InOut =
  notAllowed
  | element InOut { SourceLocators, (DeclareVariable | DeclareArray)+ }
NEBoolean =
  notAllowed
  | element NEBoolean {
      SourceLocators,
      GeneralizedBooleanExpression,
      GeneralizedBooleanExpression
    }
node-reference = (SourceLocators, NodeReference), empty
RealValue =
  notAllowed
  | element RealValue { xsd:double }
NodeOutcome = NodeOutcomeVariable | NodeOutcomeValue
ArrayElement =
  notAllowed
  | element ArrayElement {
      SourceLocators,
      (GeneralizedArrayExpression
       | element Name { NCName }),
      element Index { GeneralizedNumericExpression }
    }
ArraySize =
  notAllowed
  | element ArraySize { SourceLocators, GeneralizedArrayExpression }
Alias =
  notAllowed
  | element Alias {
      SourceLocators,
      element NodeParameter { NCName },
      Expression
    }
LibraryNodeDeclaration =
  notAllowed
  | element LibraryNodeDeclaration {
      SourceLocators,
      element Name { NCName },
      Interface?
    }
AND =
  notAllowed
  | element AND { SourceLocators, GeneralizedBooleanExpression* }
StringRHS =
  notAllowed
  | element StringRHS { SourceLocators, GeneralizedStringExpression }
GeneralizedBooleanExpression =
  BooleanExpression | LookupGroup | ArrayElement
LE =
  notAllowed
  | element LE {
      SourceLocators,
      GeneralizedNumericExpression,
      GeneralizedNumericExpression
    }
\string = xsd:string
MUL =
  notAllowed
  | element MUL {
      SourceLocators,
      GeneralizedNumericExpression,
      GeneralizedNumericExpression,
      GeneralizedNumericExpression*
    }
NodeFailureVariable =
  notAllowed
  | element NodeFailureVariable { node-reference }
BooleanVariable =
  notAllowed
  | element BooleanVariable { NCName }
NodeCommandHandle = NodeCommandHandleVariable | NodeCommandHandleValue
IsKnown =
  notAllowed
  | element IsKnown {
      SourceLocators,
      (Expression
       | NodeStateVariable
       | NodeOutcomeVariable
       | NodeCommandHandleVariable)
    }
ArrayRHS =
  notAllowed
  | element ArrayRHS { SourceLocators, GeneralizedArrayExpression }
BooleanExpression =
  (OR | XOR | AND | NOT)
  | (EQBoolean
     | EQNumeric
     | EQInternal
     | EQString
     | NEBoolean
     | NENumeric
     | NEInternal
     | NEString)
  | (GT | GE | LT | LE)
  | (IsKnown | ALL_KNOWN | ANY_KNOWN)
  | BooleanVariable
  | BooleanValue
GE =
  notAllowed
  | element GE {
      SourceLocators,
      GeneralizedNumericExpression,
      GeneralizedNumericExpression
    }
REAL_TO_INT =
  notAllowed
  | element REAL_TO_INT { SourceLocators, GeneralizedNumericExpression }
StringVariable =
  notAllowed
  | element StringVariable { NCName }
Arguments =
  notAllowed
  | element Arguments { SourceLocators, Expression+ }
LookupGroup = LookupOnChange | LookupNow
NodeList =
  notAllowed
  | element NodeList { Action* }
NodeTimepointValue =
  notAllowed
  | element NodeTimepointValue {
      SourceLocators, NodeReference, NodeStateValue, Timepoint
    }
MIN =
  notAllowed
  | element MIN {
      SourceLocators,
      GeneralizedNumericExpression,
      GeneralizedNumericExpression
    }
NodeCommandHandleValue =
  notAllowed
  | element NodeCommandHandleValue {
      xsd:NMTOKEN "COMMAND_DENIED"
      | xsd:NMTOKEN "COMMAND_ABORTED"
      | xsd:NMTOKEN "COMMAND_ABORT_FAILED"
      | xsd:NMTOKEN "COMMAND_SUCCESS"
      | xsd:NMTOKEN "COMMAND_RCVD_BY_SYSTEM"
      | xsd:NMTOKEN "COMMAND_SENT_TO_SYSTEM"
      | xsd:NMTOKEN "COMMAND_ACCEPTED"
      | xsd:NMTOKEN "COMMAND_FAILED"
    }
In =
  notAllowed
  | element In { SourceLocators, (DeclareVariable | DeclareArray)+ }
NodeOutcomeValue =
  notAllowed
  | element NodeOutcomeValue {
      xsd:NMTOKEN "SUCCESS"
      | xsd:NMTOKEN "SKIPPED"
      | xsd:NMTOKEN "FAILURE"
      | xsd:NMTOKEN "INTERRUPTED"
    }
LibraryNodeCall =
  notAllowed
  | element LibraryNodeCall { SourceLocators, NodeId, Alias* }
NodeOutcomeVariable =
  notAllowed
  | element NodeOutcomeVariable { node-reference }
StateDeclaration =
  notAllowed
  | element StateDeclaration {
      SourceLocators,
      element Name { NCName },
      Return,
      ParameterSpec?
    }
ANY_KNOWN =
  notAllowed
  | element ANY_KNOWN { SourceLocators, GeneralizedArrayExpression }
EQInternal =
  notAllowed
  | element EQInternal {
      SourceLocators,
      ((NodeState, NodeState)
       | (NodeOutcome, NodeOutcome)
       | (NodeFailure, NodeFailure)
       | (NodeCommandHandle, NodeCommandHandle))
    }
Interface =
  notAllowed
  | element Interface { SourceLocators, (In? & InOut?) }
NodeRef =
  notAllowed
  | element NodeRef {
      attribute dir {
        xsd:NMTOKEN "parent"
        | xsd:NMTOKEN "sibling"
        | xsd:NMTOKEN "self"
        | xsd:NMTOKEN "child"
      }?,
      (xsd:NCName | xsd:string "")
    }
ADD =
  notAllowed
  | element ADD {
      SourceLocators,
      GeneralizedNumericExpression,
      GeneralizedNumericExpression,
      GeneralizedNumericExpression*
    }
PlexilPlanAttributes = 
  notAllowed
  | attribute xsi:* { xsd:anyURI }*
