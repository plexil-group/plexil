#! /usr/bin/env bash
#------------------------------------------------------------------------------
# rncfix
# 
# This script fixes up a auto-generated RELAX NG Compact Schema.
#
# -- jeff kowing <jeffrey.d.kowing@nasa.gov>
#------------------------------------------------------------------------------

usage_msg()
{
cat <<EOF

Usage: rncfix [-f] <infile> <outfile>

<infile>   The RELAX NG file to fix.
<outfile>  The fixed-up RELAX NG file to create.
-f         Force overwrite of <outfile>.

EOF
}

parse()
{
    parsed_arg_count=0

    while [ $# -gt 0 ]; do

	case $1 in
	    -h | --help)
		usage_msg
		help_opt=1
		exit 0
		;;

	    -f | --force)
		force_opt="1"
		;;

	    -*)
                echo "Unknown option: '$1'!"
		exit 1
		;;

	    [^-]*)
                if [ "${parsed_arg_count}" -eq 0 ]; then
		    infile="${1}"
		elif [ "${parsed_arg_count}" -eq 1 ]; then
		    outfile="${1}"
		else
		    echo "Too many arguments!"
		    exit 1
		fi
		parsed_arg_count=$((parsed_arg_count+1))
		;;
	    *)
		echo "BUG: Should not have reached this point! $1"
		return 1
		;;
	esac
	shift
    done
}

# Parse the command line.

parse $*

# Do some error checking.

if [ -z "${infile}" ]; then
    echo "You must specify an input file!"
    usage_msg
    exit 1
fi

if [ -z "${outfile}" ]; then
    echo "You must specify an output file!"
    usage_msg
    exit 1
fi

if ! [ -f "${infile}" ]; then
    echo "Cannot read input file ${infile}"
    usage_msg
    exit 1
fi

if [ -f "${outfile}" ] && [ -z "${force_opt}" ]; then
    echo "Output file ${outfile} already exists."
    echo "Use -f to force an overwrite."
    exit 1
fi

#-----------------------------------------------------
# Okay, ready to do the real work and fix up the file.
#-----------------------------------------------------

# Add the xsi namespace to the beginning of the schema.

cat > ${outfile} <<EOF
namespace xsi = "http://www.w3.org/2001/XMLSchema-instance"
EOF

# Add the PlexilPlanAttributes pattern to the list of the PlexilPlan
# element definition.  All the sed replacement script acutally does
# is:
#
# Change:
#     | element PlexilPlan { * })
# To:
#     | element PlexilPlan { PlexilPlanAttributes?, * })
#

sed -e 's:\(element[[:space:]]*PlexilPlan[[:space:]]*{[[:space:]]*\)\(.*\)\(}.*\):\1 PlexilPlanAttributes?, \2\3:' ${infile} >> ${outfile}

# Append the PlexilPlanAttributes pattern to the end of the schema.

cat >> ${outfile} <<EOF
PlexilPlanAttributes = 
  notAllowed
  | attribute xsi:* { xsd:anyURI }*
EOF
