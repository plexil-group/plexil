<?xml version="1.0"?>
<grammar ns="" xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
    <start>
        <choice>
            <ref name="DeclareMutex"/>
            <ref name="ADD"/>
            <ref name="EmptyNode"/>
            <ref name="CommandNode"/>
            <ref name="NodeState2"/>
            <ref name="DeclareArray"/>
            <ref name="NodeFailure2"/>
            <ref name="SQRT"/>
            <ref name="ArrayMaxSize"/>
            <ref name="LT"/>
            <ref name="String"/>
            <ref name="Update"/>
            <ref name="NodeOutcome"/>
            <ref name="Name"/>
            <ref name="Assignment"/>
            <ref name="ALL_KNOWN"/>
            <ref name="Concat"/>
            <ref name="FLOOR"/>
            <ref name="LibraryCall"/>
            <ref name="IntegerVariable"/>
            <ref name="ArrayVariable"/>
            <ref name="Real"/>
            <ref name="ANY_KNOWN"/>
            <ref name="EQBoolean"/>
            <ref name="EQString"/>
            <ref name="CEIL"/>
            <ref name="RepeatCondition"/>
            <ref name="Boolean"/>
            <ref name="ArrayElement"/>
            <ref name="UpdateNode"/>
            <ref name="IsKnown"/>
            <ref name="NodeCommandHandleValue"/>
            <ref name="SUB"/>
            <choice>
                <notAllowed/>
                <element name="PlexilPlan">
                    <ref name="SourceLocators"/>
                    <attribute name="version">
                        <data type="decimal"/>
                    </attribute>
                    <optional>
                        <ref name="GlobalDeclarations"/>
                    </optional>
                    <ref name="Action"/>
                </element>
            </choice>
            <ref name="MUL"/>
            <ref name="Resource"/>
            <ref name="StartCondition"/>
            <ref name="PreCondition"/>
            <ref name="PostCondition"/>
            <ref name="STRLEN"/>
            <ref name="LibraryNode"/>
            <ref name="NodeTimepoint"/>
            <ref name="NOT"/>
            <ref name="MIN"/>
            <ref name="InvariantCondition"/>
            <ref name="AND"/>
            <ref name="NEInternal"/>
            <ref name="NodeId"/>
            <ref name="XOR"/>
            <ref name="ExitCondition"/>
            <ref name="NodeCommandHandleVariable"/>
            <ref name="In"/>
            <ref name="EQInternal"/>
            <ref name="MAX"/>
            <ref name="LookupOnChange"/>
            <ref name="ROUND"/>
            <ref name="DeclareVariable"/>
            <ref name="NodeFailureVariable"/>
            <ref name="TRUNC"/>
            <ref name="NEString"/>
            <ref name="NENumeric"/>
            <ref name="NodeRef"/>
            <ref name="EndCondition"/>
            <ref name="ABS"/>
            <ref name="GlobalDeclarations"/>
            <ref name="NodeStateVariable"/>
            <ref name="CommandDeclaration"/>
            <ref name="ArraySize"/>
            <ref name="UsingMutex"/>
            <ref name="GE"/>
            <ref name="REAL_TO_INT"/>
            <ref name="LookupNow"/>
            <ref name="Pair"/>
            <ref name="OR"/>
            <ref name="MOD"/>
            <ref name="NodeOutcomeVariable"/>
            <ref name="Tolerance"/>
            <ref name="RealVariable"/>
            <ref name="StringVariable"/>
            <ref name="ListNode"/>
            <ref name="EQNumeric"/>
            <ref name="GT"/>
            <ref name="NEBoolean"/>
            <ref name="Integer"/>
            <ref name="Array"/>
            <ref name="DIV"/>
            <ref name="Command"/>
            <ref name="Alias"/>
            <ref name="BooleanVariable"/>
            <ref name="Parameter"/>
            <ref name="SkipCondition"/>
            <ref name="LE"/>
            <ref name="InOut"/>
            <ref name="StateDeclaration"/>
        </choice>
    </start>
    <define name="GeneralizedArrayExpression">
        <choice>
            <ref name="ArrayExpression"/>
            <ref name="LookupGroup"/>
        </choice>
    </define>
    <define name="SkipCondition">
        <choice>
            <notAllowed/>
            <element name="SkipCondition">
                <ref name="Condition"/>
            </element>
        </choice>
    </define>
    <define name="NEString">
        <choice>
            <notAllowed/>
            <element name="NEString">
                <ref name="EqualityOperator"/>
            </element>
        </choice>
    </define>
    <define name="NodeOutcome">
        <choice>
            <notAllowed/>
            <element name="NodeOutcome">
                <optional>
                    <attribute name="value">
                        <choice>
                            <value type="NMTOKEN">SUCCESS</value>
                            <value type="NMTOKEN">SKIPPED</value>
                            <value type="NMTOKEN">FAILURE</value>
                            <value type="NMTOKEN">INTERRUPTED</value>
                        </choice>
                    </attribute>
                </optional>
            </element>
        </choice>
    </define>
    <define name="DeclareMutex">
        <choice>
            <notAllowed/>
            <element name="DeclareMutex">
                <ref name="SourceLocators"/>
                <optional>
                    <attribute name="Name">
                        <data type="NCName"/>
                    </attribute>
                </optional>
            </element>
        </choice>
    </define>
    <define name="CEIL">
        <choice>
            <notAllowed/>
            <element name="CEIL">
                <ref name="UnaryNumericOp"/>
            </element>
        </choice>
    </define>
    <define name="anonymous0">
        <ref name="SourceLocators"/>
        <choice>
            <ref name="NodeId"/>
            <ref name="NodeRef"/>
        </choice>
    </define>
    <define name="NodeCommandHandleVariable">
        <choice>
            <notAllowed/>
            <element name="NodeCommandHandleVariable">
                <ref name="NodeReference"/>
            </element>
        </choice>
    </define>
    <define name="NodeCommandHandle">
        <choice>
            <ref name="NodeCommandHandleVariable"/>
            <ref name="NodeCommandHandleValue"/>
        </choice>
    </define>
    <define name="Conditions">
        <choice>
            <ref name="SkipCondition"/>
            <ref name="StartCondition"/>
            <ref name="PreCondition"/>
            <ref name="EndCondition"/>
            <ref name="ExitCondition"/>
            <ref name="InvariantCondition"/>
            <ref name="PostCondition"/>
            <ref name="RepeatCondition"/>
        </choice>
    </define>
    <define name="InOut">
        <choice>
            <notAllowed/>
            <element name="InOut">
                <ref name="InterfaceSpec"/>
            </element>
        </choice>
    </define>
    <define name="IsKnown">
        <choice>
            <notAllowed/>
            <element name="IsKnown">
                <ref name="SourceLocators"/>
                <choice>
                    <ref name="Expression"/>
                    <ref name="NodeStateVariable"/>
                    <ref name="NodeOutcomeVariable"/>
                    <ref name="NodeCommandHandleVariable"/>
                </choice>
            </element>
        </choice>
    </define>
    <define name="GeneralizedBooleanExpression">
        <choice>
            <ref name="BooleanExpression"/>
            <ref name="LookupGroup"/>
            <ref name="ArrayElement"/>
        </choice>
    </define>
    <define name="ArraySize">
        <choice>
            <notAllowed/>
            <element name="ArraySize">
                <ref name="SourceLocators"/>
                <ref name="GeneralizedArrayExpression"/>
            </element>
        </choice>
    </define>
    <define name="NumericExpression">
        <choice>
            <choice>
                <ref name="ADD"/>
                <ref name="SUB"/>
                <ref name="MUL"/>
                <ref name="DIV"/>
                <ref name="MOD"/>
                <ref name="MAX"/>
                <ref name="MIN"/>
                <ref name="SQRT"/>
                <ref name="ABS"/>
                <ref name="CEIL"/>
                <ref name="FLOOR"/>
                <ref name="ROUND"/>
                <ref name="TRUNC"/>
                <ref name="REAL_TO_INT"/>
                <ref name="STRLEN"/>
            </choice>
            <ref name="IntegerVariable"/>
            <ref name="RealVariable"/>
            <ref name="Integer"/>
            <ref name="Real"/>
            <ref name="NodeTimepoint"/>
            <ref name="ArraySize"/>
            <ref name="ArrayMaxSize"/>
        </choice>
    </define>
    <define name="Condition">
        <group>
            <ref name="SourceLocators"/>
            <ref name="GeneralizedBooleanExpression"/>
        </group>
        <empty/>
    </define>
    <define name="Update">
        <choice>
            <notAllowed/>
            <element name="Update">
                <ref name="SourceLocators"/>
                <zeroOrMore>
                    <ref name="Pair"/>
                </zeroOrMore>
            </element>
        </choice>
    </define>
    <define name="Boolean">
        <choice>
            <notAllowed/>
            <element name="Boolean">
                <optional>
                    <attribute name="value">
                        <data type="boolean"/>
                    </attribute>
                </optional>
            </element>
        </choice>
    </define>
    <define name="NaryBooleanOp">
        <group>
            <ref name="SourceLocators"/>
            <oneOrMore>
                <ref name="GeneralizedBooleanExpression"/>
            </oneOrMore>
        </group>
        <empty/>
    </define>
    <define name="DIV">
        <choice>
            <notAllowed/>
            <element name="DIV">
                <ref name="BinaryNumericOp"/>
            </element>
        </choice>
    </define>
    <define name="NodeState">
        <choice>
            <ref name="NodeStateVariable"/>
            <ref name="NodeState2"/>
        </choice>
    </define>
    <define name="PreCondition">
        <choice>
            <notAllowed/>
            <element name="PreCondition">
                <ref name="Condition"/>
            </element>
        </choice>
    </define>
    <define name="Array">
        <choice>
            <notAllowed/>
            <element name="Array">
                <ref name="SourceLocators"/>
                <attribute name="ElementType">
                    <choice>
                        <value type="NMTOKEN">Integer</value>
                        <value type="NMTOKEN">Real</value>
                        <value type="NMTOKEN">String</value>
                        <value type="NMTOKEN">Boolean</value>
                    </choice>
                </attribute>
                <choice>
                    <oneOrMore>
                        <ref name="Integer"/>
                    </oneOrMore>
                    <oneOrMore>
                        <ref name="Real"/>
                    </oneOrMore>
                    <oneOrMore>
                        <ref name="Boolean"/>
                    </oneOrMore>
                    <oneOrMore>
                        <ref name="String"/>
                    </oneOrMore>
                </choice>
            </element>
        </choice>
    </define>
    <define name="LibraryNode">
        <choice>
            <notAllowed/>
            <element name="LibraryNode">
                <ref name="SourceLocators"/>
                <attribute name="Name">
                    <data type="NCName"/>
                </attribute>
                <zeroOrMore>
                    <ref name="Interface"/>
                </zeroOrMore>
            </element>
        </choice>
    </define>
    <define name="UnaryNumericOp">
        <group>
            <ref name="SourceLocators"/>
            <ref name="GeneralizedNumericExpression"/>
        </group>
        <empty/>
    </define>
    <define name="EndCondition">
        <choice>
            <notAllowed/>
            <element name="EndCondition">
                <ref name="Condition"/>
            </element>
        </choice>
    </define>
    <define name="NodeState2">
        <choice>
            <notAllowed/>
            <element name="NodeState">
                <optional>
                    <attribute name="value">
                        <choice>
                            <value type="NMTOKEN">EXECUTING</value>
                            <value type="NMTOKEN">FAILING</value>
                            <value type="NMTOKEN">ITERATION_ENDED</value>
                            <value type="NMTOKEN">INACTIVE</value>
                            <value type="NMTOKEN">WAITING</value>
                            <value type="NMTOKEN">FINISHING</value>
                            <value type="NMTOKEN">FINISHED</value>
                        </choice>
                    </attribute>
                </optional>
            </element>
        </choice>
    </define>
    <define name="Concat">
        <choice>
            <notAllowed/>
            <element name="Concat">
                <ref name="SourceLocators"/>
                <zeroOrMore>
                    <ref name="GeneralizedStringExpression"/>
                </zeroOrMore>
            </element>
        </choice>
    </define>
    <define name="NOT">
        <choice>
            <notAllowed/>
            <element name="NOT">
                <ref name="SourceLocators"/>
                <ref name="GeneralizedBooleanExpression"/>
            </element>
        </choice>
    </define>
    <define name="EqualityOperator">
        <group>
            <ref name="SourceLocators"/>
            <choice>
                <group>
                    <ref name="GeneralizedBooleanExpression"/>
                    <ref name="GeneralizedBooleanExpression"/>
                </group>
                <group>
                    <ref name="GeneralizedNumericExpression"/>
                    <ref name="GeneralizedNumericExpression"/>
                </group>
                <group>
                    <ref name="GeneralizedStringExpression"/>
                    <ref name="GeneralizedStringExpression"/>
                </group>
                <group>
                    <ref name="NodeState"/>
                    <ref name="NodeState"/>
                </group>
                <group>
                    <ref name="NodeOutcome2"/>
                    <ref name="NodeOutcome2"/>
                </group>
                <group>
                    <ref name="NodeFailure"/>
                    <ref name="NodeFailure"/>
                </group>
                <group>
                    <ref name="NodeCommandHandle"/>
                    <ref name="NodeCommandHandle"/>
                </group>
            </choice>
        </group>
        <empty/>
    </define>
    <define name="PostCondition">
        <choice>
            <notAllowed/>
            <element name="PostCondition">
                <ref name="Condition"/>
            </element>
        </choice>
    </define>
    <define name="GlobalDeclarations">
        <choice>
            <notAllowed/>
            <element name="GlobalDeclarations">
                <ref name="SourceLocators"/>
                <oneOrMore>
                    <choice>
                        <ref name="CommandDeclaration"/>
                        <empty/>
                        <ref name="StateDeclaration"/>
                        <ref name="DeclareMutex"/>
                        <ref name="LibraryNode"/>
                        <element name="TimeScalingUnitsSubunits">
                            <data type="integer"/>
                        </element>
                    </choice>
                </oneOrMore>
            </element>
        </choice>
    </define>
    <define name="TRUNC">
        <choice>
            <notAllowed/>
            <element name="TRUNC">
                <ref name="UnaryNumericOp"/>
            </element>
        </choice>
    </define>
    <define name="LookupGroup">
        <choice>
            <ref name="LookupOnChange"/>
            <ref name="LookupNow"/>
        </choice>
    </define>
    <define name="STRLEN">
        <choice>
            <notAllowed/>
            <element name="STRLEN">
                <ref name="SourceLocators"/>
                <ref name="GeneralizedStringExpression"/>
            </element>
        </choice>
    </define>
    <define name="VariableReferenceType">
        <group>
            <ref name="SourceLocators"/>
            <attribute name="Name">
                <data type="NCName"/>
            </attribute>
        </group>
        <empty/>
    </define>
    <define name="NodeId">
        <choice>
            <notAllowed/>
            <element name="NodeId">
                <ref name="NCName"/>
            </element>
        </choice>
    </define>
    <define name="Resource">
        <choice>
            <notAllowed/>
            <element name="Resource">
                <ref name="SourceLocators"/>
                <interleave>
                    <element name="Name">
                        <ref name="GeneralizedStringExpression"/>
                    </element>
                    <element name="Priority">
                        <ref name="GeneralizedNumericExpression"/>
                    </element>
                    <optional>
                        <element name="LowerBound">
                            <ref name="GeneralizedNumericExpression"/>
                        </element>
                    </optional>
                    <optional>
                        <element name="UpperBound">
                            <ref name="GeneralizedNumericExpression"/>
                        </element>
                    </optional>
                    <optional>
                        <element name="ReleaseAtTermination">
                            <ref name="GeneralizedBooleanExpression"/>
                        </element>
                    </optional>
                </interleave>
            </element>
        </choice>
    </define>
    <define name="BinaryNumericOp">
        <group>
            <ref name="SourceLocators"/>
            <group>
                <ref name="GeneralizedNumericExpression"/>
                <ref name="GeneralizedNumericExpression"/>
            </group>
        </group>
        <empty/>
    </define>
    <define name="ArrayMaxSize">
        <choice>
            <notAllowed/>
            <element name="ArrayMaxSize">
                <ref name="SourceLocators"/>
                <ref name="GeneralizedArrayExpression"/>
            </element>
        </choice>
    </define>
    <define name="EmptyNode">
        <choice>
            <notAllowed/>
            <element name="EmptyNode">
                <ref name="anonymous1"/>
            </element>
        </choice>
    </define>
    <define name="NEInternal">
        <choice>
            <notAllowed/>
            <element name="NEInternal">
                <ref name="EqualityOperator"/>
            </element>
        </choice>
    </define>
    <define name="InterfaceSpec">
        <group>
            <ref name="SourceLocators"/>
            <oneOrMore>
                <choice>
                    <ref name="DeclareVariable"/>
                    <ref name="DeclareArray"/>
                </choice>
            </oneOrMore>
        </group>
        <empty/>
    </define>
    <define name="XOR">
        <choice>
            <notAllowed/>
            <element name="XOR">
                <ref name="NaryBooleanOp"/>
            </element>
        </choice>
    </define>
    <define name="NodeOutcome2">
        <choice>
            <ref name="NodeOutcomeVariable"/>
            <ref name="NodeOutcome"/>
        </choice>
    </define>
    <define name="RealVariable">
        <choice>
            <notAllowed/>
            <element name="RealVariable">
                <ref name="VariableReferenceType"/>
            </element>
        </choice>
    </define>
    <define name="MAX">
        <choice>
            <notAllowed/>
            <element name="MAX">
                <ref name="NaryNumericOp"/>
            </element>
        </choice>
    </define>
    <define name="NCName">
        <data type="NCName"/>
    </define>
    <define name="DeclareVariable">
        <choice>
            <notAllowed/>
            <element name="DeclareVariable">
                <ref name="SourceLocators"/>
                <attribute name="Type">
                    <choice>
                        <value type="NMTOKEN">Integer</value>
                        <value type="NMTOKEN">Real</value>
                        <value type="NMTOKEN">String</value>
                        <value type="NMTOKEN">Boolean</value>
                    </choice>
                </attribute>
                <attribute name="Name">
                    <data type="NCName"/>
                </attribute>
                <optional>
                    <choice>
                        <ref name="BooleanExpression"/>
                        <ref name="NumericExpression"/>
                        <ref name="StringExpression"/>
                        <ref name="LookupGroup"/>
                        <ref name="ArrayElement"/>
                    </choice>
                </optional>
            </element>
        </choice>
    </define>
    <define name="GeneralizedNumericExpression">
        <choice>
            <ref name="NumericExpression"/>
            <ref name="LookupGroup"/>
            <ref name="ArrayElement"/>
        </choice>
    </define>
    <define name="Interface">
        <choice>
            <ref name="In"/>
            <empty/>
            <ref name="InOut"/>
        </choice>
    </define>
    <define name="NodeTimepoint">
        <choice>
            <notAllowed/>
            <element name="NodeTimepoint">
                <ref name="anonymous0"/>
                <attribute name="NodeState">
                    <choice>
                        <value type="NMTOKEN">EXECUTING</value>
                        <value type="NMTOKEN">FAILING</value>
                        <value type="NMTOKEN">ITERATION_ENDED</value>
                        <value type="NMTOKEN">INACTIVE</value>
                        <value type="NMTOKEN">WAITING</value>
                        <value type="NMTOKEN">FINISHING</value>
                        <value type="NMTOKEN">FINISHED</value>
                    </choice>
                </attribute>
                <attribute name="Timepoint">
                    <choice>
                        <value type="NMTOKEN">START</value>
                        <value type="NMTOKEN">END</value>
                    </choice>
                </attribute>
            </element>
        </choice>
    </define>
    <define name="Name">
        <choice>
            <notAllowed/>
            <element name="Name">
                <ref name="SourceLocators"/>
                <ref name="GeneralizedStringExpression"/>
            </element>
        </choice>
    </define>
    <define name="Parameter">
        <choice>
            <notAllowed/>
            <element name="Parameter">
                <optional>
                    <attribute name="MaxSize">
                        <data type="nonNegativeInteger"/>
                    </attribute>
                </optional>
                <attribute name="Type">
                    <choice>
                        <value type="NMTOKEN">Integer</value>
                        <value type="NMTOKEN">Array</value>
                        <value type="NMTOKEN">StringArray</value>
                        <value type="NMTOKEN">Real</value>
                        <value type="NMTOKEN">RealArray</value>
                        <value type="NMTOKEN">String</value>
                        <value type="NMTOKEN">Boolean</value>
                        <value type="NMTOKEN">Any</value>
                        <value type="NMTOKEN">IntegerArray</value>
                        <value type="NMTOKEN">BooleanArray</value>
                    </choice>
                </attribute>
                <optional>
                    <attribute name="Name">
                        <data type="NCName"/>
                    </attribute>
                </optional>
            </element>
        </choice>
    </define>
    <define name="CommandDeclaration">
        <choice>
            <notAllowed/>
            <element name="CommandDeclaration">
                <ref name="SourceLocators"/>
                <optional>
                    <attribute name="MaxSize">
                        <data type="nonNegativeInteger"/>
                    </attribute>
                </optional>
                <optional>
                    <attribute name="Type">
                        <choice>
                            <value type="NMTOKEN">Integer</value>
                            <value type="NMTOKEN">Array</value>
                            <value type="NMTOKEN">StringArray</value>
                            <value type="NMTOKEN">Real</value>
                            <value type="NMTOKEN">RealArray</value>
                            <value type="NMTOKEN">String</value>
                            <value type="NMTOKEN">Boolean</value>
                            <value type="NMTOKEN">Any</value>
                            <value type="NMTOKEN">IntegerArray</value>
                            <value type="NMTOKEN">BooleanArray</value>
                        </choice>
                    </attribute>
                </optional>
                <attribute name="Name">
                    <data type="NCName"/>
                </attribute>
                <optional>
                    <ref name="ParameterSpec"/>
                </optional>
                <zeroOrMore>
                    <ref name="Resource"/>
                </zeroOrMore>
            </element>
        </choice>
    </define>
    <define name="RepeatCondition">
        <choice>
            <notAllowed/>
            <element name="RepeatCondition">
                <ref name="Condition"/>
            </element>
        </choice>
    </define>
    <define name="Real">
        <choice>
            <notAllowed/>
            <element name="Real">
                <optional>
                    <attribute name="value">
                        <data type="double"/>
                    </attribute>
                </optional>
            </element>
        </choice>
    </define>
    <define name="StartCondition">
        <choice>
            <notAllowed/>
            <element name="StartCondition">
                <ref name="Condition"/>
            </element>
        </choice>
    </define>
    <define name="OR">
        <choice>
            <notAllowed/>
            <element name="OR">
                <ref name="NaryBooleanOp"/>
            </element>
        </choice>
    </define>
    <define name="Command">
        <choice>
            <notAllowed/>
            <element name="Command">
                <ref name="SourceLocators"/>
                <zeroOrMore>
                    <ref name="Resource"/>
                </zeroOrMore>
                <optional>
                    <ref name="DeclaredVariable"/>
                </optional>
                <ref name="Name"/>
                <zeroOrMore>
                    <ref name="Expression"/>
                </zeroOrMore>
            </element>
        </choice>
    </define>
    <define name="LT">
        <choice>
            <notAllowed/>
            <element name="LT">
                <ref name="BinaryNumericOp"/>
            </element>
        </choice>
    </define>
    <define name="NodeReference">
        <ref name="anonymous0"/>
        <empty/>
    </define>
    <define name="EQString">
        <choice>
            <notAllowed/>
            <element name="EQString">
                <ref name="EqualityOperator"/>
            </element>
        </choice>
    </define>
    <define name="StringVariable">
        <choice>
            <notAllowed/>
            <element name="StringVariable">
                <ref name="VariableReferenceType"/>
            </element>
        </choice>
    </define>
    <define name="DeclaredVariable">
        <choice>
            <ref name="IntegerVariable"/>
            <ref name="RealVariable"/>
            <ref name="BooleanVariable"/>
            <ref name="StringVariable"/>
            <ref name="ArrayVariable"/>
            <ref name="ArrayElement"/>
        </choice>
    </define>
    <define name="MUL">
        <choice>
            <notAllowed/>
            <element name="MUL">
                <ref name="NaryNumericOp"/>
            </element>
        </choice>
    </define>
    <define name="IntegerVariable">
        <choice>
            <notAllowed/>
            <element name="IntegerVariable">
                <ref name="VariableReferenceType"/>
            </element>
        </choice>
    </define>
    <define name="CommandNode">
        <choice>
            <notAllowed/>
            <element name="CommandNode">
                <ref name="anonymous1"/>
                <ref name="Command"/>
            </element>
        </choice>
    </define>
    <define name="ANY_KNOWN">
        <choice>
            <notAllowed/>
            <element name="ANY_KNOWN">
                <ref name="SourceLocators"/>
                <ref name="GeneralizedArrayExpression"/>
            </element>
        </choice>
    </define>
    <define name="GT">
        <choice>
            <notAllowed/>
            <element name="GT">
                <ref name="BinaryNumericOp"/>
            </element>
        </choice>
    </define>
    <define name="LE">
        <choice>
            <notAllowed/>
            <element name="LE">
                <ref name="BinaryNumericOp"/>
            </element>
        </choice>
    </define>
    <define name="ExitCondition">
        <choice>
            <notAllowed/>
            <element name="ExitCondition">
                <ref name="Condition"/>
            </element>
        </choice>
    </define>
    <define name="NodeFailure">
        <choice>
            <ref name="NodeFailureVariable"/>
            <ref name="NodeFailure2"/>
        </choice>
    </define>
    <define name="GeneralizedStringExpression">
        <choice>
            <ref name="StringExpression"/>
            <ref name="LookupGroup"/>
            <ref name="ArrayElement"/>
        </choice>
    </define>
    <define name="In">
        <choice>
            <notAllowed/>
            <element name="In">
                <ref name="InterfaceSpec"/>
            </element>
        </choice>
    </define>
    <define name="SQRT">
        <choice>
            <notAllowed/>
            <element name="SQRT">
                <ref name="UnaryNumericOp"/>
            </element>
        </choice>
    </define>
    <define name="NaryNumericOp">
        <group>
            <ref name="SourceLocators"/>
            <oneOrMore>
                <ref name="GeneralizedNumericExpression"/>
            </oneOrMore>
        </group>
        <empty/>
    </define>
    <define name="ListNode">
        <choice>
            <notAllowed/>
            <element name="ListNode">
                <ref name="anonymous1"/>
                <zeroOrMore>
                    <ref name="Action"/>
                </zeroOrMore>
            </element>
        </choice>
    </define>
    <define name="ParameterSpec">
        <zeroOrMore>
            <ref name="Parameter"/>
        </zeroOrMore>
        <optional>
            <choice>
                <notAllowed/>
                <element name="AnyParameters">
                    <mixed>
                        <zeroOrMore>
                            <choice>
                                <attribute>
                                    <anyName/>
                                </attribute>
                                <ref name="element0"/>
                            </choice>
                        </zeroOrMore>
                    </mixed>
                </element>
            </choice>
        </optional>
    </define>
    <define name="Tolerance">
        <choice>
            <notAllowed/>
            <element name="Tolerance">
                <ref name="GeneralizedNumericExpression"/>
            </element>
        </choice>
    </define>
    <define name="DeclareArray">
        <choice>
            <notAllowed/>
            <element name="DeclareArray">
                <ref name="SourceLocators"/>
                <optional>
                    <attribute name="MaxSize">
                        <data type="nonNegativeInteger"/>
                    </attribute>
                </optional>
                <attribute name="ElementType">
                    <choice>
                        <value type="NMTOKEN">Integer</value>
                        <value type="NMTOKEN">Real</value>
                        <value type="NMTOKEN">String</value>
                        <value type="NMTOKEN">Boolean</value>
                    </choice>
                </attribute>
                <attribute name="Name">
                    <data type="NCName"/>
                </attribute>
                <optional>
                    <ref name="GeneralizedArrayExpression"/>
                </optional>
            </element>
        </choice>
    </define>
    <define name="InvariantCondition">
        <choice>
            <notAllowed/>
            <element name="InvariantCondition">
                <ref name="Condition"/>
            </element>
        </choice>
    </define>
    <define name="ArrayVariable">
        <choice>
            <notAllowed/>
            <element name="ArrayVariable">
                <ref name="VariableReferenceType"/>
            </element>
        </choice>
    </define>
    <define name="UpdateNode">
        <choice>
            <notAllowed/>
            <element name="UpdateNode">
                <ref name="anonymous1"/>
                <ref name="Update"/>
            </element>
        </choice>
    </define>
    <define name="AND">
        <choice>
            <notAllowed/>
            <element name="AND">
                <ref name="NaryBooleanOp"/>
            </element>
        </choice>
    </define>
    <define name="SUB">
        <choice>
            <notAllowed/>
            <element name="SUB">
                <ref name="NaryNumericOp"/>
            </element>
        </choice>
    </define>
    <define name="NENumeric">
        <choice>
            <notAllowed/>
            <element name="NENumeric">
                <ref name="EqualityOperator"/>
            </element>
        </choice>
    </define>
    <define name="element0">
        <element>
            <anyName/>
            <mixed>
                <zeroOrMore>
                    <choice>
                        <attribute>
                            <anyName/>
                        </attribute>
                        <ref name="element0"/>
                    </choice>
                </zeroOrMore>
            </mixed>
        </element>
    </define>
    <define name="ABS">
        <choice>
            <notAllowed/>
            <element name="ABS">
                <ref name="UnaryNumericOp"/>
            </element>
        </choice>
    </define>
    <define name="NEBoolean">
        <choice>
            <notAllowed/>
            <element name="NEBoolean">
                <ref name="EqualityOperator"/>
            </element>
        </choice>
    </define>
    <define name="Integer">
        <choice>
            <notAllowed/>
            <element name="Integer">
                <optional>
                    <attribute name="value">
                        <data type="integer"/>
                    </attribute>
                </optional>
            </element>
        </choice>
    </define>
    <define name="LookupOnChange">
        <choice>
            <notAllowed/>
            <element name="LookupOnChange">
                <ref name="SourceLocators"/>
                <optional>
                    <ref name="Tolerance"/>
                </optional>
                <ref name="Name"/>
                <zeroOrMore>
                    <ref name="Expression"/>
                </zeroOrMore>
            </element>
        </choice>
    </define>
    <define name="MIN">
        <choice>
            <notAllowed/>
            <element name="MIN">
                <ref name="NaryNumericOp"/>
            </element>
        </choice>
    </define>
    <define name="FLOOR">
        <choice>
            <notAllowed/>
            <element name="FLOOR">
                <ref name="UnaryNumericOp"/>
            </element>
        </choice>
    </define>
    <define name="BooleanExpression">
        <choice>
            <choice>
                <ref name="OR"/>
                <ref name="XOR"/>
                <ref name="AND"/>
                <ref name="NOT"/>
            </choice>
            <choice>
                <ref name="EQBoolean"/>
                <ref name="EQNumeric"/>
                <ref name="EQInternal"/>
                <ref name="EQString"/>
                <ref name="NEBoolean"/>
                <ref name="NENumeric"/>
                <ref name="NEInternal"/>
                <ref name="NEString"/>
            </choice>
            <choice>
                <ref name="GT"/>
                <ref name="GE"/>
                <ref name="LT"/>
                <ref name="LE"/>
            </choice>
            <choice>
                <ref name="IsKnown"/>
                <ref name="ALL_KNOWN"/>
                <ref name="ANY_KNOWN"/>
            </choice>
            <ref name="BooleanVariable"/>
            <ref name="Boolean"/>
        </choice>
    </define>
    <define name="SourceLocators">
        <optional>
            <attribute name="ColNo">
                <data type="integer"/>
            </attribute>
        </optional>
        <optional>
            <attribute name="LineNo">
                <data type="integer"/>
            </attribute>
        </optional>
        <optional>
            <attribute name="FileName">
                <data type="string"/>
            </attribute>
        </optional>
    </define>
    <define name="LibraryCall">
        <choice>
            <notAllowed/>
            <element name="LibraryCall">
                <ref name="anonymous1"/>
                <element name="Library">
                    <ref name="NCName"/>
                </element>
                <zeroOrMore>
                    <ref name="Alias"/>
                </zeroOrMore>
            </element>
        </choice>
    </define>
    <define name="EQInternal">
        <choice>
            <notAllowed/>
            <element name="EQInternal">
                <ref name="EqualityOperator"/>
            </element>
        </choice>
    </define>
    <define name="NodeFailure2">
        <choice>
            <notAllowed/>
            <element name="NodeFailure">
                <optional>
                    <attribute name="value">
                        <choice>
                            <value type="NMTOKEN">PRE_CONDITION_FAILED</value>
                            <value type="NMTOKEN">EXITED</value>
                            <value type="NMTOKEN">INVARIANT_CONDITION_FAILED</value>
                            <value type="NMTOKEN">PARENT_FAILED</value>
                            <value type="NMTOKEN">PARENT_EXITED</value>
                            <value type="NMTOKEN">POST_CONDITION_FAILED</value>
                        </choice>
                    </attribute>
                </optional>
            </element>
        </choice>
    </define>
    <define name="EQBoolean">
        <choice>
            <notAllowed/>
            <element name="EQBoolean">
                <ref name="EqualityOperator"/>
            </element>
        </choice>
    </define>
    <define name="GE">
        <choice>
            <notAllowed/>
            <element name="GE">
                <ref name="BinaryNumericOp"/>
            </element>
        </choice>
    </define>
    <define name="MOD">
        <choice>
            <notAllowed/>
            <element name="MOD">
                <ref name="BinaryNumericOp"/>
            </element>
        </choice>
    </define>
    <define name="anonymous1">
        <ref name="SourceLocators"/>
        <optional>
            <attribute name="epx">
                <data type="NMTOKEN"/>
            </attribute>
        </optional>
        <attribute name="NodeId">
            <data type="NMTOKEN"/>
        </attribute>
        <optional>
            <attribute name="Priority">
                <data type="nonNegativeInteger"/>
            </attribute>
        </optional>
        <optional>
            <choice>
                <notAllowed/>
                <element name="Comment">
                    <data type="string"/>
                </element>
            </choice>
        </optional>
        <optional>
            <ref name="Conditions"/>
            <optional>
                <ref name="Conditions"/>
                <optional>
                    <ref name="Conditions"/>
                    <optional>
                        <ref name="Conditions"/>
                        <optional>
                            <ref name="Conditions"/>
                            <optional>
                                <ref name="Conditions"/>
                                <optional>
                                    <ref name="Conditions"/>
                                    <optional>
                                    <ref name="Conditions"/>
                                    </optional>
                                </optional>
                            </optional>
                        </optional>
                    </optional>
                </optional>
            </optional>
        </optional>
        <zeroOrMore>
            <ref name="Interface"/>
        </zeroOrMore>
        <zeroOrMore>
            <choice>
                <ref name="DeclareVariable"/>
                <ref name="DeclareArray"/>
                <ref name="DeclareMutex"/>
            </choice>
        </zeroOrMore>
        <optional>
            <ref name="UsingMutex"/>
        </optional>
    </define>
    <define name="NodeStateVariable">
        <choice>
            <notAllowed/>
            <element name="NodeStateVariable">
                <ref name="NodeReference"/>
            </element>
        </choice>
    </define>
    <define name="Alias">
        <choice>
            <notAllowed/>
            <element name="Alias">
                <ref name="SourceLocators"/>
                <attribute name="NodeParameter">
                    <data type="NCName"/>
                </attribute>
                <ref name="Expression"/>
            </element>
        </choice>
    </define>
    <define name="NodeRef">
        <choice>
            <notAllowed/>
            <element name="NodeRef">
                <optional>
                    <attribute name="dir">
                        <choice>
                            <value type="NMTOKEN">parent</value>
                            <value type="NMTOKEN">sibling</value>
                            <value type="NMTOKEN">self</value>
                            <value type="NMTOKEN">child</value>
                        </choice>
                    </attribute>
                </optional>
                <choice>
                    <data type="NCName"/>
                    <value type="string"></value>
                </choice>
            </element>
        </choice>
    </define>
    <define name="StateDeclaration">
        <choice>
            <notAllowed/>
            <element name="StateDeclaration">
                <ref name="SourceLocators"/>
                <optional>
                    <attribute name="MaxSize">
                        <data type="nonNegativeInteger"/>
                    </attribute>
                </optional>
                <attribute name="Type">
                    <choice>
                        <value type="NMTOKEN">Integer</value>
                        <value type="NMTOKEN">Array</value>
                        <value type="NMTOKEN">StringArray</value>
                        <value type="NMTOKEN">Real</value>
                        <value type="NMTOKEN">RealArray</value>
                        <value type="NMTOKEN">String</value>
                        <value type="NMTOKEN">Boolean</value>
                        <value type="NMTOKEN">Any</value>
                        <value type="NMTOKEN">IntegerArray</value>
                        <value type="NMTOKEN">BooleanArray</value>
                    </choice>
                </attribute>
                <attribute name="Name">
                    <data type="NCName"/>
                </attribute>
                <optional>
                    <ref name="ParameterSpec"/>
                </optional>
            </element>
        </choice>
    </define>
    <define name="ALL_KNOWN">
        <choice>
            <notAllowed/>
            <element name="ALL_KNOWN">
                <ref name="SourceLocators"/>
                <ref name="GeneralizedArrayExpression"/>
            </element>
        </choice>
    </define>
    <define name="NodeFailureVariable">
        <choice>
            <notAllowed/>
            <element name="NodeFailureVariable">
                <ref name="NodeReference"/>
            </element>
        </choice>
    </define>
    <define name="NodeCommandHandleValue">
        <choice>
            <notAllowed/>
            <element name="NodeCommandHandleValue">
                <choice>
                    <value type="NMTOKEN">COMMAND_DENIED</value>
                    <value type="NMTOKEN">COMMAND_ABORTED</value>
                    <value type="NMTOKEN">COMMAND_ABORT_FAILED</value>
                    <value type="NMTOKEN">COMMAND_SUCCESS</value>
                    <value type="NMTOKEN">COMMAND_RCVD_BY_SYSTEM</value>
                    <value type="NMTOKEN">COMMAND_SENT_TO_SYSTEM</value>
                    <value type="NMTOKEN">COMMAND_ACCEPTED</value>
                    <value type="NMTOKEN">COMMAND_FAILED</value>
                </choice>
            </element>
        </choice>
    </define>
    <define name="Assignment">
        <choice>
            <notAllowed/>
            <element name="Assignment">
                <ref name="anonymous1"/>
                <ref name="DeclaredVariable"/>
                <ref name="Expression"/>
            </element>
        </choice>
    </define>
    <define name="ArrayElement">
        <choice>
            <notAllowed/>
            <element name="ArrayElement">
                <ref name="SourceLocators"/>
                <ref name="GeneralizedArrayExpression"/>
                <ref name="GeneralizedNumericExpression"/>
            </element>
        </choice>
    </define>
    <define name="ADD">
        <choice>
            <notAllowed/>
            <element name="ADD">
                <ref name="NaryNumericOp"/>
            </element>
        </choice>
    </define>
    <define name="StringExpression">
        <choice>
            <ref name="StringVariable"/>
            <ref name="String"/>
            <ref name="Concat"/>
        </choice>
    </define>
    <define name="LookupNow">
        <choice>
            <notAllowed/>
            <element name="LookupNow">
                <ref name="SourceLocators"/>
                <ref name="Name"/>
                <zeroOrMore>
                    <ref name="Expression"/>
                </zeroOrMore>
            </element>
        </choice>
    </define>
    <define name="Expression">
        <choice>
            <ref name="BooleanExpression"/>
            <ref name="NumericExpression"/>
            <ref name="StringExpression"/>
            <ref name="ArrayExpression"/>
            <ref name="LookupGroup"/>
            <ref name="ArrayElement"/>
        </choice>
    </define>
    <define name="ArrayExpression">
        <choice>
            <ref name="Array"/>
            <ref name="ArrayVariable"/>
        </choice>
    </define>
    <define name="REAL_TO_INT">
        <choice>
            <notAllowed/>
            <element name="REAL_TO_INT">
                <ref name="UnaryNumericOp"/>
            </element>
        </choice>
    </define>
    <define name="UsingMutex">
        <choice>
            <notAllowed/>
            <element name="UsingMutex">
                <ref name="SourceLocators"/>
                <oneOrMore>
                    <element name="Name">
                        <ref name="SourceLocators"/>
                        <data type="NCName"/>
                    </element>
                </oneOrMore>
            </element>
        </choice>
    </define>
    <define name="Action">
        <choice>
            <ref name="EmptyNode"/>
            <ref name="Assignment"/>
            <ref name="CommandNode"/>
            <ref name="LibraryCall"/>
            <ref name="ListNode"/>
            <ref name="UpdateNode"/>
        </choice>
    </define>
    <define name="ROUND">
        <choice>
            <notAllowed/>
            <element name="ROUND">
                <ref name="UnaryNumericOp"/>
            </element>
        </choice>
    </define>
    <define name="String">
        <choice>
            <notAllowed/>
            <element name="String">
                <data type="string"/>
            </element>
        </choice>
    </define>
    <define name="NodeOutcomeVariable">
        <choice>
            <notAllowed/>
            <element name="NodeOutcomeVariable">
                <ref name="NodeReference"/>
            </element>
        </choice>
    </define>
    <define name="EQNumeric">
        <choice>
            <notAllowed/>
            <element name="EQNumeric">
                <ref name="EqualityOperator"/>
            </element>
        </choice>
    </define>
    <define name="Pair">
        <choice>
            <notAllowed/>
            <element name="Pair">
                <attribute name="Name">
                    <data type="NCName"/>
                </attribute>
                <ref name="Expression"/>
            </element>
        </choice>
    </define>
    <define name="BooleanVariable">
        <choice>
            <notAllowed/>
            <element name="BooleanVariable">
                <ref name="VariableReferenceType"/>
            </element>
        </choice>
    </define>
</grammar>
