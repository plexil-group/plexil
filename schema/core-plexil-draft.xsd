<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE schema PUBLIC "-//W3C//DTD XMLSCHEMA 200102//EN" "http://www.w3.org/2001/XMLSchema.dtd" >

<!--
* Copyright (c) 2006-2016, Universities Space Research Association (USRA).
*  All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*     * Redistributions of source code must retain the above copyright
*       notice, this list of conditions and the following disclaimer.
*     * Redistributions in binary form must reproduce the above copyright
*       notice, this list of conditions and the following disclaimer in the
*       documentation and/or other materials provided with the distribution.
*     * Neither the name of the Universities Space Research Association nor the
*       names of its contributors may be used to endorse or promote products
*       derived from this software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY USRA ``AS IS'' AND ANY EXPRESS OR IMPLIED
* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
* MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
* DISCLAIMED. IN NO EVENT SHALL USRA BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
* BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
* OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
* TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
* USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<!-- Schema for extensions to Core PLEXIL that are not yet implemented 
     (i.e. this schema is not supported by the Plexil Executive).  -->

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xml:lang="en">
  <xs:include schemaLocation='core-plexil.xsd' />

  <xs:redefine id="core-plexil-draft" schemaLocation= 'core-plexil.xsd'>

  <!-- This adds Duration as a new kind of numeric expression.  Clearly this is
       very simple and rather liberal way to support durations, but affords a
       simple schema change.  Note that a Duration is in essence a numeric
       expression: it reduces to a real number (seconds). -->

    <xs:simpleType name="TypeValues">
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="Integer"/>
        <xs:enumeration value="Real"/>
        <xs:enumeration value="Boolean"/>
        <xs:enumeration value="String"/>
        <xs:enumeration value="Array"/>
        <xs:enumeration value="Duration"/>
      </xs:restriction>
    </xs:simpleType>

    <xs:group name="NumericExpression">
      <xs:choice>
        <xs:element ref="ADD"/>
        <xs:element ref="SUB"/>
        <xs:element ref="MUL"/>
        <xs:element ref="DIV"/>
        <xs:element ref="SQRT"/>
        <xs:element ref="ABS"/>
        <xs:element ref="IntegerVariable"/>
        <xs:element ref="RealVariable"/>
        <xs:element ref="IntegerValue"/>
        <xs:element ref="RealValue"/>
        <xs:group ref="LookupGroup"/>
        <!-- only for lookups that return ONE value -->
        <xs:element ref="NodeTimepointValue"/>
        <!-- read operations for arrays-->
        <xs:element name="ArraySize" type="xs:NCName"/>
        <xs:element name="ArrayMaxSize" type="xs:NCName"/>
        <xs:element ref="ArrayElement"/>
        <xs:element ref="Duration"/>
      </xs:choice>
    </xs:group>

  </xs:redefine>

  <!-- Date, Time, Duration (based on ISO 8601 -->
  <!-- Note that only Duration is incorporated into Core Plexil for now. -->

   <xs:element name="Date">  <!-- Gregorian calendar -->
     <xs:complexType>
       <xs:all>
         <xs:element name="Year" type="xs:integer"/>
         <xs:element name="Month" type="xs:integer"/> <!-- [1,12] -->
         <xs:element name="Day" type="xs:integer"/> <!-- [1,31] -->
       </xs:all>
     </xs:complexType>
   </xs:element>

   <xs:element name="Time">  <!--24-hour clock -->
     <xs:complexType>
       <xs:all>
         <!-- [0,24], with 24 used only to indicate midnight at the end
              of a calendar day -->
         <xs:element name="Hour" type="xs:integer"/>

         <!-- [0,59] -->
         <xs:element name="Minute" type="xs:integer"/> 

         <!-- [0,60], with 60 only for leap second -->
         <xs:element name="Second" type="xs:float"/> 

         <!-- Offset in hours (+/-) from UTC; default is 0 -->
         <xs:element name="Offset" type="xs:integer"/> 
       </xs:all>
     </xs:complexType>
   </xs:element>

   <xs:element name="TimePoint"> 
     <xs:complexType>
       <xs:all>
         <xs:element ref="Date"/>
         <xs:element ref="Time"/> 
       </xs:all>
     </xs:complexType>
   </xs:element>

   <xs:element name="Duration">
     <xs:complexType>
       <xs:all>
         <xs:element name="Days" type="xs:integer"/>
         <xs:element name="Hours" type="xs:integer"/>
         <xs:element name="Minutes" type="xs:integer"/>
         <!-- [0, 60) up to microsecond precision -->
         <xs:element name="Seconds" type="xs:float"/>
       </xs:all>
     </xs:complexType>
   </xs:element>

   <xs:element name="TimeInterval">
     <!--
         Valid time interval is one of the following:
          - start/end
          - start/duration
          - duration/end
          - duration only
     -->
     <xs:complexType>
       <xs:all>
         <xs:element name="Start">
           <xs:complexType>
             <xs:all>
               <xs:element ref="TimePoint"/>
             </xs:all>
           </xs:complexType>
         </xs:element>
         <xs:element name="End">
           <xs:complexType>
             <xs:all>
               <xs:element ref="TimePoint"/>
             </xs:all>
           </xs:complexType>
         </xs:element>
         <xs:element name="Duration">
           <xs:complexType>
             <xs:all>
               <xs:element ref="Duration"/>
             </xs:all>
           </xs:complexType>
         </xs:element>
       </xs:all>
     </xs:complexType>
   </xs:element> 

</xs:schema>
