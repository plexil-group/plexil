<?xml version="1.0" encoding="UTF-8"?>

<!--
* Copyright (c) 2006-2014, Universities Space Research Association (USRA).
*  All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*     * Redistributions of source code must retain the above copyright
*       notice, this list of conditions and the following disclaimer.
*     * Redistributions in binary form must reproduce the above copyright
*       notice, this list of conditions and the following disclaimer in the
*       documentation and/or other materials provided with the distribution.
*     * Neither the name of the Universities Space Research Association nor the
*       names of its contributors may be used to endorse or promote products
*       derived from this software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY USRA ``AS IS'' AND ANY EXPRESS OR IMPLIED
* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
* MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
* DISCLAIMED. IN NO EVENT SHALL USRA BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
* BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
* OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
* TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
* USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<!-- Common elements that are included in several PLEXIL schemas.
NOTE: this is an incomplete schema, as it doesn't define the "Name"
element.  It is used as an included schema only.
-->

<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xml:lang="en">
  <xsd:attribute name="FileName" type="xsd:string"/>
  <xsd:attribute name="LineNo" type="xsd:integer"/>
  <xsd:attribute name="ColNo" type="xsd:integer"/>
  <xsd:attributeGroup name="SourceLocators">
    <xsd:attribute ref="FileName"/>
    <xsd:attribute ref="LineNo"/>
    <xsd:attribute ref="ColNo"/>
  </xsd:attributeGroup>

  <!-- This is the sole root element allowed! -->
  <xsd:element name="PlexilPlan">
    <xsd:complexType>
      <xsd:sequence> 
        <xsd:element ref="GlobalDeclarations" minOccurs="0"/>
        <xsd:group ref="Action"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:group name="Action">
    <xsd:choice>
      <xsd:element ref="Node"/>
    </xsd:choice>
  </xsd:group>

  <xsd:group name="NodeReference">
    <xsd:choice>
      <xsd:element ref="NodeId"/>
      <xsd:element ref="NodeRef"/>
    </xsd:choice>
  </xsd:group>

  <xsd:complexType name="node-reference">
    <xsd:group ref= "NodeReference"/>
	<xsd:attributeGroup ref="SourceLocators"/>
  </xsd:complexType>

  <xsd:element name="NodeId" type="xsd:NCName"/>

  <xsd:element name="NodeRef">
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="NCNameOrEmpty">
          <xsd:attribute name="dir">
            <xsd:simpleType>
              <xsd:restriction base="xsd:NMTOKEN">
                <xsd:enumeration value="parent"/>
                <xsd:enumeration value="sibling"/>
                <xsd:enumeration value="child"/>
                <xsd:enumeration value="self"/>
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="GlobalDeclarations">
    <xsd:complexType>
      <xsd:choice maxOccurs="unbounded">
        <xsd:element ref="CommandDeclaration" minOccurs="0"/>
        <xsd:element ref="StateDeclaration" minOccurs="0"/>
        <xsd:element ref="LibraryNodeDeclaration" minOccurs="0"/>
        <xsd:element name="TimeScalingUnitsSubunits" type="xsd:integer" minOccurs="0"/>
      </xsd:choice>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="CommandDeclaration">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Name" type="xsd:NCName"/>
        <xsd:element ref="Return" minOccurs="0" maxOccurs="unbounded"/>
        <xsd:element ref="Parameter" minOccurs="0" maxOccurs="unbounded"/>
        <xsd:element ref="ResourceList" minOccurs="0" maxOccurs="1"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="StateDeclaration">
    <xsd:complexType>
      <xsd:sequence>      
        <xsd:element name="Name" type="xsd:NCName"/>
        <xsd:element ref="Return"/>
        <xsd:element ref="Parameter" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="LibraryNodeDeclaration">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Name" type="xsd:NCName"/>
        <xsd:element ref="Interface" minOccurs="0"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="Parameter">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Name" type="xsd:NCName" minOccurs="0" />
        <xsd:element name="Type" type="AtomicTypeValues"/>
		<!-- MaxSize indicates an array value, Type is the element type -->
        <xsd:element name="MaxSize" type="xsd:nonNegativeInteger" minOccurs="0" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="Return" nillable="true">
    <!-- KMD: not sure about the motivation for 'nillable'.  Assuming it
         is for declaring a void return explicitly. -->
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Name" type="xsd:NCName" minOccurs="0" />
        <xsd:element name="Type" type="AtomicTypeValues" />
		<!-- MaxSize indicates an array value, Type is the element type -->
        <xsd:element name="MaxSize" type="xsd:nonNegativeInteger" minOccurs="0" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <xsd:simpleType name="NCNameOrEmpty">
    <xsd:union memberTypes="xsd:NCName">
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value=""/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:union>
  </xsd:simpleType>

  <xsd:element name="Node">
    <xsd:complexType>
      <xsd:all>
        <xsd:element name="Comment" type="xsd:string" minOccurs="0"/>
        <xsd:element ref="NodeId"/>
        <xsd:element ref="StartCondition" minOccurs="0"/>
        <xsd:element ref="RepeatCondition" minOccurs="0"/>
        <xsd:element ref="PreCondition" minOccurs="0"/>
        <xsd:element ref="PostCondition" minOccurs="0"/>
        <xsd:element ref="InvariantCondition" minOccurs="0"/>
        <xsd:element ref="EndCondition" minOccurs="0"/>
        <xsd:element ref="ExitCondition" minOccurs="0"/>
        <xsd:element ref="SkipCondition" minOccurs="0"/>
        <xsd:element name="Priority" type="xsd:nonNegativeInteger" minOccurs="0"/>
        <xsd:element ref="Interface" minOccurs="0"/>
        <xsd:element ref="VariableDeclarations" minOccurs="0"/>
        <xsd:element ref="NodeBody" minOccurs="0"/>
      </xsd:all>
      <xsd:attribute name="NodeType" use="required">
        <xsd:simpleType>
          <xsd:restriction base="xsd:NMTOKEN">
            <xsd:enumeration value="NodeList"/>
            <xsd:enumeration value="Command"/>
            <xsd:enumeration value="Assignment"/>
            <xsd:enumeration value="Update"/>
            <xsd:enumeration value="Empty"/>
            <xsd:enumeration value="LibraryNodeCall"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <!-- The epx attribute indicates a node that is a translation of an
           Extended Plexil construct (i.e. macro).  Its value is the type of
           this construct, or 'aux' indicating it is an auxilliary generated
           node. -->
      <xsd:attribute name="epx" use="optional">
        <xsd:simpleType>
          <xsd:restriction base="xsd:NCName"/>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="NodeBody">
    <xsd:complexType>
      <xsd:choice>
        <xsd:element ref="NodeList"/>
        <xsd:element ref="Command"/>
        <xsd:element ref="Assignment"/>
        <xsd:element ref="Update"/>
        <xsd:element ref="LibraryNodeCall"/>
      </xsd:choice>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="NodeList">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="Action" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="StartCondition">
    <xsd:complexType>
      <xsd:group ref="BooleanExpression"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="RepeatCondition">
    <xsd:complexType>
      <xsd:group ref="BooleanExpression"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="PreCondition">
    <xsd:complexType>
      <xsd:group ref="BooleanExpression"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="PostCondition">
    <xsd:complexType>
      <xsd:group ref="BooleanExpression"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="InvariantCondition">
    <xsd:complexType>
      <xsd:group ref="BooleanExpression"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="EndCondition">
    <xsd:complexType>
      <xsd:group ref="BooleanExpression"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="ExitCondition">
    <xsd:complexType>
      <xsd:group ref="BooleanExpression"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="SkipCondition">
    <xsd:complexType>
      <xsd:group ref="BooleanExpression"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="Interface">
    <xsd:complexType>
      <xsd:all>
        <xsd:element ref="In" minOccurs="0"/>
        <xsd:element ref="InOut" minOccurs="0"/>
      </xsd:all>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="In">
    <xsd:complexType>
      <xsd:choice maxOccurs="unbounded">
        <xsd:element ref="DeclareVariable"/>
        <xsd:element ref="DeclareArray"/>
      </xsd:choice>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="InOut">
    <xsd:complexType>
      <xsd:choice maxOccurs="unbounded">
        <xsd:element ref="DeclareVariable"/>
        <xsd:element ref="DeclareArray"/>
      </xsd:choice>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>
  
  <xsd:element name="ResourceList">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="Resource" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <!-- FIXME: make these tags less verbose -->
  <xsd:element name="Resource">
    <xsd:complexType>
      <xsd:all>
        <xsd:element name="ResourceName">
          <xsd:complexType>
            <xsd:group ref="StringExpression"/>
          </xsd:complexType>
        </xsd:element>
        <xsd:element name="ResourcePriority">
          <xsd:complexType>
            <xsd:group ref="NumericExpression"/>
          </xsd:complexType>
        </xsd:element>
        <xsd:element name="ResourceLowerBound" minOccurs="0">
          <xsd:complexType>
            <xsd:group ref="NumericExpression"/>
          </xsd:complexType>
        </xsd:element>
        <xsd:element name="ResourceUpperBound" minOccurs="0">
          <xsd:complexType>
            <xsd:group ref="NumericExpression"/>
          </xsd:complexType>
        </xsd:element>
        <xsd:element name="ResourceReleaseAtTermination" minOccurs="0">
          <xsd:complexType>
            <xsd:group ref="BooleanExpression"/>
          </xsd:complexType>
        </xsd:element>
      </xsd:all>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:group name="DeclaredVariable">
    <xsd:choice>
      <xsd:element ref="IntegerVariable"/>
      <xsd:element ref="RealVariable"/>
      <xsd:element ref="BooleanVariable"/>
      <xsd:element ref="StringVariable"/>
      <xsd:element ref="ArrayVariable"/>
      <xsd:element ref="ArrayElement"/>
    </xsd:choice>
  </xsd:group>

  <!-- Note: ArrayValue is not included here because arrays
       are handled independently (and NOT supported in places
       were Value is) -->
  <xsd:group name="Value">
    <xsd:choice>
      <xsd:element ref="IntegerValue"/>
      <xsd:element ref="RealValue"/>
      <xsd:element ref="BooleanValue"/>
      <xsd:element ref="StringValue"/>
    </xsd:choice>
  </xsd:group>

  <xsd:element name="IntegerVariable" type="xsd:NCName"/>
  <xsd:element name="RealVariable" type="xsd:NCName"/>
  <xsd:element name="BooleanVariable" type="xsd:NCName"/>
  <xsd:element name="StringVariable" type="xsd:NCName"/>
  <xsd:element name="ArrayVariable" type="xsd:NCName"/>

  <xsd:element name="DeclareVariable">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Name" type="xsd:NCName" />
        <xsd:element name="Type" type="AtomicTypeValues"/>
        <xsd:element name="InitialValue" minOccurs="0">
          <xsd:complexType>
            <xsd:group ref="Value"/>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="DeclareArray">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Name" type="xsd:NCName" />
        <xsd:element name="Type" type="AtomicTypeValues"/>
        <xsd:element name="MaxSize" type="xsd:nonNegativeInteger" minOccurs="0"/>
        <xsd:element name="InitialValue" minOccurs="0">
          <xsd:complexType>
            <xsd:choice>
              <!-- these for backward compatibility -->
              <xsd:group ref="Value" maxOccurs="unbounded"/>
              <!-- preferred new style -->
              <xsd:element ref ="ArrayValue"/>
            </xsd:choice>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="VariableDeclarations">
    <xsd:complexType>
      <xsd:choice maxOccurs="unbounded">
        <xsd:element ref="DeclareVariable"/>
        <xsd:element ref="DeclareArray"/>
      </xsd:choice>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="Command">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="ResourceList" minOccurs="0" maxOccurs="1"/>
        <xsd:group ref="DeclaredVariable" minOccurs="0"/>
        <xsd:element ref="Name"/>
        <xsd:element ref="Arguments" minOccurs="0"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="Arguments">
    <xsd:complexType>
      <xsd:choice maxOccurs="unbounded">
		<xsd:group ref="BooleanExpression"/>
		<xsd:group ref="NumericExpression"/>
		<xsd:group ref="StringExpression"/>
		<xsd:group ref="ArrayExpression"/>
      </xsd:choice>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="Update">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="Pair" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="Pair">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Name" type="xsd:NCName"/>
        <xsd:choice>
          <xsd:group ref="Value"/>
          <xsd:group ref="DeclaredVariable"/>
          <xsd:element ref="LookupNow"/>
        </xsd:choice>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="LibraryNodeCall">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="NodeId"/>
        <xsd:element ref="Alias" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="Alias">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="NodeParameter" type="xsd:NCName"/>
        <xsd:choice>
          <xsd:group ref="Value"/>
          <xsd:group ref="DeclaredVariable"/>
		  <xsd:group ref="LookupGroup"/>
		  <!-- xsd:group ref="BooleanExpression"/ -->
		  <xsd:group ref="LogicalOperator"/>
		  <xsd:group ref="Equality"/>
		  <xsd:group ref="NumericComparison"/>
		  <xsd:group ref="KnownTest"/>
		  <!-- xsd:group ref="NumericExpression"/ -->
		  <xsd:group ref="ArithmeticOperator"/>
		  <xsd:element ref="NodeTimepointValue"/>
		  <xsd:element name="ArraySize" type="xsd:NCName"/>
		  <xsd:element name="ArrayMaxSize" type="xsd:NCName"/>
		  <!-- xsd:group ref="StringExpression"/ -->
		  <xsd:group ref="StringOperator"/>
        </xsd:choice>
      </xsd:sequence>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="IntegerValue">
    <xsd:simpleType>
      <xsd:restriction base="xsd:integer">
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>

  <xsd:element name="RealValue">
    <xsd:simpleType>
      <xsd:restriction base="xsd:double">
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>

  <xsd:element name="BooleanValue">
    <xsd:simpleType>
      <xsd:restriction base="xsd:boolean">
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>

  <xsd:element name="StringValue">
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>

  <xsd:element name="ArrayValue">
    <xsd:complexType>
      <xsd:choice>
        <xsd:element ref="IntegerValue" maxOccurs="unbounded"/>
        <xsd:element ref="RealValue" maxOccurs="unbounded"/>
        <xsd:element ref="BooleanValue" maxOccurs="unbounded"/>
        <xsd:element ref="StringValue" maxOccurs="unbounded"/>
      </xsd:choice>
      <xsd:attribute name="Type" type="AtomicTypeValues" use="required"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:group name="ArrayExpression">
    <xsd:choice>
      <xsd:element ref="ArrayValue"/>
      <xsd:element ref="ArrayVariable"/>
      <xsd:group ref="LookupGroup"/>
      <!-- more to come -->
    </xsd:choice>
  </xsd:group>

  <xsd:element name="BooleanRHS">
    <xsd:complexType>
      <xsd:group ref="BooleanExpression"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="NumericRHS">
    <xsd:complexType>
      <xsd:group ref="NumericExpression"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="StringRHS">
    <xsd:complexType>
      <xsd:group ref="StringExpression"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="LookupRHS">
    <xsd:complexType>
      <xsd:group ref="LookupGroup"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="ArrayRHS">
    <xsd:complexType>
      <xsd:group ref="ArrayExpression"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:complexType name="assignment">
    <xsd:sequence>
      <xsd:group ref="DeclaredVariable"/>
      <xsd:choice>
        <xsd:element ref="BooleanRHS"/>
        <xsd:element ref="NumericRHS"/>
        <xsd:element ref="StringRHS"/>
        <xsd:element ref="LookupRHS"/>
        <xsd:element ref="ArrayRHS"/>
      </xsd:choice>
    </xsd:sequence>
    <xsd:attributeGroup ref="SourceLocators"/>
  </xsd:complexType>

  <xsd:element name="Assignment" type= "assignment"/>

  <xsd:group name="BooleanExpression">
    <xsd:choice>
	  <xsd:group ref="LogicalOperator"/>
	  <xsd:group ref="Equality"/>
	  <xsd:group ref="NumericComparison"/>
      <xsd:group ref="LookupGroup"/>
      <xsd:group ref="KnownTest"/>
      <xsd:element ref="BooleanVariable"/>
      <xsd:element ref="BooleanValue"/>
      <xsd:element ref="ArrayElement"/>
    </xsd:choice>
  </xsd:group>

  <xsd:group name="LogicalOperator">
	<xsd:choice>
      <xsd:element ref="OR"/>
      <xsd:element ref="XOR"/>
      <xsd:element ref="AND"/>
      <xsd:element ref="NOT"/>
	</xsd:choice>
  </xsd:group>

  <xsd:group name="Equality">
	<xsd:choice>
      <xsd:element ref="EQBoolean"/>
      <xsd:element ref="EQNumeric"/>
      <xsd:element ref="EQInternal"/>
      <xsd:element ref="EQString"/>
      <xsd:element ref="NEBoolean"/>
      <xsd:element ref="NENumeric"/>
      <xsd:element ref="NEInternal"/>
      <xsd:element ref="NEString"/>
	</xsd:choice>
  </xsd:group>

  <xsd:group name="NumericComparison">
	<xsd:choice>
      <xsd:element ref="GT"/>
      <xsd:element ref="GE"/>
      <xsd:element ref="LT"/>
      <xsd:element ref="LE"/>
	</xsd:choice>
  </xsd:group>

  <xsd:element name="IsKnown">
    <xsd:complexType>
      <xsd:choice>
        <xsd:group ref="DeclaredVariable"/>
        <xsd:group ref="LookupGroup"/>
        <xsd:element ref="NodeStateVariable"/>
        <xsd:element ref="NodeOutcomeVariable"/>
        <xsd:element ref="NodeTimepointValue"/>
      </xsd:choice>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="ALL_KNOWN">
    <xsd:complexType>
      <xsd:group ref="ArrayExpression"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="ANY_KNOWN">
    <xsd:complexType>
      <xsd:group ref="ArrayExpression"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:group name="KnownTest">
    <xsd:choice>
      <xsd:element ref="IsKnown"/>
      <xsd:element ref="ALL_KNOWN"/>
      <xsd:element ref="ANY_KNOWN"/>
    </xsd:choice>
  </xsd:group>

  <xsd:element name="OR">
    <xsd:complexType>
      <xsd:group ref="BooleanExpression" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="XOR">
    <xsd:complexType>
      <xsd:group ref="BooleanExpression" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="AND">
    <xsd:complexType>
      <xsd:group ref="BooleanExpression" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="NOT">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="BooleanExpression"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="GT">
    <xsd:complexType>
      <xsd:group ref="NumericExpression" minOccurs="2" maxOccurs="2"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="GE">
    <xsd:complexType>
      <xsd:group ref="NumericExpression" minOccurs="2" maxOccurs="2"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="LT">
    <xsd:complexType>
      <xsd:group ref="NumericExpression" minOccurs="2" maxOccurs="2"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="LE">
    <xsd:complexType>
      <xsd:group ref="NumericExpression" minOccurs="2" maxOccurs="2"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="EQBoolean">
    <xsd:complexType>
      <xsd:group ref="BooleanExpression" minOccurs="2" maxOccurs="2"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="EQNumeric">
    <xsd:complexType>
      <xsd:group ref="NumericExpression" minOccurs="2" maxOccurs="2"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="EQInternal">
    <xsd:complexType>
      <xsd:choice>
        <xsd:group ref="NodeState" minOccurs="2" maxOccurs="2"/>
        <xsd:group ref="NodeOutcome" minOccurs="2" maxOccurs="2"/>
        <xsd:group ref="NodeFailure" minOccurs="2" maxOccurs="2"/>
        <xsd:group ref="NodeCommandHandle" minOccurs="2" maxOccurs="2"/>
      </xsd:choice>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="EQString">
    <xsd:complexType>
      <xsd:group ref="StringExpression" minOccurs="2" maxOccurs="2"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="NEBoolean">
    <xsd:complexType>
      <xsd:group ref="BooleanExpression" minOccurs="2" maxOccurs="2"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="NENumeric">
    <xsd:complexType>
      <xsd:group ref="NumericExpression" minOccurs="2" maxOccurs="2"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="NEInternal">
    <xsd:complexType>
      <xsd:choice>
        <xsd:group ref="NodeState" minOccurs="2" maxOccurs="2"/>
        <xsd:group ref="NodeOutcome" minOccurs="2" maxOccurs="2"/>
        <xsd:group ref="NodeFailure" minOccurs="2" maxOccurs="2"/>
        <xsd:group ref="NodeCommandHandle" minOccurs="2" maxOccurs="2"/>
      </xsd:choice>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="NEString">
    <xsd:complexType>
      <xsd:group ref="StringExpression" minOccurs="2" maxOccurs="2"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="NodeCommandHandleVariable" type="node-reference"/>

  <xsd:element name="NodeCommandHandleValue">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="COMMAND_SENT_TO_SYSTEM"/>
        <xsd:enumeration value="COMMAND_ACCEPTED"/>
        <xsd:enumeration value="COMMAND_DENIED"/>
        <xsd:enumeration value="COMMAND_RCVD_BY_SYSTEM"/>
        <xsd:enumeration value="COMMAND_FAILED"/>
        <xsd:enumeration value="COMMAND_SUCCESS"/>
        <xsd:enumeration value="COMMAND_ABORTED"/>
        <xsd:enumeration value="COMMAND_ABORT_FAILED"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>

  <xsd:group name="NodeCommandHandle">
    <xsd:choice>
      <xsd:element ref="NodeCommandHandleVariable"/>
      <xsd:element ref="NodeCommandHandleValue"/>
    </xsd:choice>
  </xsd:group>

  <xsd:group name="NodeState">
    <xsd:choice>
      <xsd:element ref="NodeStateVariable"/>
      <xsd:element ref="NodeStateValue"/>
    </xsd:choice>
  </xsd:group>

  <xsd:element name="NodeStateVariable" type="node-reference"/>

  <xsd:element name="NodeStateValue">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="WAITING"/>
        <xsd:enumeration value="EXECUTING"/>
        <xsd:enumeration value="FINISHING"/>
        <xsd:enumeration value="FAILING"/>
        <xsd:enumeration value="ITERATION_ENDED"/>
        <xsd:enumeration value="FINISHED"/>
        <xsd:enumeration value="INACTIVE"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>

  <xsd:group name="NodeOutcome">
    <xsd:choice>
      <xsd:element ref="NodeOutcomeVariable"/>
      <xsd:element ref="NodeOutcomeValue"/>
    </xsd:choice>
  </xsd:group>

  <xsd:element name="NodeOutcomeVariable" type="node-reference"/>

  <xsd:element name="NodeOutcomeValue">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="SUCCESS"/>
        <xsd:enumeration value="FAILURE"/>
        <xsd:enumeration value="SKIPPED"/>
        <xsd:enumeration value="INTERRUPTED"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>

  <xsd:group name="NodeFailure">
    <xsd:choice>
      <xsd:element ref="NodeFailureVariable"/>
      <xsd:element ref="NodeFailureValue"/>
    </xsd:choice>
  </xsd:group>

  <xsd:element name="NodeFailureVariable" type= "node-reference"/>

  <xsd:element name="NodeFailureValue">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="PRE_CONDITION_FAILED"/>
        <xsd:enumeration value="POST_CONDITION_FAILED"/>
        <xsd:enumeration value="INVARIANT_CONDITION_FAILED"/>
        <xsd:enumeration value="PARENT_FAILED"/>
        <xsd:enumeration value="PARENT_EXITED"/>
        <xsd:enumeration value="EXITED"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>

  <xsd:element name="NodeTimepointValue">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref= "NodeReference"/>
        <xsd:element ref="NodeStateValue"/>
        <xsd:element ref="Timepoint"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="Timepoint">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="START"/>
        <xsd:enumeration value="END"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>

  <xsd:group name="StringExpression">
    <xsd:choice>
      <xsd:element ref="StringVariable"/>
      <xsd:element ref="StringValue"/>
      <xsd:group ref="StringOperator"/>
      <xsd:group ref="LookupGroup"/>
      <xsd:element ref="ArrayElement"/>
    </xsd:choice>
  </xsd:group>

  <xsd:group name="StringOperator">
	<xsd:choice>
      <xsd:element ref="Concat"/>
	</xsd:choice>
  </xsd:group>

  <xsd:element name="Concat">
    <xsd:complexType>
      <xsd:group ref="StringExpression" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:group name="NumericExpression">
    <xsd:choice>
	  <xsd:group ref="ArithmeticOperator"/>
      <xsd:element ref="IntegerVariable"/>
      <xsd:element ref="RealVariable"/>
      <xsd:element ref="IntegerValue"/>
      <xsd:element ref="RealValue"/>
      <xsd:group ref="LookupGroup"/>
      <xsd:element ref="NodeTimepointValue"/>
      <!-- read operations for arrays-->
      <xsd:element name="ArraySize" type="xsd:NCName"/>
      <xsd:element name="ArrayMaxSize" type="xsd:NCName"/>
      <xsd:element ref="ArrayElement"/>
    </xsd:choice>
  </xsd:group>

  <xsd:group name="ArithmeticOperator">
    <xsd:choice>
      <xsd:element ref="ADD"/>
      <xsd:element ref="SUB"/>
      <xsd:element ref="MUL"/>
      <xsd:element ref="DIV"/>
      <xsd:element ref="MOD"/>
      <xsd:element ref="MAX"/>
      <xsd:element ref="MIN"/>
      <xsd:element ref="SQRT"/>
      <xsd:element ref="ABS"/>
      <xsd:element ref="CEIL"/>
      <xsd:element ref="FLOOR"/>
      <xsd:element ref="ROUND"/>
      <xsd:element ref="TRUNC"/>
      <xsd:element ref="REAL_TO_INT"/>
      <xsd:element ref="STRLEN"/>
    </xsd:choice>
  </xsd:group>

  <xsd:element name="ArrayElement">
    <xsd:complexType>
      <xsd:sequence>
        <!-- FIXME: generalize to array expression -->
        <xsd:element name="Name" type="xsd:NCName"/>
        <xsd:element name="Index">
          <xsd:complexType>
            <xsd:group ref="NumericExpression"/>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="ADD">
    <xsd:complexType>
      <xsd:group ref="NumericExpression" minOccurs="2" maxOccurs="unbounded"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="SUB">
    <xsd:complexType>
      <xsd:group ref="NumericExpression" minOccurs="2" maxOccurs="unbounded"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="MUL">
    <xsd:complexType>
      <xsd:group ref="NumericExpression" minOccurs="2" maxOccurs="unbounded"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="DIV">
    <xsd:complexType>
      <xsd:group ref="NumericExpression" minOccurs="2" maxOccurs="2"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="MOD">
    <xsd:complexType>
      <xsd:group ref="NumericExpression" minOccurs="2" maxOccurs="2"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="MAX">
    <xsd:complexType>
      <xsd:group ref="NumericExpression" minOccurs="2" maxOccurs="2"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="MIN">
    <xsd:complexType>
      <xsd:group ref="NumericExpression" minOccurs="2" maxOccurs="2"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="SQRT">
    <xsd:complexType>
      <xsd:group ref="NumericExpression"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="ABS">
    <xsd:complexType>
      <xsd:group ref="NumericExpression"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="CEIL">
    <xsd:complexType>
      <xsd:group ref="NumericExpression"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="FLOOR">
    <xsd:complexType>
      <xsd:group ref="NumericExpression"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="ROUND">
    <xsd:complexType>
      <xsd:group ref="NumericExpression"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="TRUNC">
    <xsd:complexType>
      <xsd:group ref="NumericExpression"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="REAL_TO_INT">
    <xsd:complexType>
      <xsd:group ref="NumericExpression"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="STRLEN">
    <xsd:complexType>
      <xsd:group ref="StringExpression"/>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:group name="LookupGroup">
    <xsd:choice>
      <xsd:element ref="LookupOnChange"/>
      <xsd:element ref="LookupNow"/>
    </xsd:choice>
  </xsd:group>

  <xsd:element name="LookupOnChange">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="Name"/>
        <xsd:element ref="Tolerance" minOccurs="0"/>
        <xsd:element ref="Arguments" minOccurs="0"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="LookupNow">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="Name"/>
        <xsd:element ref="Arguments" minOccurs="0"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="SourceLocators"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="Tolerance">
    <xsd:complexType>
      <xsd:group ref="ToleranceGroup"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:group name="ToleranceGroup">
    <xsd:choice>
      <xsd:element ref="IntegerValue"/>
      <xsd:element ref="IntegerVariable"/>
      <xsd:element ref="RealValue"/>
      <xsd:element ref="RealVariable"/>
    </xsd:choice>
  </xsd:group>

</xsd:schema>
