Running UE from /home/bvk/Projects/UE/universal_exec
  Plan:      plans/simple-functioncall.xml
  Script:    scripts/simple-functioncall-script.xml
  Libraries: 

[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:addPlan]Added plan: 
SimpleFunction{
 State: (id_234[au](INACTIVE): state(INACTIVE)) (inf)
}

[PlexilExec:handleConditionsChanged]Node SimpleFunction had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleFunction' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleFunction' on the state change queue in position 1
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 1
[PlexilExec:step][1:0] State change queue: SimpleFunction 
[PlexilExec:lock]Locking node SimpleFunction
[PlexilExec:step][1:0:0] Transitioning node SimpleFunction
[PlexilExec:handleConditionsChanged]Node SimpleFunction had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleFunction' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleFunction' on the state change queue in position 2
[PlexilExec:unlock]Unlocking node SimpleFunction
[PlexilExec:step][1:1] State change queue: SimpleFunction 
[PlexilExec:lock]Locking node SimpleFunction
[PlexilExec:step][1:1:0] Transitioning node SimpleFunction
[PlexilExec:handleNeedsExecution]Storing action for node 'SimpleFunction' of type 'FunctionCall' to be executed.
[PlexilExec:handleConditionsChanged]Node SimpleFunction had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'SimpleFunction' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node SimpleFunction
[Test:testOutput]Executing testFunction(1.1, 2.1) into (id_279[au](0): int) with ack (id_282[au](UNKNOWN): boolean)
[PlexilExec:cycle]==>End cycle 1
[PlexilExec:printPlan]
SimpleFunction{
 State: (id_234[au](EXECUTING): state(EXECUTING)) (0)
 SkipCondition: (id_251[au](0): boolean)
 StartCondition: (id_253[au](1): boolean)
 EndCondition: (id_283[au](UNKNOWN): ((id_282[au](UNKNOWN): boolean) && (id_255[au](1): boolean))
 InvariantCondition: (id_257[au](1): boolean)
 PreCondition: (id_259[au](1): boolean)
 PostCondition: (id_261[au](1): boolean)
 RepeatCondition: (id_263[au](0): boolean)
 AncestorInvariantCondition: (id_265[au](1): boolean)
 AncestorEndCondition: (id_267[au](0): boolean)
 ParentExecutingCondition: (id_269[au](1): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_271[au](UNKNOWN): boolean)
 AbortCompleteCondition: (id_273[au](UNKNOWN): boolean)
 ParentWaitingCondition: (id_275[au](0): boolean)
 ParentFinishedCondition: (id_277[au](0): boolean)
 retTestFunction: (id_279[au](0): int)
 arg1: (id_280[au](1.1): real)
 arg2: (id_281[au](2.1): real)
}

[Test:testOutput]Sending functionCall result testFunction(1.1, 2.1) = 2
[Test:testOutput]Sending function call ACK testFunction(1.1, 2.1) = 2
[PlexilExec:handleConditionsChanged]Node SimpleFunction had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleFunction' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleFunction' on the state change queue in position 3
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 2
[PlexilExec:step][2:0] State change queue: SimpleFunction 
[PlexilExec:lock]Locking node SimpleFunction
[PlexilExec:step][2:0:0] Transitioning node SimpleFunction
[PlexilExec:handleConditionsChanged]Node SimpleFunction had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleFunction' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleFunction' on the state change queue in position 4
[PlexilExec:unlock]Unlocking node SimpleFunction
[PlexilExec:step][2:1] State change queue: SimpleFunction 
[PlexilExec:lock]Locking node SimpleFunction
[PlexilExec:step][2:1:0] Transitioning node SimpleFunction
[PlexilExec:handleConditionsChanged]Node SimpleFunction had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'SimpleFunction' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node SimpleFunction
[PlexilExec:cycle]==>End cycle 2
[PlexilExec:printPlan]
SimpleFunction{
 State: (id_234[au](FINISHED): state(FINISHED)) (0)
 Outcome: (id_235[au](SUCCESS):  outcome)
 retTestFunction: (id_279[iu](2): int)
 arg1: (id_280[iu](1.1): real)
 arg2: (id_281[iu](2.1): real)
}

