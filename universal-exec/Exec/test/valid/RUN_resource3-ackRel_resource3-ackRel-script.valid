[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:addPlan]Added plan: 
SimpleTask{
 State: (id_278[au](INACTIVE): state(INACTIVE)) (inf)
  C1{
   State: (id_328[au](INACTIVE): state(INACTIVE)) (inf)
  }
  C2{
   State: (id_380[au](INACTIVE): state(INACTIVE)) (inf)
  }
  C3{
   State: (id_431[au](INACTIVE): state(INACTIVE)) (inf)
  }
}

[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 1
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 1
[PlexilExec:step][1:0] State change queue: SimpleTask 
[PlexilExec:lock]Locking node SimpleTask
[PlexilExec:step][1:0:0] Transitioning node SimpleTask
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 2
[PlexilExec:unlock]Unlocking node SimpleTask
[PlexilExec:step][1:1] State change queue: SimpleTask 
[PlexilExec:lock]Locking node SimpleTask
[PlexilExec:step][1:1:0] Transitioning node SimpleTask
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C1' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C1' on the state change queue in position 3
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 4
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C3' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C3' on the state change queue in position 5
[PlexilExec:handleNeedsExecution]Storing action for node 'SimpleTask' of type 'NodeList' to be executed.
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'SimpleTask' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node SimpleTask
[PlexilExec:step][1:2] State change queue: C1 C2 C3 
[PlexilExec:lock]Locking node C1
[PlexilExec:lock]Locking node C2
[PlexilExec:lock]Locking node C3
[PlexilExec:step][1:2:0] Transitioning node C1
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C1' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C1' on the state change queue in position 6
[PlexilExec:step][1:2:1] Transitioning node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 7
[PlexilExec:step][1:2:2] Transitioning node C3
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C3' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C3' on the state change queue in position 8
[PlexilExec:unlock]Unlocking node C1
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:unlock]Unlocking node C3
[PlexilExec:step][1:3] State change queue: C1 C2 C3 
[PlexilExec:lock]Locking node C1
[PlexilExec:lock]Locking node C2
[PlexilExec:lock]Locking node C3
[PlexilExec:step][1:3:0] Transitioning node C1
[PlexilExec:handleNeedsExecution]Storing action for node 'C1' of type 'Command' to be executed.
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C1' was previously eligible to transition but isn't now.
[PlexilExec:step][1:3:1] Transitioning node C2
[PlexilExec:handleNeedsExecution]Storing action for node 'C2' of type 'Command' to be executed.
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C2' was previously eligible to transition but isn't now.
[PlexilExec:step][1:3:2] Transitioning node C3
[PlexilExec:handleNeedsExecution]Storing action for node 'C3' of type 'Command' to be executed.
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C3' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node C1
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:unlock]Unlocking node C3
[Test:testOutput]Executing c1(20) into (id_376[au](-1): int) with ack (id_516[au](UNKNOWN): string)
[Test:testOutput]Permission to execute c2 has been denied by the resource arbiter.
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 9
[Test:testOutput]Executing c3() into noId with ack (id_604[au](UNKNOWN): string)
[PlexilExec:cycle]==>End cycle 1
[PlexilExec:printPlan]
SimpleTask{
 State: (id_278[au](EXECUTING): state(EXECUTING)) (0)
 SkipCondition: (id_296[au](0): boolean)
 StartCondition: (id_298[au](1): boolean)
 EndCondition: (id_483[au](0): childrenFinished(0:3))
 InvariantCondition: (id_302[au](1): boolean)
 PreCondition: (id_304[au](1): boolean)
 PostCondition: (id_306[au](1): boolean)
 RepeatCondition: (id_308[au](0): boolean)
 AncestorInvariantCondition: (id_310[au](1): boolean)
 AncestorEndCondition: (id_312[au](0): boolean)
 ParentExecutingCondition: (id_314[au](1): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_480[iu](UNKNOWN): childrenWaitingOrFinished(0:3))
 AbortCompleteCondition: (id_318[au](UNKNOWN): boolean)
 ParentWaitingCondition: (id_320[au](0): boolean)
 ParentFinishedCondition: (id_322[au](0): boolean)
 CommandHandleReceivedCondition: (id_324[au](1): boolean)
 command_handle: (id_281[au](UNKNOWN):  command_handle)
  C1{
   State: (id_328[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_346[au](0): boolean)
   StartCondition: (id_348[au](1): boolean)
   EndCondition: (id_523[au](0): ((id_519[au](0): interruptibleCommandHandleValues((id_516[au](UNKNOWN): string))) || (id_521[au](0): ((id_517[au](0): isknown((id_516[au](UNKNOWN): string))) && (id_507[au](0): ((id_509[au](10): int) == (id_376[au](-1): int)))))
   InvariantCondition: (id_352[au](1): boolean)
   PreCondition: (id_354[au](1): boolean)
   PostCondition: (id_510[au](UNKNOWN): (id_513[au](UNKNOWN): ((id_331[au](UNKNOWN):  command_handle) == (id_512[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_358[au](0): boolean)
   AncestorInvariantCondition: (id_490[au](1): (TransparentWrapper(id_486[auT]{1}((id_310[au](1): boolean)) && TransparentWrapper(id_488[auT]{1}((id_302[au](1): boolean)))
   AncestorEndCondition: (id_496[iu](UNKNOWN): (TransparentWrapper(id_492[iuT]{0}((id_312[au](0): boolean)) || TransparentWrapper(id_494[iuT]{0}((id_483[au](0): childrenFinished(0:3))))
   ParentExecutingCondition: (id_499[iu](UNKNOWN): ((id_278[au](EXECUTING): state(EXECUTING)) == (id_498[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_366[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_515[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_502[iu](UNKNOWN): ((id_278[au](EXECUTING): state(EXECUTING)) == (id_501[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_505[iu](UNKNOWN): ((id_278[au](EXECUTING): state(EXECUTING)) == (id_504[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_527[au](0): ((id_525[au](0): allCommandHandleValues((id_516[au](UNKNOWN): string))) && (id_374[au](1): boolean))
   command_handle: (id_331[au](UNKNOWN):  command_handle)
   returnValue: (id_376[au](-1): int)
   mem_priority: (id_377[au](20): int)
  }
  C2{
   State: (id_380[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_398[au](0): boolean)
   StartCondition: (id_400[au](1): boolean)
   EndCondition: (id_571[au](1): ((id_567[au](1): interruptibleCommandHandleValues((id_564[au](COMMAND_DENIED): string))) || (id_569[au](1): ((id_565[au](1): isknown((id_564[au](COMMAND_DENIED): string))) && (id_402[au](1): boolean)))
   InvariantCondition: (id_404[au](1): boolean)
   PreCondition: (id_406[au](1): boolean)
   PostCondition: (id_553[au](0): (id_556[au](0): ((id_383[au](COMMAND_DENIED):  command_handle) == (id_555[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_558[iu](UNKNOWN): (id_561[iu](UNKNOWN): ((id_383[au](COMMAND_DENIED):  command_handle) == (id_560[iu](UNKNOWN):  command_handle))))
   AncestorInvariantCondition: (id_539[au](1): (TransparentWrapper(id_535[auT]{1}((id_310[au](1): boolean)) && TransparentWrapper(id_537[auT]{1}((id_302[au](1): boolean)))
   AncestorEndCondition: (id_545[iu](UNKNOWN): (TransparentWrapper(id_541[iuT]{0}((id_312[au](0): boolean)) || TransparentWrapper(id_543[iuT]{0}((id_483[au](0): childrenFinished(0:3))))
   ParentExecutingCondition: (id_547[iu](UNKNOWN): ((id_278[au](EXECUTING): state(EXECUTING)) == (id_498[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_418[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_563[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_549[iu](UNKNOWN): ((id_278[au](EXECUTING): state(EXECUTING)) == (id_501[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_551[iu](UNKNOWN): ((id_278[au](EXECUTING): state(EXECUTING)) == (id_504[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_575[au](1): ((id_573[au](1): allCommandHandleValues((id_564[au](COMMAND_DENIED): string))) && (id_426[au](1): boolean))
   command_handle: (id_383[au](COMMAND_DENIED):  command_handle)
   v_priority2: (id_428[au](15): int)
  }
  C3{
   State: (id_431[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_449[au](0): boolean)
   StartCondition: (id_451[au](1): boolean)
   EndCondition: (id_611[au](0): ((id_607[au](0): interruptibleCommandHandleValues((id_604[au](UNKNOWN): string))) || (id_609[au](0): ((id_605[au](0): isknown((id_604[au](UNKNOWN): string))) && (id_453[au](1): boolean)))
   InvariantCondition: (id_455[au](1): boolean)
   PreCondition: (id_457[au](1): boolean)
   PostCondition: (id_598[au](UNKNOWN): (id_601[au](UNKNOWN): ((id_434[au](UNKNOWN):  command_handle) == (id_600[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_461[au](0): boolean)
   AncestorInvariantCondition: (id_584[au](1): (TransparentWrapper(id_580[auT]{1}((id_310[au](1): boolean)) && TransparentWrapper(id_582[auT]{1}((id_302[au](1): boolean)))
   AncestorEndCondition: (id_590[iu](UNKNOWN): (TransparentWrapper(id_586[iuT]{0}((id_312[au](0): boolean)) || TransparentWrapper(id_588[iuT]{0}((id_483[au](0): childrenFinished(0:3))))
   ParentExecutingCondition: (id_592[iu](UNKNOWN): ((id_278[au](EXECUTING): state(EXECUTING)) == (id_498[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_469[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_603[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_594[iu](UNKNOWN): ((id_278[au](EXECUTING): state(EXECUTING)) == (id_501[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_596[iu](UNKNOWN): ((id_278[au](EXECUTING): state(EXECUTING)) == (id_504[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_615[au](0): ((id_613[au](0): allCommandHandleValues((id_604[au](UNKNOWN): string))) && (id_477[au](1): boolean))
   command_handle: (id_434[au](UNKNOWN):  command_handle)
   v_priority: (id_479[au](10): int)
  }
}

[Test:testOutput]Sending command ACK c1(20) = (string)COMMAND_SENT_TO_SYSTEM
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 2
[PlexilExec:step][2:0] State change queue: C2 
[PlexilExec:lock]Locking node C2
[PlexilExec:step][2:0:0] Transitioning node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 10
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:step][2:1] State change queue: C2 
[PlexilExec:lock]Locking node C2
[PlexilExec:step][2:1:0] Transitioning node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 11
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:step][2:2] State change queue: C2 
[PlexilExec:lock]Locking node C2
[PlexilExec:step][2:2:0] Transitioning node C2
[PlexilExec:handleNeedsExecution]Storing action for node 'C2' of type 'Command' to be executed.
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C2' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node C2
[Test:testOutput]Permission to execute c2 has been denied by the resource arbiter.
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 12
[PlexilExec:cycle]==>End cycle 2
[PlexilExec:printPlan]
SimpleTask{
 State: (id_278[au](EXECUTING): state(EXECUTING)) (0)
 SkipCondition: (id_296[au](0): boolean)
 StartCondition: (id_298[au](1): boolean)
 EndCondition: (id_483[au](0): childrenFinished(0:3))
 InvariantCondition: (id_302[au](1): boolean)
 PreCondition: (id_304[au](1): boolean)
 PostCondition: (id_306[au](1): boolean)
 RepeatCondition: (id_308[au](0): boolean)
 AncestorInvariantCondition: (id_310[au](1): boolean)
 AncestorEndCondition: (id_312[au](0): boolean)
 ParentExecutingCondition: (id_314[au](1): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_480[iu](UNKNOWN): childrenWaitingOrFinished(0:3))
 AbortCompleteCondition: (id_318[au](UNKNOWN): boolean)
 ParentWaitingCondition: (id_320[au](0): boolean)
 ParentFinishedCondition: (id_322[au](0): boolean)
 CommandHandleReceivedCondition: (id_324[au](1): boolean)
 command_handle: (id_281[au](UNKNOWN):  command_handle)
  C1{
   State: (id_328[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_346[au](0): boolean)
   StartCondition: (id_348[au](1): boolean)
   EndCondition: (id_523[au](0): ((id_519[au](0): interruptibleCommandHandleValues((id_516[au](COMMAND_SENT_TO_SYSTEM): string))) || (id_521[au](0): ((id_517[au](1): isknown((id_516[au](COMMAND_SENT_TO_SYSTEM): string))) && (id_507[au](0): ((id_509[au](10): int) == (id_376[au](-1): int)))))
   InvariantCondition: (id_352[au](1): boolean)
   PreCondition: (id_354[au](1): boolean)
   PostCondition: (id_510[au](1): (id_513[au](1): ((id_331[au](COMMAND_SENT_TO_SYSTEM):  command_handle) == (id_512[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_358[au](0): boolean)
   AncestorInvariantCondition: (id_490[au](1): (TransparentWrapper(id_486[auT]{1}((id_310[au](1): boolean)) && TransparentWrapper(id_488[auT]{1}((id_302[au](1): boolean)))
   AncestorEndCondition: (id_496[iu](UNKNOWN): (TransparentWrapper(id_492[iuT]{0}((id_312[au](0): boolean)) || TransparentWrapper(id_494[iuT]{0}((id_483[au](0): childrenFinished(0:3))))
   ParentExecutingCondition: (id_499[iu](UNKNOWN): ((id_278[au](EXECUTING): state(EXECUTING)) == (id_498[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_366[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_515[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_502[iu](UNKNOWN): ((id_278[au](EXECUTING): state(EXECUTING)) == (id_501[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_505[iu](UNKNOWN): ((id_278[au](EXECUTING): state(EXECUTING)) == (id_504[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_527[au](1): ((id_525[au](1): allCommandHandleValues((id_516[au](COMMAND_SENT_TO_SYSTEM): string))) && (id_374[au](1): boolean))
   command_handle: (id_331[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   returnValue: (id_376[au](-1): int)
   mem_priority: (id_377[au](20): int)
  }
  C2{
   State: (id_380[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_398[au](0): boolean)
   StartCondition: (id_400[au](1): boolean)
   EndCondition: (id_571[au](1): ((id_567[au](1): interruptibleCommandHandleValues((id_564[au](COMMAND_DENIED): string))) || (id_569[au](1): ((id_565[au](1): isknown((id_564[au](COMMAND_DENIED): string))) && (id_402[au](1): boolean)))
   InvariantCondition: (id_404[au](1): boolean)
   PreCondition: (id_406[au](1): boolean)
   PostCondition: (id_553[au](0): (id_556[au](0): ((id_383[au](COMMAND_DENIED):  command_handle) == (id_555[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_558[iu](UNKNOWN): (id_561[iu](UNKNOWN): ((id_383[au](COMMAND_DENIED):  command_handle) == (id_560[iu](UNKNOWN):  command_handle))))
   AncestorInvariantCondition: (id_539[au](1): (TransparentWrapper(id_535[auT]{1}((id_310[au](1): boolean)) && TransparentWrapper(id_537[auT]{1}((id_302[au](1): boolean)))
   AncestorEndCondition: (id_545[iu](UNKNOWN): (TransparentWrapper(id_541[iuT]{0}((id_312[au](0): boolean)) || TransparentWrapper(id_543[iuT]{0}((id_483[au](0): childrenFinished(0:3))))
   ParentExecutingCondition: (id_547[iu](UNKNOWN): ((id_278[au](EXECUTING): state(EXECUTING)) == (id_498[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_418[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_563[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_549[iu](UNKNOWN): ((id_278[au](EXECUTING): state(EXECUTING)) == (id_501[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_551[iu](UNKNOWN): ((id_278[au](EXECUTING): state(EXECUTING)) == (id_504[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_575[au](1): ((id_573[au](1): allCommandHandleValues((id_564[au](COMMAND_DENIED): string))) && (id_426[au](1): boolean))
   command_handle: (id_383[au](COMMAND_DENIED):  command_handle)
   v_priority2: (id_428[au](15): int)
  }
  C3{
   State: (id_431[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_449[au](0): boolean)
   StartCondition: (id_451[au](1): boolean)
   EndCondition: (id_611[au](0): ((id_607[au](0): interruptibleCommandHandleValues((id_604[au](UNKNOWN): string))) || (id_609[au](0): ((id_605[au](0): isknown((id_604[au](UNKNOWN): string))) && (id_453[au](1): boolean)))
   InvariantCondition: (id_455[au](1): boolean)
   PreCondition: (id_457[au](1): boolean)
   PostCondition: (id_598[au](UNKNOWN): (id_601[au](UNKNOWN): ((id_434[au](UNKNOWN):  command_handle) == (id_600[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_461[au](0): boolean)
   AncestorInvariantCondition: (id_584[au](1): (TransparentWrapper(id_580[auT]{1}((id_310[au](1): boolean)) && TransparentWrapper(id_582[auT]{1}((id_302[au](1): boolean)))
   AncestorEndCondition: (id_590[iu](UNKNOWN): (TransparentWrapper(id_586[iuT]{0}((id_312[au](0): boolean)) || TransparentWrapper(id_588[iuT]{0}((id_483[au](0): childrenFinished(0:3))))
   ParentExecutingCondition: (id_592[iu](UNKNOWN): ((id_278[au](EXECUTING): state(EXECUTING)) == (id_498[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_469[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_603[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_594[iu](UNKNOWN): ((id_278[au](EXECUTING): state(EXECUTING)) == (id_501[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_596[iu](UNKNOWN): ((id_278[au](EXECUTING): state(EXECUTING)) == (id_504[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_615[au](0): ((id_613[au](0): allCommandHandleValues((id_604[au](UNKNOWN): string))) && (id_477[au](1): boolean))
   command_handle: (id_434[au](UNKNOWN):  command_handle)
   v_priority: (id_479[au](10): int)
  }
}

[Test:testOutput]Sending command ACK c3() = (string)COMMAND_SENT_TO_SYSTEM
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C3' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C3' on the state change queue in position 13
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 3
[PlexilExec:step][3:0] State change queue: C2 C3 
[PlexilExec:lock]Locking node C2
[PlexilExec:lock]Locking node C3
[PlexilExec:step][3:0:0] Transitioning node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 14
[PlexilExec:step][3:0:1] Transitioning node C3
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C3' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C3' on the state change queue in position 15
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:unlock]Unlocking node C3
[PlexilExec:step][3:1] State change queue: C2 C3 
[PlexilExec:lock]Locking node C2
[PlexilExec:lock]Locking node C3
[PlexilExec:step][3:1:0] Transitioning node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 16
[PlexilExec:step][3:1:1] Transitioning node C3
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C3' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:unlock]Unlocking node C3
[PlexilExec:step][3:2] State change queue: C2 
[PlexilExec:lock]Locking node C2
[PlexilExec:step][3:2:0] Transitioning node C2
[PlexilExec:handleNeedsExecution]Storing action for node 'C2' of type 'Command' to be executed.
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C2' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node C2
[Test:testOutput]Executing c2() into noId with ack (id_564[au](UNKNOWN): string)
[PlexilExec:cycle]==>End cycle 3
[PlexilExec:printPlan]
SimpleTask{
 State: (id_278[au](EXECUTING): state(EXECUTING)) (0)
 SkipCondition: (id_296[au](0): boolean)
 StartCondition: (id_298[au](1): boolean)
 EndCondition: (id_483[au](0): childrenFinished(1:3))
 InvariantCondition: (id_302[au](1): boolean)
 PreCondition: (id_304[au](1): boolean)
 PostCondition: (id_306[au](1): boolean)
 RepeatCondition: (id_308[au](0): boolean)
 AncestorInvariantCondition: (id_310[au](1): boolean)
 AncestorEndCondition: (id_312[au](0): boolean)
 ParentExecutingCondition: (id_314[au](1): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_480[iu](UNKNOWN): childrenWaitingOrFinished(0:3))
 AbortCompleteCondition: (id_318[au](UNKNOWN): boolean)
 ParentWaitingCondition: (id_320[au](0): boolean)
 ParentFinishedCondition: (id_322[au](0): boolean)
 CommandHandleReceivedCondition: (id_324[au](1): boolean)
 command_handle: (id_281[au](UNKNOWN):  command_handle)
  C1{
   State: (id_328[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_346[au](0): boolean)
   StartCondition: (id_348[au](1): boolean)
   EndCondition: (id_523[au](0): ((id_519[au](0): interruptibleCommandHandleValues((id_516[au](COMMAND_SENT_TO_SYSTEM): string))) || (id_521[au](0): ((id_517[au](1): isknown((id_516[au](COMMAND_SENT_TO_SYSTEM): string))) && (id_507[au](0): ((id_509[au](10): int) == (id_376[au](-1): int)))))
   InvariantCondition: (id_352[au](1): boolean)
   PreCondition: (id_354[au](1): boolean)
   PostCondition: (id_510[au](1): (id_513[au](1): ((id_331[au](COMMAND_SENT_TO_SYSTEM):  command_handle) == (id_512[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_358[au](0): boolean)
   AncestorInvariantCondition: (id_490[au](1): (TransparentWrapper(id_486[auT]{1}((id_310[au](1): boolean)) && TransparentWrapper(id_488[auT]{1}((id_302[au](1): boolean)))
   AncestorEndCondition: (id_496[iu](UNKNOWN): (TransparentWrapper(id_492[iuT]{0}((id_312[au](0): boolean)) || TransparentWrapper(id_494[iuT]{0}((id_483[au](0): childrenFinished(1:3))))
   ParentExecutingCondition: (id_499[iu](UNKNOWN): ((id_278[au](EXECUTING): state(EXECUTING)) == (id_498[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_366[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_515[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_502[iu](UNKNOWN): ((id_278[au](EXECUTING): state(EXECUTING)) == (id_501[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_505[iu](UNKNOWN): ((id_278[au](EXECUTING): state(EXECUTING)) == (id_504[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_527[au](1): ((id_525[au](1): allCommandHandleValues((id_516[au](COMMAND_SENT_TO_SYSTEM): string))) && (id_374[au](1): boolean))
   command_handle: (id_331[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   returnValue: (id_376[au](-1): int)
   mem_priority: (id_377[au](20): int)
  }
  C2{
   State: (id_380[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_398[au](0): boolean)
   StartCondition: (id_400[au](1): boolean)
   EndCondition: (id_571[au](0): ((id_567[au](0): interruptibleCommandHandleValues((id_564[au](UNKNOWN): string))) || (id_569[au](0): ((id_565[au](0): isknown((id_564[au](UNKNOWN): string))) && (id_402[au](1): boolean)))
   InvariantCondition: (id_404[au](1): boolean)
   PreCondition: (id_406[au](1): boolean)
   PostCondition: (id_553[au](UNKNOWN): (id_556[au](UNKNOWN): ((id_383[au](UNKNOWN):  command_handle) == (id_555[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_558[iu](UNKNOWN): (id_561[iu](UNKNOWN): ((id_383[au](UNKNOWN):  command_handle) == (id_560[iu](UNKNOWN):  command_handle))))
   AncestorInvariantCondition: (id_539[au](1): (TransparentWrapper(id_535[auT]{1}((id_310[au](1): boolean)) && TransparentWrapper(id_537[auT]{1}((id_302[au](1): boolean)))
   AncestorEndCondition: (id_545[iu](UNKNOWN): (TransparentWrapper(id_541[iuT]{0}((id_312[au](0): boolean)) || TransparentWrapper(id_543[iuT]{0}((id_483[au](0): childrenFinished(1:3))))
   ParentExecutingCondition: (id_547[iu](UNKNOWN): ((id_278[au](EXECUTING): state(EXECUTING)) == (id_498[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_418[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_563[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_549[iu](UNKNOWN): ((id_278[au](EXECUTING): state(EXECUTING)) == (id_501[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_551[iu](UNKNOWN): ((id_278[au](EXECUTING): state(EXECUTING)) == (id_504[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_575[au](0): ((id_573[au](0): allCommandHandleValues((id_564[au](UNKNOWN): string))) && (id_426[au](1): boolean))
   command_handle: (id_383[au](UNKNOWN):  command_handle)
   v_priority2: (id_428[au](15): int)
  }
  C3{
   State: (id_431[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_432[au](SUCCESS):  outcome)
   Command handle: (id_434[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   v_priority: (id_479[au](10): int)
  }
}

[Test:testOutput]Sending command result c1(20) = 10
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C1' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C1' on the state change queue in position 17
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 4
[PlexilExec:step][4:0] State change queue: C1 
[PlexilExec:lock]Locking node C1
[PlexilExec:step][4:0:0] Transitioning node C1
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C1' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C1' on the state change queue in position 18
[PlexilExec:unlock]Unlocking node C1
[PlexilExec:step][4:1] State change queue: C1 
[PlexilExec:lock]Locking node C1
[PlexilExec:step][4:1:0] Transitioning node C1
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C1' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node C1
[PlexilExec:cycle]==>End cycle 4
[PlexilExec:printPlan]
SimpleTask{
 State: (id_278[au](EXECUTING): state(EXECUTING)) (0)
 SkipCondition: (id_296[au](0): boolean)
 StartCondition: (id_298[au](1): boolean)
 EndCondition: (id_483[au](0): childrenFinished(2:3))
 InvariantCondition: (id_302[au](1): boolean)
 PreCondition: (id_304[au](1): boolean)
 PostCondition: (id_306[au](1): boolean)
 RepeatCondition: (id_308[au](0): boolean)
 AncestorInvariantCondition: (id_310[au](1): boolean)
 AncestorEndCondition: (id_312[au](0): boolean)
 ParentExecutingCondition: (id_314[au](1): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_480[iu](UNKNOWN): childrenWaitingOrFinished(0:3))
 AbortCompleteCondition: (id_318[au](UNKNOWN): boolean)
 ParentWaitingCondition: (id_320[au](0): boolean)
 ParentFinishedCondition: (id_322[au](0): boolean)
 CommandHandleReceivedCondition: (id_324[au](1): boolean)
 command_handle: (id_281[au](UNKNOWN):  command_handle)
  C1{
   State: (id_328[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_329[au](SUCCESS):  outcome)
   Command handle: (id_331[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   returnValue: (id_376[iu](10): int)
   mem_priority: (id_377[au](20): int)
  }
  C2{
   State: (id_380[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_398[au](0): boolean)
   StartCondition: (id_400[au](1): boolean)
   EndCondition: (id_571[au](0): ((id_567[au](0): interruptibleCommandHandleValues((id_564[au](UNKNOWN): string))) || (id_569[au](0): ((id_565[au](0): isknown((id_564[au](UNKNOWN): string))) && (id_402[au](1): boolean)))
   InvariantCondition: (id_404[au](1): boolean)
   PreCondition: (id_406[au](1): boolean)
   PostCondition: (id_553[au](UNKNOWN): (id_556[au](UNKNOWN): ((id_383[au](UNKNOWN):  command_handle) == (id_555[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_558[iu](UNKNOWN): (id_561[iu](UNKNOWN): ((id_383[au](UNKNOWN):  command_handle) == (id_560[iu](UNKNOWN):  command_handle))))
   AncestorInvariantCondition: (id_539[au](1): (TransparentWrapper(id_535[auT]{1}((id_310[au](1): boolean)) && TransparentWrapper(id_537[auT]{1}((id_302[au](1): boolean)))
   AncestorEndCondition: (id_545[iu](UNKNOWN): (TransparentWrapper(id_541[iuT]{0}((id_312[au](0): boolean)) || TransparentWrapper(id_543[iuT]{0}((id_483[au](0): childrenFinished(2:3))))
   ParentExecutingCondition: (id_547[iu](UNKNOWN): ((id_278[au](EXECUTING): state(EXECUTING)) == (id_498[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_418[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_563[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_549[iu](UNKNOWN): ((id_278[au](EXECUTING): state(EXECUTING)) == (id_501[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_551[iu](UNKNOWN): ((id_278[au](EXECUTING): state(EXECUTING)) == (id_504[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_575[au](0): ((id_573[au](0): allCommandHandleValues((id_564[au](UNKNOWN): string))) && (id_426[au](1): boolean))
   command_handle: (id_383[au](UNKNOWN):  command_handle)
   v_priority2: (id_428[au](15): int)
  }
  C3{
   State: (id_431[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_432[au](SUCCESS):  outcome)
   Command handle: (id_434[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   v_priority: (id_479[au](10): int)
  }
}

[Test:testOutput]Sending command ACK c2() = (string)COMMAND_SENT_TO_SYSTEM
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 19
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 5
[PlexilExec:step][5:0] State change queue: C2 
[PlexilExec:lock]Locking node C2
[PlexilExec:step][5:0:0] Transitioning node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 20
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:step][5:1] State change queue: C2 
[PlexilExec:lock]Locking node C2
[PlexilExec:step][5:1:0] Transitioning node C2
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 21
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C2' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:step][5:2] State change queue: SimpleTask 
[PlexilExec:lock]Locking node SimpleTask
[PlexilExec:step][5:2:0] Transitioning node SimpleTask
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 22
[PlexilExec:unlock]Unlocking node SimpleTask
[PlexilExec:step][5:3] State change queue: SimpleTask 
[PlexilExec:lock]Locking node SimpleTask
[PlexilExec:step][5:3:0] Transitioning node SimpleTask
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 23
[PlexilExec:unlock]Unlocking node SimpleTask
[PlexilExec:step][5:4] State change queue: SimpleTask 
[PlexilExec:lock]Locking node SimpleTask
[PlexilExec:step][5:4:0] Transitioning node SimpleTask
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'SimpleTask' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node SimpleTask
[PlexilExec:cycle]==>End cycle 5
[PlexilExec:printPlan]
SimpleTask{
 State: (id_278[au](FINISHED): state(FINISHED)) (0)
 Outcome: (id_279[au](SUCCESS):  outcome)
  C1{
   State: (id_328[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_329[au](SUCCESS):  outcome)
   Command handle: (id_331[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   returnValue: (id_376[iu](10): int)
   mem_priority: (id_377[au](20): int)
  }
  C2{
   State: (id_380[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_381[au](SUCCESS):  outcome)
   Command handle: (id_383[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   v_priority2: (id_428[au](15): int)
  }
  C3{
   State: (id_431[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_432[au](SUCCESS):  outcome)
   Command handle: (id_434[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   v_priority: (id_479[au](10): int)
  }
}

