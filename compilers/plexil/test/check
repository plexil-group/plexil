#! /bin/sh

# Copyright (c) 2006-2020, Universities Space Research Association (USRA).
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the Universities Space Research Association nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY USRA ``AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL USRA BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
# USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

outfile="output/$1.epx"
validfile="valid/valid-$1.epx"

if [ ! -r "$outfile" ]
then
    echo "$0: Error: Output file $outfile was not found or is not readable." >&2
    exit 1
fi

if [ ! -r "$validfile" ]
then
    echo "$0: Error: Valid file $validfile was not found or is not readable." >&2
    exit 1
fi

# Create named FIFOs for the formatted output
outfmt="/tmp/$1.epx.fmt"
validfmt="/tmp/valid-$1.epx.fmt"

rm -f "$outfmt" "$validfmt"

if ! mkfifo "$outfmt" "$validfmt"
then
    echo "$0: Error: mkfifo failed. Exiting." >&2
    exit 1
fi

trap cleanup 1 2 3 6

cleanup()
{
    rm -f "$outfmt" "$validfmt"
    echo "Exiting due to error." >&2
    exit 1
}

xmllint --format "$outfile" > "$outfmt" &
xmllint --format "$validfile" > "$validfmt" &

diff -B -w "$outfmt" "$validfmt"
result=$?

rm -f "$outfmt" "$validfmt"

exit $result
