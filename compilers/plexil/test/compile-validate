#! /bin/sh

# Run the Standard Plexil compiler on one regression test case,
# and check the output generated against the XML schema,
# and (if it exists) a "known good" file.
# Exit with 0 status if all OK. Exit with 1 status if not.
# Writes results to tempRegressionResults in this directory.

# Copyright (c) 2006-2022, Universities Space Research Association (USRA).
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the Universities Space Research Association nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY USRA ``AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL USRA BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
# USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

set -e

if [ -z "$PLEXIL_HOME" ]
then
    PLEXIL_HOME="$(cd "$(dirname "$0")" && cd ../../.. && pwd -P)"
fi

std_plexil_compiler="$PLEXIL_HOME"/compilers/plexil/PlexilCompiler
std_plexil_compiler_opts='--epx-only --pretty-print'

plexil_schema_dir="$PLEXIL_HOME"/schema
epx_schema="$plexil_schema_dir"/extended-plexil.xsd
schema_validator="$plexil_schema_dir"/validator/validate
schema_validator_opts='--schema'

cd "$(dirname "$0")"

compile()
{
    "$std_plexil_compiler" ${std_plexil_compiler_opts} -o output/"$1".epx input/"$1".ple
}

epx_validate()
{
    "$schema_validator" ${schema_validator_opts} "$epx_schema" output/"$1".epx
}

if ! compile "$1" >>tempRegressionResults 2>&1
then
	echo " *** Compilation of $1.ple failed ***" | tee -a tempRegressionResults
    exit 1
fi

if ! epx_validate "$1" 2>>tempRegressionResults 1>&2 
then
	echo " *** Validation of $1.epx failed ***" | tee -a tempRegressionResults 
    exit 1
fi 

if [ -f valid/valid-"$1".epx ]
then 
	if diff -B -w output/"$1".epx valid/valid-"$1".epx | tee -a tempRegressionResults
    then
		echo "Verified $1.epx" | tee -a tempRegressionResults 
	else
		echo " *** Verification of $1.epx failed ***" | tee -a tempRegressionResults 
        exit 1
	fi 
else
	echo "Validated $1.epx; no valid file, skipping verification" 
fi 

exit 0
