#! /bin/sh

# Run the Standard Plexil compiler on one regression test case,
# and check the output generated against the XML schema,
# and (if it exists) a "known good" file.
# Exit with 0 status if all OK. Exit with 1 status if not.
# Writes results to tempRegressionResults in the current working directory.

# Expects to be run from $PLEXIL_HOME/compilers/plexil/test

# Copyright (c) 2006-2020, Universities Space Research Association (USRA).
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the Universities Space Research Association nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY USRA ``AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL USRA BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
# USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# N.B. Presumes PLEXIL_HOME is correctly set in environment

# shellcheck source=../../../scripts/plexil-setup.sh
. "$PLEXIL_HOME"/scripts/plexil-setup.sh

SCHEMA_DIR="$PLEXIL_HOME"/schema
EPX_SCHEMA="$SCHEMA_DIR"/extended-plexil.xsd

# Old validator
# VALIDATOR="$(command -v xmllint)"
# VALIDATOR_OPTS='--noout --schema'

# if [ -z "$VALIDATOR" ]
# then
#     echo 'Error: "xmllint" utility not found.' >&2
#     echo 'Please install it, or amend PATH, and try again.' >&2
#     exit 1
# fi

# New validator
VALIDATOR="$SCHEMA_DIR"/validator/validate
VALIDATOR_OPTS='--schema'

if [ ! -e "$VALIDATOR" ]
then
    echo "Error: validator $VALIDATOR is not executable." >&2
    exit 1
fi

epx_validate()
{
    "$VALIDATOR" ${VALIDATOR_OPTS} "$EPX_SCHEMA" "$1"
}


if ! ../PlexilCompiler --epx-only -o output/"$1".epx input/"$1".ple
then
	echo "*** Compilation of $1.ple failed ***" >> tempRegressionResults
	echo "*** Compilation of $1.ple failed ***"
    exit 1
fi

if ! epx_validate output/"$1".epx 2>>tempRegressionResults 1>&2 
then
	echo "*** Validation of $1.epx failed ***" >> tempRegressionResults 
	echo "*** Validation of $1.epx failed ***" 
    exit 1
fi 

if [ -f valid/valid-"$1".epx ]
then 
	if "$PLEXIL_HOME"/compilers/plexil/test/check "$1" >> tempRegressionResults
    then
		echo "Verified $1.epx" >> tempRegressionResults 
		echo "Verified $1.epx" 
	else
		echo "*** Verification of $1.epx failed ***" >> tempRegressionResults 
		echo "*** Verification of $1.epx failed ***" 
        exit 1
	fi 
else
	echo "Validated $1.epx; no valid file, skipping verification" 
fi 

exit 0
