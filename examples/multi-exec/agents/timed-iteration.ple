// -*- Mode: java -*-
// File: plexil/examples/multi-exec/agents/timed-iteration.ple

Command pprint(...);
Command SendMessage(String);
Command SendUdpMessage(...);
Real Lookup time;

Timed-iteration:
{
    Real run_start_time;
    Real period = 0.5;
    Real elapsed_time;
    Integer run_length = 5;
    Real tolerance = 0.01;
    Boolean continue = true;
    record-run-start-time: run_start_time = Lookup(time);
    periodic-iteration:
    {
        Real iteration_start_time;
        RepeatCondition continue;
        // ((now - run-start-time) % period) < (2 * tolerance)
        StartCondition ((LookupOnChange(time, tolerance) - run_start_time) % period) < (2 * tolerance);
        record-iteration-start-time: iteration_start_time = Lookup(time);
        record-elapsed-time: elapsed_time = iteration_start_time - run_start_time;
        print-elapsed-time: pprint("elapsed_time: ", elapsed_time);
        wait-a-bit: Wait (2 * tolerance), tolerance;
        conditionally-end-iteration:
        {
            SkipCondition elapsed_time <= run_length;
            signal-end-of-iteration: continue = false;
            notify-end-of-iteration: pprint("Ending periodic iteration");
        }
    }
    test-udp: SendUdpMessage("test_command", run_length, elapsed_time, true, "just a test");
    test-command: SendMessage("Quit");
}
