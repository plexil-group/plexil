#!/bin/bash
# File: $SVNROOT/examples/multi-exec/agents/tests/run-agents

function usage ()
{
cat <<EOF

Usage:      `basename $0` <agent1> <agent2>

Examples:   `basename $0` t1-cmd t1-sim
            `basename $0` t2-cmd.pli t1-sim.pli

            <agent1> and <agent2> are the "base names" of the plans, e.g., <agent1>.pli.
            The communications configuration files will be guessed at based on the given
            "base names", e.g., given "t1-cmd" as the base name, "t1-cmd.xml" and "cmd.xml"
            will be tried.

EOF
exit
}

# Only 2 "base name" parameters
if [ $# != 2 ] ;
then
    usage
fi

#has_xterm=`which xterm`
ipc_running=`ps aux | egrep "ipc|central" | grep -v grep`

# Allow for either base names or names including extensions
agent1=`echo $1 | awk '{ split($0, arr, "."); print(arr[1]) }'`
agent2=`echo $2 | awk '{ split($0, arr, "."); print(arr[1]) }'`

# Guess at what the communications configurations might be for these agents
# t1-cmd = cmd.xml or t1-cmd.xml = cmd-t1; cmd = cmd.xml
if [ -e $agent1.xml ] ;
then
    com1=$agent1.xml ;
elif [ -e `echo $agent1 | awk '{ split($0, arr, "-"); print(arr[1]) }'`.xml ] ;
then
    com1=`echo $agent1 | awk '{ split($0, arr, "-"); print(arr[1]) }'`.xml
elif [ -e `echo $agent1 | awk '{ split($0, arr, "-"); print(arr[2]) }'`.xml ] ;
then
    com1=`echo $agent1 | awk '{ split($0, arr, "-"); print(arr[2]) }'`.xml
else
    echo "No communications configuration file found for base name $agent1"
    exit
fi

if [ -e $agent2.xml ] ;
then
    com2=$agent2.xml ;
elif [ -e `echo $agent2 | awk '{ split($0, arr, "-"); print(arr[1]) }'`.xml ] ;
then
    com2=`echo $agent2 | awk '{ split($0, arr, "-"); print(arr[1]) }'`.xml
elif [ -e `echo $agent2 | awk '{ split($0, arr, "-"); print(arr[2]) }'`.xml ] ;
then
    com2=`echo $agent2 | awk '{ split($0, arr, "-"); print(arr[2]) }'`.xml
else
    echo "No communications configuration file found for base name $agent2"
    exit
fi

# Keep the plans up-to-date if possible...
make $1.plx $2.plx
make_status=$?
# bail if things don't compile properly
if [ $make_status != 0 ] ;
then
    echo "make exited with status of $make_status"
    exit $make_status
fi

cmd1="plexilexec -v -b -p $agent1.plx -c $com1"
cmd2="plexilexec -v -b -p $agent2.plx -c $com2"

# Either start IPC/central in an xterm, or make sure it is already running
if [ "$has_xterm" = "" ] ;
then
  echo " "
  if [ "$ipc_running" = "" ] ;
  then
    echo "ipc (central) must already be running for this script to work without xterm..."
    echo " "
    exit
  else
    echo "xterm not found: both agents will be run in the background..."
    echo " "
  fi
fi

# start IPC/central in an xterm if necessary
if [ "$ipc_running" = "" ] ;
then
  echo "Starting IPC..."
  xterm ipc &
  sleep 2;
else
   echo "IPC already running..."
fi

# Start the agents
echo "$cmd1..."
if [ "$has_xterm" = "" ] ;
then
  $cmd1 &
else
  xterm -e $cmd1 &
fi

sleep 10

echo "$cmd2..."
if [ "$has_xterm" = "" ] ;
then
  $cmd2
else
  xterm -e $cmd2
fi
