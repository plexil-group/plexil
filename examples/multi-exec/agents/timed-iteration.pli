;; File: plexil/examples/multi-exec/agents/test3.pli

(plexil-plan
  (sequence "time-iteration"
    (variables (real "run-start-time")    ;start time of this run (in seconds)
               (real "period" 0.5)       ;seconds
               (real "elapsed-time")      ;seconds
               (integer "run-length" 10)  ;seconds
               (real "tolerance" 0.01)    ;polling rate for wakeups
               (boolean "continue" true))
    (assignment-node "record-run-start-time"
      (assignment (realvar "run-start-time") (lookup-now "time")))
    (sequence "periodic-iteration"
      (variables (real "iteration-start-time"))
      (repeat-condition (boolvar "continue"))
      ;; ((now - run-start-time) % period) < (2 * tolerance)
      (start-condition (< (mod (- (lookup-on-change-with-tolerance "time" (realvar "tolerance"))
                                  (realvar "run-start-time"))
                               (realvar "period"))
                           (* 2 (realvar "tolerance"))))
      (assignment-node "record-interation-start-time"
        (assignment (realvar "iteration-start-time") (lookup-now "time")))
      (assignment-node "record-elapsed-time"
        (assignment (realvar "elapsed-time") (- (realvar "iteration-start-time") (realvar "run-start-time"))))
      (command-node "print-elapsed-time"
        (command "pprint" "elapsed-time: " (realvar "elapsed-time")))
      (wait-with-tolerance (* 2 (realvar "tolerance")) (realvar "tolerance") "wait-a-bit")
      (sequence "conditionally-end-iteration"
        (skip-condition (<= (realvar "elapsed-time") (intvar "run-length")))
        (assignment-node "signal-end-of-iteration"
          (assignment (boolvar "continue") false))
        (command-node "notify-end-of-iteration"
          (command "pprint" "Ending periodic iteration"))))))
