Boolean Lookup at_school;
Boolean Lookup no_passengers;
Boolean Lookup car_started;
Boolean Lookup raining;

Command depress_accelerator();
Command depress_clutch();
Command turn_key();
Command push_start();
Command select_radio();
Command select_CD();
Command turn_on_wipers();
Command turn_on_lights();
Command drive_a_bit();

DriveToSchool:
{
  StartCar:
  {
    Try
    {
      KeyStart:
      {
        PostCondition Lookup(car_started);
        PrimeAccelerator:
        {
          for ( Integer count = 0; count < 3; count + 1 )
          {
            PressAccelerator: { depress_accelerator(); }
          }
        }

        TurnKeyCombo: Concurrence
        {
          // Depress clutch while turning key
          DepressClutch: { depress_clutch(); }	      
          TurnKey:  
          {
            // Ends when car starts or 10 seconds (assumed unit) has passed.
            EndCondition Lookup(car_started) ||
                         Lookup(time, 0.001) >= TurnKey.EXECUTING.START + 10.0;
            turn_key();
          }	      	    
        }
      }

      PushStart:
      {
        PostCondition Lookup(car_started);
        push_start();
      }
    }
  } 

  SelectStation:
  {
    if ( Lookup(no_passengers) ) Radio: { select_radio(); }
    else CD: { select_CD(); }
    endif
  }

  DriveUntilAtSchool:
  {
    while ( !Lookup(at_school) )
    KeepDriving: Concurrence
    {
      HandleRain:
      {
        if ( Lookup(raining) )
          Concurrence
          {
            Wipers: { turn_on_wipers(); }
            Lights: { turn_on_lights(); }
          }
        endif
      }

      DriveABit:
      {
        EndCondition Lookup(at_school);
        drive_a_bit();
      }    
    }  
  } 
} 
