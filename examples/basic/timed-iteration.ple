// -*- Mode: java -*-

Command pprint(...);
Command recv_test(...);
Command SendUdpMessage(...);
//Command SendMessage(String);
//Command ReceiveUdpMessage(...);
Real Lookup time;

TimedIteration:
{
    Real run_start_time;
    Real period = 0.5;
    Real elapsed_time;
    Integer run_length = 5;
    Real tolerance = 0.01;
    String apt_id = "PDU";
    Boolean continue = true;
    recordRunStartTime: run_start_time = Lookup(time);
    periodicIteration:
    {
        Real iteration_start_time;
        RepeatCondition continue;
        StartCondition ((Lookup(time, tolerance) - run_start_time) % period)
                       < (2 * tolerance);
        record_iteration_start_time: iteration_start_time = Lookup(time);
        record_elapsed_time: elapsed_time = iteration_start_time - run_start_time;
        print_elapsed_time: pprint("elapsed_time: ", elapsed_time);
        wait_a_bit: Wait (2 * tolerance), tolerance;
        conditionally_end_iteration:
        {
            SkipCondition elapsed_time <= run_length;
            signal_end_of_iteration: continue = false;
            notify_end_of_iteration: pprint("Ending periodic iteration");
        }
    }
    udp_send_test1: SendUdpMessage("recv_test", apt_id, false, run_length, tolerance);
    udp_send_test2: recv_test (apt_id, true, run_length + 1, elapsed_time);
    //temp_test: SendMessage("Quit");
    //udp_recv_test: OnUdpMessage("recv_test", apt_id, run_length, tolerance);
    //udp_recv_test: ReceiveUdpMessage("recv_test", run_length, tolerance);
}
