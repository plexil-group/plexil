Boolean Lookup at_school;

DriveToSchool:
{
  Sequence
  
    StartCar:
    {
      Try
	
        KeyStart:
        {
          PostCondition: LookupNow(car_started);
          Sequence

            PrimeAccelerator:
	    {
              For ( Integer count = 0; count < 3; count + 1 )
                PressAccelerator: { Command: depress_accelerator(); }
            }
            
            TurnKeyCombo:
            // Depress clutch while turning key
            {
              Concurrence 

                DepressClutch: { Command: depress_clutch(); }	      

                TurnKey:  
                {
                  // NOTE: We'd like to add a time elapsed check to this end
                  // condition, but the Plexil compiler doesn't support this yet.
                  EndCondition: LookupOnChange(car_started);
                  Command: turn_key();
                }	      	    
           }
        }

        PushStart:
        {
          PostCondition: LookupNow(car_started);
          Command: push_start();
        }
    } // end of startCar

    SelectStation:
    {
      If ( LookupNow(no_passengers) )
      Then Radio: { Command: select_radio(); }
      Else CD: { Command: select_CD(); }
    }

    DriveUntilAtSchool:
    {
      While ( !LookupNow(at_school) )
      {
        Concurrence
	    	            	
            HandleRain:
	    {
              If ( LookupNow(raining) )
              Then
	      {
                Concurrence
                  Wipers: { Command: turn_on_wipers(); }
                  Lights: { Command: turn_on_lights(); }
              }
            }

            DriveABit:
            {
              EndCondition: LookupOnChange(at_school);
              Command: drive_a_bit();
            }    
      }  // end of While Loop
    } // end of DriveUntilAtSchool
}
