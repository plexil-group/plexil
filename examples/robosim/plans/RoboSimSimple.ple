// -*- Mode: Java -*-
// Copyright (c) 2006-2010, Universities Space Research Association (USRA).
//  All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above copyright
//       notice, this list of conditions and the following disclaimer in the
//       documentation and/or other materials provided with the distribution.
//     * Neither the name of the Universities Space Research Association nor the
//       names of its contributors may be used to endorse or promote products
//       derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY USRA ``AS IS'' AND ANY EXPRESS OR IMPLIED
// WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL USRA BE LIABLE FOR ANY DIRECT, INDIRECT,
// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
// OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
// TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
// USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Integer Command Move(String name, Integer direction);
Integer Command MoveRandom(String name);
Real[5] Command QueryEnergySensor(String name);

RoboSimSimple:
{
	String RobotName = "RobotYellow";
	Integer randNumber = 0;

	MoveRobot:
	{
		RepeatCondition NodeWrapper.outcome == SUCCESS;
		NodeWrapper:
		{
			PostCondition Move.outcome == SUCCESS &&
				QueryEnergySensor.outcome == SUCCESS &&
				MoveRandom.outcome == SUCCESS;

			Move:
			{
				Integer res;
				EndCondition isKnown(res);
				PostCondition res == 1;
				res = Move(RobotName, randNumber);
			}

			QueryEnergySensor:
			{
				Real energy[5];
				energy = QueryEnergySensor(RobotName);
			}

			MoveRandom:
			randNumber = MoveRandom(RobotName);
		}
	}
}
