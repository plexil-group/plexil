Command pprint(...);

Integer Lookup NumberOfTotalBoots;
Boolean Lookup IsOK(...);
Real Lookup TimeOfBoot(...);
Real Lookup TimeOfLastSave(...);
Boolean Lookup CheckpointState(...);
Real Lookup CheckpointTime(...);
String Lookup CheckpointInfo(...);

Integer Lookup NumberOfAccessibleBoots;
Integer Lookup NumberOfUnhandledBoots;
Boolean Lookup DidCrash;
Integer Lookup CheckpointWhen(...);


Command SetCheckpoint(...);
Boolean Command SetOK(...);
Boolean Command Flush();
String Command ToString(...);


Real Lookup time;

PanoramaCrashTest:
{
  Integer pictures = 0;
  // Allows us to "crash", since we have OKOnExit=false in the config, any exit will be treated as a crash unless we specifically setOK(0)
  Boolean crashMe = false;
  Integer total_boots;
  
  InvariantCondition !crashMe;

  // Guarantees we have a record of this boot
  SynchronousCommand Flush();

  total_boots = Lookup(NumberOfTotalBoots);
  // Handle previous crashes
  CrashChecker:{
    SkipCondition !Lookup(DidCrash);
    pprint("Previously crashed, handling...");
    pprint("We have booted up ",total_boots," times");
    pprint("Of these, ",Lookup(NumberOfAccessibleBoots)," are accessible and ",Lookup(NumberOfUnhandledBoots)," are unhandled");
    pprint("Last known save at ",Lookup(TimeOfLastSave(1))); // Time of last save in the previous boot
    pprint("Current run began at ",Lookup(TimeOfBoot(0)));
    
    for(Integer i=1; i<Lookup(NumberOfAccessibleBoots); i+1){
      if(!Lookup(IsOK(i))){
	pprint("Handling boot ",i);
	SetOK(i);
      }
    }
  }
  // Take panorama, crash on third photo 
  while (pictures<10) 
  {
    String pictures_s;
    String checkpoint_name;
    Integer checkpoint_boot;
    pictures_s = ToString(pictures);
    checkpoint_name = "photo_" + pictures_s;
    checkpoint_boot = Lookup(CheckpointWhen(checkpoint_name));
    pprint("Taking photo ",pictures);
    // Crashes, but third time's the charm
    if(pictures==2 && total_boots<3){
      pprint("Crashed...");
      crashMe = true;
    }
    if(!isKnown(checkpoint_boot)){
      pprint("Photo ",pictures," was never taken");
    }
    else{
      pprint("Photo ",pictures, " taken in boot ",checkpoint_boot);
      pprint("Checkpoint state: ",Lookup(CheckpointState(checkpoint_name,checkpoint_boot)));
      pprint("Checkpoint time: ",Lookup(CheckpointTime(checkpoint_name,checkpoint_boot)));
      pprint("Checkpoint info: ",Lookup(CheckpointInfo(checkpoint_name,checkpoint_boot)));
    }
    SetCheckpoint(checkpoint_name,"SomeInfo");
    pictures = pictures+1;
  }
  
  SynchronousCommand SetOK(0);
  SynchronousCommand Flush(); // Guarantees every received Checkpoint/SetOK command has been
                              // saved to disk
}
