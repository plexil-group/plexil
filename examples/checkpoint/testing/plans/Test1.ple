/* Copyright (c) 2006-2020, Universities Space Research Association (USRA).
*  All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*     * Redistributions of source code must retain the above copyright
*       notice, this list of conditions and the following disclaimer.
*     * Redistributions in binary form must reproduce the above copyright
*       notice, this list of conditions and the following disclaimer in the
*       documentation and/or other materials provided with the distribution.
*     * Neither the name of the Universities Space Research Association nor the
*       names of its contributors may be used to endorse or promote products
*       derived from this software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY USRA ``AS IS'' AND ANY EXPRESS OR IMPLIED
* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
* MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
* DISCLAIMED. IN NO EVENT SHALL USRA BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
* BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
* OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
* TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
* USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

Command print(...);

Boolean Lookup IsOK(...);
Boolean Lookup CheckpointState(...);
String Lookup  CheckpointInfo(...);
Real Lookup TimeOfBoot(...);

Command SetCheckpoint(...);
Command SetOK(...);
Boolean Command Flush();

Test1:
{
  // | is used as a separator because print doesn't print lonely whitespace due to a bug
  Boolean flush_success;
  print("---START|");
  print("FLUSH1BEGIN|");
  SynchronousCommand flush_success = Flush();
  print("FLUSH1END|");
  print("FLUSHSUCCESS=",flush_success,"|");
  print("STARTIME=",Lookup(TimeOfBoot(0)),"|");
  print("CHECKPOINT1BEGIN|");
  Checkpoint1:{
    EndCondition Checkpoint1.command_handle == COMMAND_RCVD_BY_SYSTEM ||
      Checkpoint1.command_handle == COMMAND_SUCCESS;
    SetCheckpoint("C1",true,"valid");
  }
  print("CHECKPOINT1END|");
  print("CHECKPOINT1STATE=",Lookup(CheckpointState("C1",0)),"|");
  print("CHECKPOINT1INFO=",Lookup(CheckpointInfo("C1",0)),"|");
  print("FLUSH2BEGIN|");
  SynchronousCommand flush_success = Flush();
  print("FLUSH2END|");
  print("FLUSHSUCCESS=",flush_success,"|");
  print("OK1BEGIN|");
  SetOK1:{
    EndCondition SetOK1.command_handle == COMMAND_RCVD_BY_SYSTEM ||
      Checkpoint1.command_handle == COMMAND_SUCCESS;
    SetOK(true,0);
  }
  print("OK1END|");
  print("OK1STATE=",Lookup(IsOK(0)),"|");
  print("FLUSH3BEGIN|");
  SynchronousCommand flush_success = Flush();
  print("FLUSH3END|");
  print("FLUSHSUCCESS=",flush_success,"|");
  print("END---");
}
