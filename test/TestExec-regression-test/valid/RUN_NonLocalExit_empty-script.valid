[PlexilExec:addPlan]Added plan: 
NonLocalExit{
 State: INACTIVE (0)
  theLoop{
   State: INACTIVE (0)
  }
  theSpoiler{
   State: INACTIVE (0)
  }
}

[PlexilExec:notifyNodeConditionChanged] for node NonLocalExit
[PlexilExec:cycle]==>Start cycle 1
[PlexilExec:step][1:0] Check queue: NonLocalExit 
[PlexilExec:handleConditionsChanged]Node NonLocalExit had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'NonLocalExit' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'NonLocalExit' on the state change queue in position 1
[PlexilExec:step][1:0] State change queue: NonLocalExit 
[PlexilExec:step][1:0:0] Transitioning node NonLocalExit from INACTIVE to WAITING
[PlexilExec:notifyNodeConditionChanged] for node NonLocalExit
[PlexilExec:step][1:1] Check queue: NonLocalExit 
[PlexilExec:handleConditionsChanged]Node NonLocalExit had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'NonLocalExit' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'NonLocalExit' on the state change queue in position 2
[PlexilExec:step][1:1] State change queue: NonLocalExit 
[PlexilExec:step][1:1:0] Transitioning node NonLocalExit from WAITING to EXECUTING
[PlexilExec:notifyNodeConditionChanged] for node theLoop
[PlexilExec:notifyNodeConditionChanged] for node NonLocalExit
[PlexilExec:notifyNodeConditionChanged] for node theSpoiler
[PlexilExec:handleNeedsExecution]Storing action for node 'NonLocalExit' of type 'NodeList' to be executed.
[PlexilExec:step][1:2] Check queue: theLoop NonLocalExit theSpoiler 
[PlexilExec:handleConditionsChanged]Node theLoop had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'theLoop' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'theLoop' on the state change queue in position 3
[PlexilExec:handleConditionsChanged]Node theSpoiler had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'theSpoiler' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'theSpoiler' on the state change queue in position 4
[PlexilExec:step][1:2] State change queue: theLoop theSpoiler 
[PlexilExec:step][1:2:0] Transitioning node theLoop from INACTIVE to WAITING
[PlexilExec:notifyNodeConditionChanged] for node NonLocalExit
[PlexilExec:notifyNodeConditionChanged] for node theLoop
[PlexilExec:step][1:2:1] Transitioning node theSpoiler from INACTIVE to WAITING
[PlexilExec:notifyNodeConditionChanged] for node theSpoiler
[PlexilExec:step][1:3] Check queue: NonLocalExit theLoop theSpoiler 
[PlexilExec:handleConditionsChanged]Node theLoop had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'theLoop' for state transition.
[PlexilExec:handleConditionsChanged]Node 'theLoop' is an assignment node that could be executing.  Adding it to the resource contention list 
[PlexilExec:addToResourceContention]Adding node 'theLoop' to resource contention.
[PlexilExec:resolveResourceConflicts]Node 'theLoop' has best priority.  Adding it to be executed in position 5
[PlexilExec:step][1:3] State change queue: theLoop 
[PlexilExec:step][1:3:0] Transitioning node theLoop from WAITING to EXECUTING
[PlexilExec:notifyNodeConditionChanged] for node NonLocalExit
[PlexilExec:notifyNodeConditionChanged] for node theLoop
[PlexilExec:handleNeedsExecution]Storing action for node 'theLoop' of type 'Assignment' to be executed.
[PlexilExec:performAssignments] performing 1 assignments and 0 retractions
[Test:testOutput]Assigning (Variable Integer loopCount 0x7f90b2500358 [a](0)) to 1
[PlexilExec:notifyNodeConditionChanged] for node theSpoiler
[PlexilExec:cycle]==>End cycle 1
[PlexilExec:printPlan]
NonLocalExit{
 State: EXECUTING (0)
 EndCondition: (AllChildrenFinished Boolean 0x7f90b2500910 [a](0))
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean 0x7f90b2500880 [i](0))
 loopCount: (Variable Integer loopCount 0x7f90b2500358 [a](1))
 quitLooping: (Variable Boolean quitLooping 0x7f90b25002d8 [a](0))
  theLoop{
   State: EXECUTING (0)
   ExitCondition: (Variable Boolean quitLooping 0x7f90b25002d8 [a](0))
   RepeatCondition: (LT Boolean 0x7f90b2500990 [i](1) (Variable Integer loopCount 0x7f90b2500358 [a](1)) (Constant Integer 0x7f90b2500980 [a](5)))
   ActionCompleteCondition: (InternalVariable Boolean ack 0x7f90b2500570 [a](1))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x7f90b25005b0 [i](0))
  }
  theSpoiler{
   State: WAITING (0)
   StartCondition: (EQ Boolean 0x7f90b2500ab0 [a](0) (Variable Integer loopCount 0x7f90b2500358 [a](1)) (Constant Integer 0x7f90b2500aa0 [a](2)))
   ActionCompleteCondition: (InternalVariable Boolean ack 0x7f90b25007b0 [i](0))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x7f90b25007f0 [i](0))
  }
}

[PlexilExec:cycle]==>Start cycle 2
[PlexilExec:step][2:0] Check queue: NonLocalExit theLoop theSpoiler 
[PlexilExec:handleConditionsChanged]Node theLoop had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'theLoop' for state transition.
[PlexilExec:handleConditionsChanged]Node 'theLoop' is an assignment node that is no longer possibly executing.  Removing it from resource contention.
[PlexilExec:handleConditionsChanged]Placing node 'theLoop' on the state change queue in position 6
[PlexilExec:step][2:0] State change queue: theLoop 
[PlexilExec:step][2:0:0] Transitioning node theLoop from EXECUTING to ITERATION_ENDED
[PlexilExec:notifyNodeConditionChanged] for node NonLocalExit
[PlexilExec:notifyNodeConditionChanged] for node theLoop
[PlexilExec:step][2:1] Check queue: NonLocalExit theLoop 
[PlexilExec:handleConditionsChanged]Node theLoop had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'theLoop' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'theLoop' on the state change queue in position 7
[PlexilExec:step][2:1] State change queue: theLoop 
[PlexilExec:step][2:1:0] Transitioning node theLoop from ITERATION_ENDED to WAITING
[PlexilExec:notifyNodeConditionChanged] for node NonLocalExit
[PlexilExec:notifyNodeConditionChanged] for node theLoop
[PlexilExec:step][2:2] Check queue: NonLocalExit theLoop 
[PlexilExec:handleConditionsChanged]Node theLoop had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'theLoop' for state transition.
[PlexilExec:handleConditionsChanged]Node 'theLoop' is an assignment node that could be executing.  Adding it to the resource contention list 
[PlexilExec:addToResourceContention]Adding node 'theLoop' to resource contention.
[PlexilExec:resolveResourceConflicts]Node 'theLoop' has best priority.  Adding it to be executed in position 8
[PlexilExec:step][2:2] State change queue: theLoop 
[PlexilExec:step][2:2:0] Transitioning node theLoop from WAITING to EXECUTING
[PlexilExec:notifyNodeConditionChanged] for node NonLocalExit
[PlexilExec:notifyNodeConditionChanged] for node theLoop
[PlexilExec:handleNeedsExecution]Storing action for node 'theLoop' of type 'Assignment' to be executed.
[PlexilExec:performAssignments] performing 1 assignments and 0 retractions
[Test:testOutput]Assigning (Variable Integer loopCount 0x7f90b2500358 [a](1)) to 2
[PlexilExec:notifyNodeConditionChanged] for node theSpoiler
[PlexilExec:cycle]==>End cycle 2
[PlexilExec:printPlan]
NonLocalExit{
 State: EXECUTING (0)
 EndCondition: (AllChildrenFinished Boolean 0x7f90b2500910 [a](0))
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean 0x7f90b2500880 [i](0))
 loopCount: (Variable Integer loopCount 0x7f90b2500358 [a](2))
 quitLooping: (Variable Boolean quitLooping 0x7f90b25002d8 [a](0))
  theLoop{
   State: EXECUTING (0)
   ExitCondition: (Variable Boolean quitLooping 0x7f90b25002d8 [a](0))
   RepeatCondition: (LT Boolean 0x7f90b2500990 [i](1) (Variable Integer loopCount 0x7f90b2500358 [a](2)) (Constant Integer 0x7f90b2500980 [a](5)))
   ActionCompleteCondition: (InternalVariable Boolean ack 0x7f90b2500570 [a](1))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x7f90b25005b0 [i](0))
  }
  theSpoiler{
   State: WAITING (0)
   StartCondition: (EQ Boolean 0x7f90b2500ab0 [a](1) (Variable Integer loopCount 0x7f90b2500358 [a](2)) (Constant Integer 0x7f90b2500aa0 [a](2)))
   ActionCompleteCondition: (InternalVariable Boolean ack 0x7f90b25007b0 [i](0))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x7f90b25007f0 [i](0))
  }
}

[PlexilExec:cycle]==>Start cycle 3
[PlexilExec:step][3:0] Check queue: NonLocalExit theLoop theSpoiler 
[PlexilExec:handleConditionsChanged]Node theLoop had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'theLoop' for state transition.
[PlexilExec:handleConditionsChanged]Node 'theLoop' is an assignment node that is no longer possibly executing.  Removing it from resource contention.
[PlexilExec:handleConditionsChanged]Placing node 'theLoop' on the state change queue in position 9
[PlexilExec:handleConditionsChanged]Node theSpoiler had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'theSpoiler' for state transition.
[PlexilExec:handleConditionsChanged]Node 'theSpoiler' is an assignment node that could be executing.  Adding it to the resource contention list 
[PlexilExec:addToResourceContention]Adding node 'theSpoiler' to resource contention.
[PlexilExec:resolveResourceConflicts]Node 'theSpoiler' has best priority.  Adding it to be executed in position 10
[PlexilExec:step][3:0] State change queue: theLoop theSpoiler 
[PlexilExec:step][3:0:0] Transitioning node theLoop from EXECUTING to ITERATION_ENDED
[PlexilExec:notifyNodeConditionChanged] for node NonLocalExit
[PlexilExec:notifyNodeConditionChanged] for node theLoop
[PlexilExec:step][3:0:1] Transitioning node theSpoiler from WAITING to EXECUTING
[PlexilExec:notifyNodeConditionChanged] for node theSpoiler
[PlexilExec:handleNeedsExecution]Storing action for node 'theSpoiler' of type 'Assignment' to be executed.
[PlexilExec:performAssignments] performing 1 assignments and 0 retractions
[Test:testOutput]Assigning (Variable Boolean quitLooping 0x7f90b25002d8 [a](0)) to 1
[PlexilExec:cycle]==>End cycle 3
[PlexilExec:printPlan]
NonLocalExit{
 State: EXECUTING (0)
 EndCondition: (AllChildrenFinished Boolean 0x7f90b2500910 [a](0))
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean 0x7f90b2500880 [i](0))
 loopCount: (Variable Integer loopCount 0x7f90b2500358 [a](2))
 quitLooping: (Variable Boolean quitLooping 0x7f90b25002d8 [a](1))
  theLoop{
   State: ITERATION_ENDED (0)
   ExitCondition: (Variable Boolean quitLooping 0x7f90b25002d8 [a](1))
   RepeatCondition: (LT Boolean 0x7f90b2500990 [a](1) (Variable Integer loopCount 0x7f90b2500358 [a](2)) (Constant Integer 0x7f90b2500980 [a](5)))
   ActionCompleteCondition: (InternalVariable Boolean ack 0x7f90b2500570 [i](1))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x7f90b25005b0 [i](0))
  }
  theSpoiler{
   State: EXECUTING (0)
   StartCondition: (EQ Boolean 0x7f90b2500ab0 [i](1) (Variable Integer loopCount 0x7f90b2500358 [a](2)) (Constant Integer 0x7f90b2500aa0 [a](2)))
   ActionCompleteCondition: (InternalVariable Boolean ack 0x7f90b25007b0 [a](1))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x7f90b25007f0 [i](0))
  }
}

[PlexilExec:cycle]==>Start cycle 4
[PlexilExec:step][4:0] Check queue: NonLocalExit theLoop theSpoiler 
[PlexilExec:handleConditionsChanged]Node theLoop had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'theLoop' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'theLoop' on the state change queue in position 11
[PlexilExec:handleConditionsChanged]Node theSpoiler had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'theSpoiler' for state transition.
[PlexilExec:handleConditionsChanged]Node 'theSpoiler' is an assignment node that is no longer possibly executing.  Removing it from resource contention.
[PlexilExec:handleConditionsChanged]Placing node 'theSpoiler' on the state change queue in position 12
[PlexilExec:step][4:0] State change queue: theLoop theSpoiler 
[PlexilExec:step][4:0:0] Transitioning node theLoop from ITERATION_ENDED to WAITING
[PlexilExec:notifyNodeConditionChanged] for node NonLocalExit
[PlexilExec:notifyNodeConditionChanged] for node theLoop
[PlexilExec:step][4:0:1] Transitioning node theSpoiler from EXECUTING to ITERATION_ENDED
[PlexilExec:notifyNodeConditionChanged] for node theSpoiler
[PlexilExec:step][4:1] Check queue: NonLocalExit theLoop theSpoiler 
[PlexilExec:handleConditionsChanged]Node theLoop had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'theLoop' for state transition.
[PlexilExec:handleConditionsChanged]Node 'theLoop' is an assignment node that is no longer possibly executing.  Removing it from resource contention.
[PlexilExec:handleConditionsChanged]Placing node 'theLoop' on the state change queue in position 13
[PlexilExec:handleConditionsChanged]Node theSpoiler had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'theSpoiler' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'theSpoiler' on the state change queue in position 14
[PlexilExec:step][4:1] State change queue: theLoop theSpoiler 
[PlexilExec:step][4:1:0] Transitioning node theLoop from WAITING to FINISHED
[PlexilExec:notifyNodeConditionChanged] for node NonLocalExit
[PlexilExec:notifyNodeConditionChanged] for node theLoop
[PlexilExec:step][4:1:1] Transitioning node theSpoiler from ITERATION_ENDED to FINISHED
[PlexilExec:notifyNodeConditionChanged] for node theSpoiler
[PlexilExec:step][4:2] Check queue: NonLocalExit theLoop theSpoiler 
[PlexilExec:handleConditionsChanged]Node NonLocalExit had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'NonLocalExit' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'NonLocalExit' on the state change queue in position 15
[PlexilExec:step][4:2] State change queue: NonLocalExit 
[PlexilExec:step][4:2:0] Transitioning node NonLocalExit from EXECUTING to FINISHING
[PlexilExec:notifyNodeConditionChanged] for node NonLocalExit
[PlexilExec:step][4:3] Check queue: NonLocalExit 
[PlexilExec:handleConditionsChanged]Node NonLocalExit had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'NonLocalExit' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'NonLocalExit' on the state change queue in position 16
[PlexilExec:step][4:3] State change queue: NonLocalExit 
[PlexilExec:step][4:3:0] Transitioning node NonLocalExit from FINISHING to ITERATION_ENDED
[PlexilExec:notifyNodeConditionChanged] for node NonLocalExit
[PlexilExec:step][4:4] Check queue: NonLocalExit 
[PlexilExec:handleConditionsChanged]Node NonLocalExit had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'NonLocalExit' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'NonLocalExit' on the state change queue in position 17
[PlexilExec:step][4:4] State change queue: NonLocalExit 
[PlexilExec:step][4:4:0] Transitioning node NonLocalExit from ITERATION_ENDED to FINISHED
[PlexilExec:performAssignments] performing 0 assignments and 0 retractions
[PlexilExec:cycle]==>End cycle 4
[PlexilExec:printPlan]
NonLocalExit{
 State: FINISHED (0)
 Outcome: SUCCESS
 loopCount: (Variable Integer loopCount 0x7f90b2500358 [i](UNKNOWN))
 quitLooping: (Variable Boolean quitLooping 0x7f90b25002d8 [i](UNKNOWN))
  theLoop{
   State: FINISHED (0)
   Outcome: SKIPPED
  }
  theSpoiler{
   State: FINISHED (0)
   Outcome: SUCCESS
  }
}

