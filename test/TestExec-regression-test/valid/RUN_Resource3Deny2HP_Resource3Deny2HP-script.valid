[PlexilExec:addPlan]Added plan: 
Resource3Deny2HP{
 State: INACTIVE (0)
  C1{
   State: INACTIVE (0)
  }
  C2{
   State: INACTIVE (0)
  }
  C3{
   State: INACTIVE (0)
  }
}

[Node:notifyChanged] adding Resource3Deny2HP 0x5600d9ac7520 to check queue
[PlexilExec:step] ==>Start cycle 1
[PlexilExec:step][1:0] Check queue: Resource3Deny2HP 
[PlexilExec:step] Node Resource3Deny2HP 0x5600d9ac7520 can transition from INACTIVE to WAITING
[PlexilExec:step] adding Resource3Deny2HP 0x5600d9ac7520 to state change queue
[PlexilExec:step][1:0] State change queue: Resource3Deny2HP 
[PlexilExec:step][1:0:0] Transitioning NodeList node Resource3Deny2HP 0x5600d9ac7520 from INACTIVE to WAITING
[Node:notifyChanged] adding Resource3Deny2HP 0x5600d9ac7520 to check queue
[PlexilExec:step][1:1] Check queue: Resource3Deny2HP 
[PlexilExec:step] Node Resource3Deny2HP 0x5600d9ac7520 can transition from WAITING to EXECUTING
[PlexilExec:step] adding Resource3Deny2HP 0x5600d9ac7520 to state change queue
[PlexilExec:step][1:1] State change queue: Resource3Deny2HP 
[PlexilExec:step][1:1:0] Transitioning NodeList node Resource3Deny2HP 0x5600d9ac7520 from WAITING to EXECUTING
[Node:notifyChanged] adding Resource3Deny2HP 0x5600d9ac7520 to check queue
[Node:notifyChanged] adding C1 0x5600d9ac7720 to check queue
[Node:notifyChanged] adding C2 0x5600d9ac7c00 to check queue
[Node:notifyChanged] adding C3 0x5600d9ac8020 to check queue
[PlexilExec:step][1:2] Check queue: Resource3Deny2HP C1 C2 C3 
[PlexilExec:step] Node C1 0x5600d9ac7720 can transition from INACTIVE to WAITING
[PlexilExec:step] adding C1 0x5600d9ac7720 to state change queue
[PlexilExec:step] Node C2 0x5600d9ac7c00 can transition from INACTIVE to WAITING
[PlexilExec:step] adding C2 0x5600d9ac7c00 to state change queue
[PlexilExec:step] Node C3 0x5600d9ac8020 can transition from INACTIVE to WAITING
[PlexilExec:step] adding C3 0x5600d9ac8020 to state change queue
[PlexilExec:step][1:2] State change queue: C1 C2 C3 
[PlexilExec:step][1:2:0] Transitioning Command node C1 0x5600d9ac7720 from INACTIVE to WAITING
[Node:notifyChanged] adding C1 0x5600d9ac7720 to check queue
[Node:notifyChanged] adding Resource3Deny2HP 0x5600d9ac7520 to check queue
[PlexilExec:step][1:2:1] Transitioning Command node C2 0x5600d9ac7c00 from INACTIVE to WAITING
[Node:notifyChanged] adding C2 0x5600d9ac7c00 to check queue
[PlexilExec:step][1:2:2] Transitioning Command node C3 0x5600d9ac8020 from INACTIVE to WAITING
[Node:notifyChanged] adding C3 0x5600d9ac8020 to check queue
[PlexilExec:step][1:3] Check queue: C1 Resource3Deny2HP C2 C3 
[PlexilExec:step] Node C1 0x5600d9ac7720 can transition from WAITING to EXECUTING
[PlexilExec:step] adding C1 0x5600d9ac7720 to state change queue
[PlexilExec:step] Node C2 0x5600d9ac7c00 can transition from WAITING to EXECUTING
[PlexilExec:step] adding C2 0x5600d9ac7c00 to state change queue
[PlexilExec:step] Node C3 0x5600d9ac8020 can transition from WAITING to EXECUTING
[PlexilExec:step] adding C3 0x5600d9ac8020 to state change queue
[PlexilExec:step][1:3] State change queue: C1 C2 C3 
[PlexilExec:step][1:3:0] Transitioning Command node C1 0x5600d9ac7720 from WAITING to EXECUTING
[Node:notifyChanged] adding C1 0x5600d9ac7720 to check queue
[Node:notifyChanged] adding Resource3Deny2HP 0x5600d9ac7520 to check queue
[PlexilExec:step][1:3:1] Transitioning Command node C2 0x5600d9ac7c00 from WAITING to EXECUTING
[Node:notifyChanged] adding C2 0x5600d9ac7c00 to check queue
[PlexilExec:step][1:3:2] Transitioning Command node C3 0x5600d9ac8020 from WAITING to EXECUTING
[Node:notifyChanged] adding C3 0x5600d9ac8020 to check queue
[Test:testOutput]Executing c3() with ack (CommandHandleVariable NodeCommandHandle 0x5600d9ac81d0 [a]([unknown_value]))
[Test:testOutput]Permission to execute c1 has been denied by the resource arbiter.
[Test:testOutput]Permission to execute c2 has been denied by the resource arbiter.
[PlexilExec:step] ==>End cycle 1
[PlexilExec:printPlan]
Resource3Deny2HP{
 State: EXECUTING (0)
 EndCondition: (AllChildrenFinished Boolean Resource3Deny2HP 0x5600d9ac76b8 [a](false))
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean Resource3Deny2HP 0x5600d9ac7670 [i](false))
  C1{
   State: EXECUTING (0)
   EndCondition: (OR Boolean 0x5600d9ac8500 [a](true) (Interruptible Boolean C1 0x5600d9ac84b0 [a](true)) (EQ Boolean 0x5600d9ac83b0 [a](false) (Constant Integer 0x5600d9ac8410 [a](10)) (Variable Integer returnValue 0x5600d9ac78f0 [a](-1))))
   PostCondition: (EQ Boolean 0x5600d9ac8430 [i](false) (CommandHandleVariable NodeCommandHandle 0x5600d9ac7ac0 [a](COMMAND_DENIED)) (CommandHandleValue NodeCommandHandle 0x7f4167ddc3d0 [a](COMMAND_SENT_TO_SYSTEM)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x5600d9ac7a78 [i](true))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x5600d9ac7b00 [a](false))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x5600d9ac7ac0 [a](COMMAND_DENIED))
   mem_priority: (Variable Integer mem_priority 0x5600d9ac79b0 [a](5))
   returnValue: (Variable Integer returnValue 0x5600d9ac78f0 [a](-1))
  }
  C2{
   State: EXECUTING (0)
   PostCondition: (EQ Boolean 0x5600d9ac8760 [i](false) (CommandHandleVariable NodeCommandHandle 0x5600d9ac7f00 [a](COMMAND_DENIED)) (CommandHandleValue NodeCommandHandle 0x7f4167ddc3d0 [a](COMMAND_SENT_TO_SYSTEM)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x5600d9ac7eb8 [i](true))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x5600d9ac7f40 [a](false))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x5600d9ac7f00 [a](COMMAND_DENIED))
   mem_priority2: (Variable Integer mem_priority2 0x5600d9ac7df0 [a](10))
  }
  C3{
   State: EXECUTING (0)
   PostCondition: (EQ Boolean 0x5600d9ac8a10 [i]([unknown_value]) (CommandHandleVariable NodeCommandHandle 0x5600d9ac81d0 [a]([unknown_value])) (CommandHandleValue NodeCommandHandle 0x7f4167ddc3d0 [a](COMMAND_SENT_TO_SYSTEM)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x5600d9ac8188 [i](false))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x5600d9ac8210 [a](false))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x5600d9ac81d0 [a]([unknown_value]))
  }
}

[Test:testOutput]Sending command ACK c3() = (string)COMMAND_SENT_TO_SYSTEM
[PlexilExec:step] ==>Start cycle 2
[PlexilExec:step][2:0] Check queue: C1 Resource3Deny2HP C2 C3 
[PlexilExec:step] Node C1 0x5600d9ac7720 can transition from EXECUTING to FINISHING
[PlexilExec:step] adding C1 0x5600d9ac7720 to state change queue
[PlexilExec:step] Node C2 0x5600d9ac7c00 can transition from EXECUTING to FINISHING
[PlexilExec:step] adding C2 0x5600d9ac7c00 to state change queue
[PlexilExec:step] Node C3 0x5600d9ac8020 can transition from EXECUTING to FINISHING
[PlexilExec:step] adding C3 0x5600d9ac8020 to state change queue
[PlexilExec:step][2:0] State change queue: C1 C2 C3 
[PlexilExec:step][2:0:0] Transitioning Command node C1 0x5600d9ac7720 from EXECUTING to FINISHING
[Node:notifyChanged] adding C1 0x5600d9ac7720 to check queue
[Node:notifyChanged] adding Resource3Deny2HP 0x5600d9ac7520 to check queue
[PlexilExec:step][2:0:1] Transitioning Command node C2 0x5600d9ac7c00 from EXECUTING to FINISHING
[Node:notifyChanged] adding C2 0x5600d9ac7c00 to check queue
[PlexilExec:step][2:0:2] Transitioning Command node C3 0x5600d9ac8020 from EXECUTING to FINISHING
[Node:notifyChanged] adding C3 0x5600d9ac8020 to check queue
[PlexilExec:step][2:1] Check queue: C1 Resource3Deny2HP C2 C3 
[PlexilExec:step] Node C1 0x5600d9ac7720 can transition from FINISHING to ITERATION_ENDED
[PlexilExec:step] adding C1 0x5600d9ac7720 to state change queue
[PlexilExec:step] Node C2 0x5600d9ac7c00 can transition from FINISHING to ITERATION_ENDED
[PlexilExec:step] adding C2 0x5600d9ac7c00 to state change queue
[PlexilExec:step] Node C3 0x5600d9ac8020 can transition from FINISHING to ITERATION_ENDED
[PlexilExec:step] adding C3 0x5600d9ac8020 to state change queue
[PlexilExec:step][2:1] State change queue: C1 C2 C3 
[PlexilExec:step][2:1:0] Transitioning Command node C1 0x5600d9ac7720 from FINISHING to ITERATION_ENDED
[Node:notifyChanged] adding C1 0x5600d9ac7720 to check queue
[Node:notifyChanged] adding Resource3Deny2HP 0x5600d9ac7520 to check queue
[PlexilExec:step][2:1:1] Transitioning Command node C2 0x5600d9ac7c00 from FINISHING to ITERATION_ENDED
[Node:notifyChanged] adding C2 0x5600d9ac7c00 to check queue
[PlexilExec:step][2:1:2] Transitioning Command node C3 0x5600d9ac8020 from FINISHING to ITERATION_ENDED
[Node:notifyChanged] adding C3 0x5600d9ac8020 to check queue
[PlexilExec:step][2:2] Check queue: C1 Resource3Deny2HP C2 C3 
[PlexilExec:step] Node C1 0x5600d9ac7720 can transition from ITERATION_ENDED to FINISHED
[PlexilExec:step] adding C1 0x5600d9ac7720 to state change queue
[PlexilExec:step] Node C2 0x5600d9ac7c00 can transition from ITERATION_ENDED to FINISHED
[PlexilExec:step] adding C2 0x5600d9ac7c00 to state change queue
[PlexilExec:step] Node C3 0x5600d9ac8020 can transition from ITERATION_ENDED to FINISHED
[PlexilExec:step] adding C3 0x5600d9ac8020 to state change queue
[PlexilExec:step][2:2] State change queue: C1 C2 C3 
[PlexilExec:step][2:2:0] Transitioning Command node C1 0x5600d9ac7720 from ITERATION_ENDED to FINISHED
[Node:notifyChanged] adding C1 0x5600d9ac7720 to check queue
[Node:notifyChanged] adding Resource3Deny2HP 0x5600d9ac7520 to check queue
[PlexilExec:step][2:2:1] Transitioning Command node C2 0x5600d9ac7c00 from ITERATION_ENDED to FINISHED
[Node:notifyChanged] adding C2 0x5600d9ac7c00 to check queue
[PlexilExec:step][2:2:2] Transitioning Command node C3 0x5600d9ac8020 from ITERATION_ENDED to FINISHED
[Node:notifyChanged] adding C3 0x5600d9ac8020 to check queue
[PlexilExec:step][2:3] Check queue: C1 Resource3Deny2HP C2 C3 
[PlexilExec:step] Node Resource3Deny2HP 0x5600d9ac7520 can transition from EXECUTING to FINISHING
[PlexilExec:step] adding Resource3Deny2HP 0x5600d9ac7520 to state change queue
[PlexilExec:step][2:3] State change queue: Resource3Deny2HP 
[PlexilExec:step][2:3:0] Transitioning NodeList node Resource3Deny2HP 0x5600d9ac7520 from EXECUTING to FINISHING
[Node:notifyChanged] adding Resource3Deny2HP 0x5600d9ac7520 to check queue
[PlexilExec:step][2:4] Check queue: Resource3Deny2HP 
[PlexilExec:step] Node Resource3Deny2HP 0x5600d9ac7520 can transition from FINISHING to ITERATION_ENDED
[PlexilExec:step] adding Resource3Deny2HP 0x5600d9ac7520 to state change queue
[PlexilExec:step][2:4] State change queue: Resource3Deny2HP 
[PlexilExec:step][2:4:0] Transitioning NodeList node Resource3Deny2HP 0x5600d9ac7520 from FINISHING to ITERATION_ENDED
[Node:notifyChanged] adding Resource3Deny2HP 0x5600d9ac7520 to check queue
[PlexilExec:step][2:5] Check queue: Resource3Deny2HP 
[PlexilExec:step] Node Resource3Deny2HP 0x5600d9ac7520 can transition from ITERATION_ENDED to FINISHED
[PlexilExec:step] adding Resource3Deny2HP 0x5600d9ac7520 to state change queue
[PlexilExec:step][2:5] State change queue: Resource3Deny2HP 
[PlexilExec:step][2:5:0] Transitioning NodeList node Resource3Deny2HP 0x5600d9ac7520 from ITERATION_ENDED to FINISHED
[PlexilExec:step] Marking Resource3Deny2HP 0x5600d9ac7520 as a finished root node
[PlexilExec:step] ==>End cycle 2
[PlexilExec:printPlan]
Resource3Deny2HP{
 State: FINISHED (0)
 Outcome: SUCCESS
  C1{
   State: FINISHED (0)
   Outcome: FAILURE
   Failure type: POST_CONDITION_FAILED
   Command handle: (CommandHandleVariable NodeCommandHandle 0x5600d9ac7ac0 [i]([unknown_value]))
   mem_priority: (Variable Integer mem_priority 0x5600d9ac79b0 [i]([unknown_value]))
   returnValue: (Variable Integer returnValue 0x5600d9ac78f0 [i]([unknown_value]))
  }
  C2{
   State: FINISHED (0)
   Outcome: FAILURE
   Failure type: POST_CONDITION_FAILED
   Command handle: (CommandHandleVariable NodeCommandHandle 0x5600d9ac7f00 [i]([unknown_value]))
   mem_priority2: (Variable Integer mem_priority2 0x5600d9ac7df0 [i]([unknown_value]))
  }
  C3{
   State: FINISHED (0)
   Outcome: SUCCESS
   Command handle: (CommandHandleVariable NodeCommandHandle 0x5600d9ac81d0 [i]([unknown_value]))
  }
}

