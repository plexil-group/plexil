[PlexilExec:addPlan]Added plan: 
InactiveAncestorInvariantTest{
 State: INACTIVE (0)
  TheParent{
   State: INACTIVE (0)
    TheChild{
     State: INACTIVE (0)
    }
  }
}

[Node:notifyChanged] adding InactiveAncestorInvariantTest 0x7f9439e004c0 to check queue
[PlexilExec:step] ==>Start cycle 1
[PlexilExec:step][1:0] Check queue: InactiveAncestorInvariantTest 
[PlexilExec:step] Node InactiveAncestorInvariantTest 0x7f9439e004c0 can transition from INACTIVE to WAITING
[PlexilExec:step] adding InactiveAncestorInvariantTest 0x7f9439e004c0 to state change queue
[PlexilExec:step][1:0] State change queue: InactiveAncestorInvariantTest 
[PlexilExec:step][1:0:0] Transitioning NodeList node InactiveAncestorInvariantTest 0x7f9439e004c0 from INACTIVE to WAITING
[Node:notifyChanged] adding InactiveAncestorInvariantTest 0x7f9439e004c0 to check queue
[PlexilExec:step][1:1] Check queue: InactiveAncestorInvariantTest 
[PlexilExec:step] Node InactiveAncestorInvariantTest 0x7f9439e004c0 can transition from WAITING to EXECUTING
[PlexilExec:step] adding InactiveAncestorInvariantTest 0x7f9439e004c0 to state change queue
[PlexilExec:step][1:1] State change queue: InactiveAncestorInvariantTest 
[PlexilExec:step][1:1:0] Transitioning NodeList node InactiveAncestorInvariantTest 0x7f9439e004c0 from WAITING to EXECUTING
[Node:notifyChanged] adding InactiveAncestorInvariantTest 0x7f9439e004c0 to check queue
[Node:notifyChanged] adding TheParent 0x7f9439e00720 to check queue
[PlexilExec:step][1:2] Check queue: InactiveAncestorInvariantTest TheParent 
[PlexilExec:step] Node TheParent 0x7f9439e00720 can transition from INACTIVE to WAITING
[PlexilExec:step] adding TheParent 0x7f9439e00720 to state change queue
[PlexilExec:step][1:2] State change queue: TheParent 
[PlexilExec:step][1:2:0] Transitioning NodeList node TheParent 0x7f9439e00720 from INACTIVE to WAITING
[Node:notifyChanged] adding TheParent 0x7f9439e00720 to check queue
[Node:notifyChanged] adding InactiveAncestorInvariantTest 0x7f9439e004c0 to check queue
[PlexilExec:step][1:3] Check queue: TheParent InactiveAncestorInvariantTest 
[PlexilExec:step] Node TheParent 0x7f9439e00720 can transition from WAITING to EXECUTING
[PlexilExec:step] adding TheParent 0x7f9439e00720 to state change queue
[PlexilExec:step][1:3] State change queue: TheParent 
[PlexilExec:step][1:3:0] Transitioning NodeList node TheParent 0x7f9439e00720 from WAITING to EXECUTING
[Node:notifyChanged] adding TheParent 0x7f9439e00720 to check queue
[Node:notifyChanged] adding TheChild 0x7f9439e00920 to check queue
[Node:notifyChanged] adding InactiveAncestorInvariantTest 0x7f9439e004c0 to check queue
[PlexilExec:step][1:4] Check queue: TheParent TheChild InactiveAncestorInvariantTest 
[PlexilExec:step] Node TheParent 0x7f9439e00720 can transition from EXECUTING to FAILING
[PlexilExec:step] adding TheParent 0x7f9439e00720 to state change queue
[PlexilExec:step] Node TheChild 0x7f9439e00920 can transition from INACTIVE to FINISHED
[PlexilExec:step] adding TheChild 0x7f9439e00920 to state change queue
[PlexilExec:step] Node InactiveAncestorInvariantTest 0x7f9439e004c0 can transition from EXECUTING to FAILING
[PlexilExec:step] adding InactiveAncestorInvariantTest 0x7f9439e004c0 to state change queue
[PlexilExec:step][1:4] State change queue: TheParent TheChild InactiveAncestorInvariantTest 
[PlexilExec:step][1:4:0] Transitioning NodeList node TheParent 0x7f9439e00720 from EXECUTING to FAILING
[Node:notifyChanged] adding TheParent 0x7f9439e00720 to check queue
[Node:notifyChanged] transitioning node InactiveAncestorInvariantTest 0x7f9439e004c0 will be rechecked
[Node:notifyChanged] transitioning node TheChild 0x7f9439e00920 will be rechecked
[Node:notifyChanged] adding TheChild 0x7f9439e00920 to check queue
[PlexilExec:step][1:4:1] Transitioning Empty node TheChild 0x7f9439e00920 from INACTIVE to FINISHED
[Node:notifyChanged] adding InactiveAncestorInvariantTest 0x7f9439e004c0 to check queue
[PlexilExec:step][1:4:2] Transitioning NodeList node InactiveAncestorInvariantTest 0x7f9439e004c0 from EXECUTING to FAILING
[PlexilExec:step][1:5] Check queue: TheParent TheChild InactiveAncestorInvariantTest 
[PlexilExec:step] Node TheParent 0x7f9439e00720 can transition from FAILING to FINISHED
[PlexilExec:step] adding TheParent 0x7f9439e00720 to state change queue
[PlexilExec:step][1:5] State change queue: TheParent 
[PlexilExec:step][1:5:0] Transitioning NodeList node TheParent 0x7f9439e00720 from FAILING to FINISHED
[Node:notifyChanged] adding TheParent 0x7f9439e00720 to check queue
[Node:notifyChanged] adding InactiveAncestorInvariantTest 0x7f9439e004c0 to check queue
[PlexilExec:step][1:6] Check queue: TheParent InactiveAncestorInvariantTest 
[PlexilExec:step] Node InactiveAncestorInvariantTest 0x7f9439e004c0 can transition from FAILING to ITERATION_ENDED
[PlexilExec:step] adding InactiveAncestorInvariantTest 0x7f9439e004c0 to state change queue
[PlexilExec:step][1:6] State change queue: InactiveAncestorInvariantTest 
[PlexilExec:step][1:6:0] Transitioning NodeList node InactiveAncestorInvariantTest 0x7f9439e004c0 from FAILING to ITERATION_ENDED
[Node:notifyChanged] adding InactiveAncestorInvariantTest 0x7f9439e004c0 to check queue
[PlexilExec:step][1:7] Check queue: InactiveAncestorInvariantTest 
[PlexilExec:step] Node InactiveAncestorInvariantTest 0x7f9439e004c0 can transition from ITERATION_ENDED to FINISHED
[PlexilExec:step] adding InactiveAncestorInvariantTest 0x7f9439e004c0 to state change queue
[PlexilExec:step][1:7] State change queue: InactiveAncestorInvariantTest 
[PlexilExec:step][1:7:0] Transitioning NodeList node InactiveAncestorInvariantTest 0x7f9439e004c0 from ITERATION_ENDED to FINISHED
[PlexilExec:step] Marking InactiveAncestorInvariantTest 0x7f9439e004c0 as a finished root node
[PlexilExec:step] ==>End cycle 1
[PlexilExec:printPlan]
InactiveAncestorInvariantTest{
 State: FINISHED (0)
 Outcome: FAILURE
 Failure type: INVARIANT_CONDITION_FAILED
  TheParent{
   State: FINISHED (0)
   Outcome: FAILURE
   Failure type: PARENT_FAILED
    TheChild{
     State: FINISHED (0)
     Outcome: SKIPPED
    }
  }
}

