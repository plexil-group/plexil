[PlexilExec:addPlan]Added plan: 
simple-closedloop-command-a3{
 State: INACTIVE (0)
  Drive{
   State: INACTIVE (0)
  }
}

[PlexilExec:notifyNodeConditionChanged] for node simple-closedloop-command-a3 0x7fd591c04770
[PlexilExec:cycle] ==>Start cycle 1
[PlexilExec:step][1:0] Check queue: simple-closedloop-command-a3 0x7fd591c04770 
[PlexilExec:handleConditionsChanged] Considering node simple-closedloop-command-a3 0x7fd591c04770 for state transition.
[PlexilExec:addStateChangeNode] Placing node simple-closedloop-command-a3 0x7fd591c04770 on the state change queue in position 1
[PlexilExec:step][1:0] State change queue: simple-closedloop-command-a3 0x7fd591c04770 
[PlexilExec:step][1:0:0] Transitioning node simple-closedloop-command-a3 0x7fd591c04770 from INACTIVE to WAITING
[PlexilExec:notifyNodeConditionChanged] for node simple-closedloop-command-a3 0x7fd591c04770
[PlexilExec:step][1:1] Check queue: simple-closedloop-command-a3 0x7fd591c04770 
[PlexilExec:handleConditionsChanged] Considering node simple-closedloop-command-a3 0x7fd591c04770 for state transition.
[PlexilExec:addStateChangeNode] Placing node simple-closedloop-command-a3 0x7fd591c04770 on the state change queue in position 2
[PlexilExec:step][1:1] State change queue: simple-closedloop-command-a3 0x7fd591c04770 
[PlexilExec:step][1:1:0] Transitioning node simple-closedloop-command-a3 0x7fd591c04770 from WAITING to EXECUTING
[PlexilExec:notifyNodeConditionChanged] for node simple-closedloop-command-a3 0x7fd591c04770
[PlexilExec:notifyNodeConditionChanged] for node Drive 0x7fd591c04a40
[PlexilExec:handleNeedsExecution] Storing action for node simple-closedloop-command-a3 0x7fd591c04770 of type NodeList to be executed.
[PlexilExec:step][1:2] Check queue: simple-closedloop-command-a3 0x7fd591c04770 Drive 0x7fd591c04a40 
[PlexilExec:handleConditionsChanged] Considering node Drive 0x7fd591c04a40 for state transition.
[PlexilExec:addStateChangeNode] Placing node Drive 0x7fd591c04a40 on the state change queue in position 3
[PlexilExec:step][1:2] State change queue: Drive 0x7fd591c04a40 
[PlexilExec:step][1:2:0] Transitioning node Drive 0x7fd591c04a40 from INACTIVE to WAITING
[PlexilExec:notifyNodeConditionChanged] for node Drive 0x7fd591c04a40
[PlexilExec:notifyNodeConditionChanged] for node simple-closedloop-command-a3 0x7fd591c04770
[PlexilExec:step][1:3] Check queue: Drive 0x7fd591c04a40 simple-closedloop-command-a3 0x7fd591c04770 
[PlexilExec:handleConditionsChanged] Considering node Drive 0x7fd591c04a40 for state transition.
[PlexilExec:addStateChangeNode] Placing node Drive 0x7fd591c04a40 on the state change queue in position 4
[PlexilExec:step][1:3] State change queue: Drive 0x7fd591c04a40 
[PlexilExec:step][1:3:0] Transitioning node Drive 0x7fd591c04a40 from WAITING to EXECUTING
[PlexilExec:notifyNodeConditionChanged] for node Drive 0x7fd591c04a40
[PlexilExec:handleNeedsExecution] Storing action for node Drive 0x7fd591c04a40 of type Command to be executed.
[PlexilExec:notifyNodeConditionChanged] for node simple-closedloop-command-a3 0x7fd591c04770
[PlexilExec:performAssignments] performing 0 assignments and 0 retractions
[Test:testOutput]Executing drive() into (Variable Integer retTestFunction 0x7fd591c049b8 [a](-1)) with ack (CommandHandleVariable NodeCommandHandle 0x7fd591c04bd0 [a](UNKNOWN))
[PlexilExec:cycle] ==>End cycle 1
[PlexilExec:printPlan]
simple-closedloop-command-a3{
 State: EXECUTING (0)
 EndCondition: (AllChildrenFinished Boolean simple-closedloop-command-a30x7fd591c04cd0 [a](0))
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean simple-closedloop-command-a30x7fd591c048a0 [i](0))
 retTestFunction: (Variable Integer retTestFunction 0x7fd591c049b8 [a](-1))
  Drive{
   State: EXECUTING (0)
   EndCondition: (OR Boolean 0x7fd591c04e70 [a](0) (Interruptible Boolean Drive0x7fd591c04e20 [a](0)) (EQ Boolean 0x7fd591c04d50 [a](0) (Constant Integer 0x7fd591c04db0 [a](10)) (Variable Integer retTestFunction 0x7fd591c049b8 [a](-1))))
   PostCondition: (EQ Boolean 0x7fd591c04dc0 [i](UNKNOWN) (CommandHandleVariable NodeCommandHandle 0x7fd591c04bd0 [a](UNKNOWN)) (CommandHandleValue NodeCommandHandle 0x10386c0d0 [a](COMMAND_DENIED)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x7fd591c04b88 [i](0))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x7fd591c04c10 [a](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fd591c04bd0 [a](UNKNOWN))
  }
}

[Test:testOutput]Sending command ACK drive() = (string)COMMAND_SENT_TO_SYSTEM
[PlexilExec:cycle] ==>Start cycle 2
[PlexilExec:step][2:0] Check queue: Drive 0x7fd591c04a40 simple-closedloop-command-a3 0x7fd591c04770 
[PlexilExec:performAssignments] performing 0 assignments and 0 retractions
[PlexilExec:cycle] ==>End cycle 2
[PlexilExec:printPlan]
simple-closedloop-command-a3{
 State: EXECUTING (0)
 EndCondition: (AllChildrenFinished Boolean simple-closedloop-command-a30x7fd591c04cd0 [a](0))
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean simple-closedloop-command-a30x7fd591c048a0 [i](0))
 retTestFunction: (Variable Integer retTestFunction 0x7fd591c049b8 [a](-1))
  Drive{
   State: EXECUTING (0)
   EndCondition: (OR Boolean 0x7fd591c04e70 [a](0) (Interruptible Boolean Drive0x7fd591c04e20 [a](0)) (EQ Boolean 0x7fd591c04d50 [a](0) (Constant Integer 0x7fd591c04db0 [a](10)) (Variable Integer retTestFunction 0x7fd591c049b8 [a](-1))))
   PostCondition: (EQ Boolean 0x7fd591c04dc0 [i](0) (CommandHandleVariable NodeCommandHandle 0x7fd591c04bd0 [a](COMMAND_SENT_TO_SYSTEM)) (CommandHandleValue NodeCommandHandle 0x10386c0d0 [a](COMMAND_DENIED)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x7fd591c04b88 [i](1))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x7fd591c04c10 [a](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fd591c04bd0 [a](COMMAND_SENT_TO_SYSTEM))
  }
}

[Test:testOutput]Sending command result drive() = 10
[PlexilExec:notifyNodeConditionChanged] for node Drive 0x7fd591c04a40
[PlexilExec:cycle] ==>Start cycle 3
[PlexilExec:step][3:0] Check queue: Drive 0x7fd591c04a40 
[PlexilExec:handleConditionsChanged] Considering node Drive 0x7fd591c04a40 for state transition.
[PlexilExec:addStateChangeNode] Placing node Drive 0x7fd591c04a40 on the state change queue in position 5
[PlexilExec:step][3:0] State change queue: Drive 0x7fd591c04a40 
[PlexilExec:step][3:0:0] Transitioning node Drive 0x7fd591c04a40 from EXECUTING to FINISHING
[PlexilExec:notifyNodeConditionChanged] for node Drive 0x7fd591c04a40
[PlexilExec:notifyNodeConditionChanged] for node simple-closedloop-command-a3 0x7fd591c04770
[PlexilExec:step][3:1] Check queue: Drive 0x7fd591c04a40 simple-closedloop-command-a3 0x7fd591c04770 
[PlexilExec:handleConditionsChanged] Considering node Drive 0x7fd591c04a40 for state transition.
[PlexilExec:addStateChangeNode] Placing node Drive 0x7fd591c04a40 on the state change queue in position 6
[PlexilExec:step][3:1] State change queue: Drive 0x7fd591c04a40 
[PlexilExec:step][3:1:0] Transitioning node Drive 0x7fd591c04a40 from FINISHING to ITERATION_ENDED
[PlexilExec:notifyNodeConditionChanged] for node Drive 0x7fd591c04a40
[PlexilExec:notifyNodeConditionChanged] for node simple-closedloop-command-a3 0x7fd591c04770
[PlexilExec:step][3:2] Check queue: Drive 0x7fd591c04a40 simple-closedloop-command-a3 0x7fd591c04770 
[PlexilExec:handleConditionsChanged] Considering node Drive 0x7fd591c04a40 for state transition.
[PlexilExec:addStateChangeNode] Placing node Drive 0x7fd591c04a40 on the state change queue in position 7
[PlexilExec:step][3:2] State change queue: Drive 0x7fd591c04a40 
[PlexilExec:step][3:2:0] Transitioning node Drive 0x7fd591c04a40 from ITERATION_ENDED to FINISHED
[PlexilExec:notifyNodeConditionChanged] for node Drive 0x7fd591c04a40
[PlexilExec:notifyNodeConditionChanged] for node simple-closedloop-command-a3 0x7fd591c04770
[PlexilExec:step][3:3] Check queue: Drive 0x7fd591c04a40 simple-closedloop-command-a3 0x7fd591c04770 
[PlexilExec:handleConditionsChanged] Considering node simple-closedloop-command-a3 0x7fd591c04770 for state transition.
[PlexilExec:addStateChangeNode] Placing node simple-closedloop-command-a3 0x7fd591c04770 on the state change queue in position 8
[PlexilExec:step][3:3] State change queue: simple-closedloop-command-a3 0x7fd591c04770 
[PlexilExec:step][3:3:0] Transitioning node simple-closedloop-command-a3 0x7fd591c04770 from EXECUTING to FINISHING
[PlexilExec:notifyNodeConditionChanged] for node simple-closedloop-command-a3 0x7fd591c04770
[PlexilExec:step][3:4] Check queue: simple-closedloop-command-a3 0x7fd591c04770 
[PlexilExec:handleConditionsChanged] Considering node simple-closedloop-command-a3 0x7fd591c04770 for state transition.
[PlexilExec:addStateChangeNode] Placing node simple-closedloop-command-a3 0x7fd591c04770 on the state change queue in position 9
[PlexilExec:step][3:4] State change queue: simple-closedloop-command-a3 0x7fd591c04770 
[PlexilExec:step][3:4:0] Transitioning node simple-closedloop-command-a3 0x7fd591c04770 from FINISHING to ITERATION_ENDED
[PlexilExec:notifyNodeConditionChanged] for node simple-closedloop-command-a3 0x7fd591c04770
[PlexilExec:step][3:5] Check queue: simple-closedloop-command-a3 0x7fd591c04770 
[PlexilExec:handleConditionsChanged] Considering node simple-closedloop-command-a3 0x7fd591c04770 for state transition.
[PlexilExec:addStateChangeNode] Placing node simple-closedloop-command-a3 0x7fd591c04770 on the state change queue in position 10
[PlexilExec:step][3:5] State change queue: simple-closedloop-command-a3 0x7fd591c04770 
[PlexilExec:step][3:5:0] Transitioning node simple-closedloop-command-a3 0x7fd591c04770 from ITERATION_ENDED to FINISHED
[PlexilExec:performAssignments] performing 0 assignments and 0 retractions
[PlexilExec:cycle] ==>End cycle 3
[PlexilExec:printPlan]
simple-closedloop-command-a3{
 State: FINISHED (0)
 Outcome: SUCCESS
 retTestFunction: (Variable Integer retTestFunction 0x7fd591c049b8 [i](UNKNOWN))
  Drive{
   State: FINISHED (0)
   Outcome: FAILURE
   Failure type: POST_CONDITION_FAILED
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fd591c04bd0 [i](UNKNOWN))
  }
}

