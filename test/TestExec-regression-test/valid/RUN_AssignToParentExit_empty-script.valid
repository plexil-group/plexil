[PlexilExec:addPlan]Added plan: 
AssignToParentExit{
 State: INACTIVE (0)
  Kid{
   State: INACTIVE (0)
  }
}

[PlexilExec:notifyNodeConditionChanged] for node AssignToParentExit
[PlexilExec:cycle]==>Start cycle 1
[PlexilExec:step][1:0] Check queue: AssignToParentExit 
[PlexilExec:handleConditionsChanged]Node AssignToParentExit had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'AssignToParentExit' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'AssignToParentExit' on the state change queue in position 1
[PlexilExec:step][1:0] State change queue: AssignToParentExit 
[PlexilExec:step][1:0:0] Transitioning node AssignToParentExit from INACTIVE to WAITING
[PlexilExec:notifyNodeConditionChanged] for node AssignToParentExit
[PlexilExec:notifyNodeConditionChanged] for node Kid
[PlexilExec:step][1:1] Check queue: AssignToParentExit Kid 
[PlexilExec:handleConditionsChanged]Node AssignToParentExit had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'AssignToParentExit' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'AssignToParentExit' on the state change queue in position 2
[PlexilExec:step][1:1] State change queue: AssignToParentExit 
[PlexilExec:step][1:1:0] Transitioning node AssignToParentExit from WAITING to EXECUTING
[PlexilExec:notifyNodeConditionChanged] for node AssignToParentExit
[PlexilExec:notifyNodeConditionChanged] for node Kid
[PlexilExec:handleNeedsExecution]Storing action for node 'AssignToParentExit' of type 'NodeList' to be executed.
[PlexilExec:step][1:2] Check queue: AssignToParentExit Kid 
[PlexilExec:handleConditionsChanged]Node Kid had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'Kid' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'Kid' on the state change queue in position 3
[PlexilExec:step][1:2] State change queue: Kid 
[PlexilExec:step][1:2:0] Transitioning node Kid from INACTIVE to WAITING
[PlexilExec:notifyNodeConditionChanged] for node AssignToParentExit
[PlexilExec:notifyNodeConditionChanged] for node Kid
[PlexilExec:step][1:3] Check queue: AssignToParentExit Kid 
[PlexilExec:handleConditionsChanged]Node Kid had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'Kid' for state transition.
[PlexilExec:handleConditionsChanged]Node 'Kid' is an assignment node that could be executing.  Adding it to the resource contention list 
[PlexilExec:addToResourceContention]Adding node 'Kid' to resource contention.
[PlexilExec:resolveResourceConflicts]Node 'Kid' has best priority.  Adding it to be executed in position 4
[PlexilExec:step][1:3] State change queue: Kid 
[PlexilExec:step][1:3:0] Transitioning node Kid from WAITING to EXECUTING
[PlexilExec:notifyNodeConditionChanged] for node AssignToParentExit
[PlexilExec:notifyNodeConditionChanged] for node Kid
[PlexilExec:handleNeedsExecution]Storing action for node 'Kid' of type 'Assignment' to be executed.
[PlexilExec:performAssignments] performing 1 assignments and 0 retractions
[Test:testOutput]Assigning (Variable Boolean step_failed 0x7fdd6a600700 [a](0)) to 1
[PlexilExec:cycle]==>End cycle 1
[PlexilExec:printPlan]
AssignToParentExit{
 State: EXECUTING (0)
 ExitCondition: (Variable Boolean step_failed 0x7fdd6a600700 [a](1))
 EndCondition: (EQ Boolean 0x7fdd6a600d10 [a](0) (StateVariable NodeState Kid 0x7fdd6a600880 [a](EXECUTING)) (NodeStateValue NodeState 0x10cda2820 [a](FINISHED)))
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean 0x7fdd6a600d80 [i](UNKNOWN))
 step_failed: (Variable Boolean step_failed 0x7fdd6a600700 [a](1))
  Kid{
   State: EXECUTING (0)
   AncestorExitCondition: (Variable Boolean step_failed 0x7fdd6a600700 [a](1))
   AncestorEndCondition: (EQ Boolean 0x7fdd6a600d10 [a](0) (StateVariable NodeState Kid 0x7fdd6a600880 [a](EXECUTING)) (NodeStateValue NodeState 0x10cda2820 [a](FINISHED)))
   ActionCompleteCondition: (InternalVariable Boolean Kid ack 0x7fdd6a6009e0 [a](1))
   AbortCompleteCondition: (InternalVariable Boolean Kid abortComplete 0x7fdd6a600a28 [i](UNKNOWN))
  }
}

[PlexilExec:cycle]==>Start cycle 2
[PlexilExec:step][2:0] Check queue: AssignToParentExit Kid 
[PlexilExec:handleConditionsChanged]Node AssignToParentExit had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'AssignToParentExit' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'AssignToParentExit' on the state change queue in position 5
[PlexilExec:handleConditionsChanged]Node Kid had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'Kid' for state transition.
[PlexilExec:handleConditionsChanged]Node 'Kid' is an assignment node that is failing, and is already in the resource contention list
[PlexilExec:handleConditionsChanged]Placing node 'Kid' on the state change queue in position 6
[PlexilExec:resolveResourceConflicts] Ignoring Assignments for variable 'step_failed', which has a retraction pending
[PlexilExec:step][2:0] State change queue: AssignToParentExit Kid 
[PlexilExec:step][2:0:0] Transitioning node AssignToParentExit from EXECUTING to FAILING
[PlexilExec:notifyNodeConditionChanged] for node AssignToParentExit
[PlexilExec:step][2:0:1] Transitioning node Kid from EXECUTING to FAILING
[PlexilExec:notifyNodeConditionChanged] for node Kid
[PlexilExec:performAssignments] performing 0 assignments and 1 retractions
[Test:testOutput]Restoring previous value of (Variable Boolean step_failed 0x7fdd6a600700 [a](1))
[PlexilExec:cycle]==>End cycle 2
[PlexilExec:printPlan]
AssignToParentExit{
 State: FAILING (0)
 ExitCondition: (Variable Boolean step_failed 0x7fdd6a600700 [a](0))
 EndCondition: (EQ Boolean 0x7fdd6a600d10 [a](0) (StateVariable NodeState Kid 0x7fdd6a600880 [a](FAILING)) (NodeStateValue NodeState 0x10cda2820 [a](FINISHED)))
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean 0x7fdd6a600d80 [a](0))
 step_failed: (Variable Boolean step_failed 0x7fdd6a600700 [a](0))
  Kid{
   State: FAILING (0)
   AncestorExitCondition: (Variable Boolean step_failed 0x7fdd6a600700 [a](0))
   AncestorEndCondition: (EQ Boolean 0x7fdd6a600d10 [a](0) (StateVariable NodeState Kid 0x7fdd6a600880 [a](FAILING)) (NodeStateValue NodeState 0x10cda2820 [a](FINISHED)))
   ActionCompleteCondition: (InternalVariable Boolean Kid ack 0x7fdd6a6009e0 [i](UNKNOWN))
   AbortCompleteCondition: (InternalVariable Boolean Kid abortComplete 0x7fdd6a600a28 [a](1))
  }
}

[PlexilExec:cycle]==>Start cycle 3
[PlexilExec:step][3:0] Check queue: AssignToParentExit Kid 
[PlexilExec:handleConditionsChanged]Node Kid had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'Kid' for state transition.
[PlexilExec:handleConditionsChanged]Node 'Kid' is an assignment node that is no longer possibly executing.  Removing it from resource contention.
[PlexilExec:handleConditionsChanged]Placing node 'Kid' on the state change queue in position 7
[PlexilExec:step][3:0] State change queue: Kid 
[PlexilExec:step][3:0:0] Transitioning node Kid from FAILING to FINISHED
[PlexilExec:notifyNodeConditionChanged] for node AssignToParentExit
[PlexilExec:notifyNodeConditionChanged] for node Kid
[PlexilExec:step][3:1] Check queue: AssignToParentExit Kid 
[PlexilExec:handleConditionsChanged]Node AssignToParentExit had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'AssignToParentExit' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'AssignToParentExit' on the state change queue in position 8
[PlexilExec:step][3:1] State change queue: AssignToParentExit 
[PlexilExec:step][3:1:0] Transitioning node AssignToParentExit from FAILING to ITERATION_ENDED
[PlexilExec:notifyNodeConditionChanged] for node AssignToParentExit
[PlexilExec:step][3:2] Check queue: AssignToParentExit 
[PlexilExec:handleConditionsChanged]Node AssignToParentExit had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'AssignToParentExit' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'AssignToParentExit' on the state change queue in position 9
[PlexilExec:step][3:2] State change queue: AssignToParentExit 
[PlexilExec:step][3:2:0] Transitioning node AssignToParentExit from ITERATION_ENDED to FINISHED
[PlexilExec:performAssignments] performing 0 assignments and 0 retractions
[PlexilExec:cycle]==>End cycle 3
[PlexilExec:printPlan]
AssignToParentExit{
 State: FINISHED (0)
 Outcome: INTERRUPTED
 Failure type: EXITED
 step_failed: (Variable Boolean step_failed 0x7fdd6a600700 [i](UNKNOWN))
  Kid{
   State: FINISHED (0)
   Outcome: INTERRUPTED
   Failure type: PARENT_EXITED
  }
}

