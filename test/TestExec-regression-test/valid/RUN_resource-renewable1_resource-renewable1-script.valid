[PlexilExec:addPlan]Added plan: 
SimpleTask{
 State: INACTIVE (0)
  C1{
   State: INACTIVE (0)
  }
  C2{
   State: INACTIVE (0)
  }
  C3{
   State: INACTIVE (0)
  }
  C4{
   State: INACTIVE (0)
  }
}

[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:cycle]==>Start cycle 1
[PlexilExec:step][1:0] Check queue: SimpleTask 
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 1
[PlexilExec:step][1:0] State change queue: SimpleTask 
[PlexilExec:step][1:0:0] Transitioning node SimpleTask from INACTIVE to WAITING
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:step][1:1] Check queue: SimpleTask 
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 2
[PlexilExec:step][1:1] State change queue: SimpleTask 
[PlexilExec:step][1:1:0] Transitioning node SimpleTask from WAITING to EXECUTING
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node C1
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:notifyNodeConditionChanged] for node C3
[PlexilExec:notifyNodeConditionChanged] for node C4
[PlexilExec:handleNeedsExecution]Storing action for node 'SimpleTask' of type 'NodeList' to be executed.
[PlexilExec:step][1:2] Check queue: SimpleTask C1 C2 C3 C4 
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C1' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C1' on the state change queue in position 3
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 4
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C3' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C3' on the state change queue in position 5
[PlexilExec:handleConditionsChanged]Node C4 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C4' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C4' on the state change queue in position 6
[PlexilExec:step][1:2] State change queue: C1 C2 C3 C4 
[PlexilExec:step][1:2:0] Transitioning node C1 from INACTIVE to WAITING
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node C1
[PlexilExec:step][1:2:1] Transitioning node C2 from INACTIVE to WAITING
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:step][1:2:2] Transitioning node C3 from INACTIVE to WAITING
[PlexilExec:notifyNodeConditionChanged] for node C3
[PlexilExec:step][1:2:3] Transitioning node C4 from INACTIVE to WAITING
[PlexilExec:notifyNodeConditionChanged] for node C4
[PlexilExec:step][1:3] Check queue: SimpleTask C1 C2 C3 C4 
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C1' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C1' on the state change queue in position 7
[PlexilExec:handleConditionsChanged]Node C4 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C4' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C4' on the state change queue in position 8
[PlexilExec:step][1:3] State change queue: C1 C4 
[PlexilExec:step][1:3:0] Transitioning node C1 from WAITING to EXECUTING
[PlexilExec:notifyNodeConditionChanged] for node C1
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:handleNeedsExecution]Storing action for node 'C1' of type 'Command' to be executed.
[PlexilExec:step][1:3:1] Transitioning node C4 from WAITING to EXECUTING
[PlexilExec:notifyNodeConditionChanged] for node C4
[PlexilExec:handleNeedsExecution]Storing action for node 'C4' of type 'Command' to be executed.
[PlexilExec:performAssignments] performing 0 assignments and 0 retractions
[Test:testOutput]Executing c1(20) into (Variable Integer returnValue 0x7fe880c070b0 [a](-1)) with ack (CommandHandleVariable NodeCommandHandle 0x7fe880c07200 [a](UNKNOWN))
[Test:testOutput]Permission to execute c4 has been denied by the resource arbiter.
[PlexilExec:cycle]==>End cycle 1
[PlexilExec:printPlan]
SimpleTask{
 State: EXECUTING (0)
 EndCondition: (AllChildrenFinished Boolean 0x7fe880c08390 [a](0))
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean 0x7fe880c08300 [i](UNKNOWN))
  C1{
   State: EXECUTING (0)
   EndCondition: (OR Boolean 0x7fe880c08700 [a](UNKNOWN) (Interruptible Boolean 0x7fe880c08740 [a](UNKNOWN) (CommandHandleVariable NodeCommandHandle 0x7fe880c07200 [a](UNKNOWN))) (EQ Boolean 0x7fe880c08620 [a](0) (Constant Integer 0x7fe880c085f0 [a](10)) (Variable Integer returnValue 0x7fe880c070b0 [a](-1))))
   PostCondition: (EQ Boolean 0x7fe880c086a0 [i](UNKNOWN) (CommandHandleVariable NodeCommandHandle 0x7fe880c07200 [a](UNKNOWN)) (CommandHandleValue NodeCommandHandle 0x10372c958 [a](COMMAND_SENT_TO_SYSTEM)))
   ActionCompleteCondition: (IsKnown Boolean 0x7fe880c07370 [i](UNKNOWN) (CommandHandleVariable NodeCommandHandle 0x7fe880c07200 [a](UNKNOWN)))
   AbortCompleteCondition: (InternalVariable Boolean C1 abortComplete 0x7fe880c07240 [a](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fe880c07200 [a](UNKNOWN))
   head_priority: (Variable Integer head_priority 0x7fe880c07140 [a](20))
   returnValue: (Variable Integer returnValue 0x7fe880c070b0 [a](-1))
  }
  C2{
   State: WAITING (0)
   StartCondition: (EQ Boolean 0x7fe880c08900 [a](UNKNOWN) (OutcomeVariable NodeOutcome C3 0x7fe880c079a8 [a](UNKNOWN)) (NodeOutcomeValue NodeOutcome 0x10372c868 [a](SUCCESS)))
   PostCondition: (EQ Boolean 0x7fe880c08980 [i](UNKNOWN) (CommandHandleVariable NodeCommandHandle 0x7fe880c076b0 [i](UNKNOWN)) (CommandHandleValue NodeCommandHandle 0x10372c958 [a](COMMAND_SENT_TO_SYSTEM)))
   ActionCompleteCondition: (IsKnown Boolean 0x7fe880c07840 [i](UNKNOWN) (CommandHandleVariable NodeCommandHandle 0x7fe880c076b0 [i](UNKNOWN)))
   AbortCompleteCondition: (InternalVariable Boolean C2 abortComplete 0x7fe880c076f0 [i](UNKNOWN))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fe880c076b0 [i](UNKNOWN))
   v_priority2: (Variable Integer v_priority2 0x7fe880c075f0 [i](UNKNOWN))
  }
  C3{
   State: WAITING (0)
   StartCondition: (EQ Boolean 0x7fe880c08b00 [a](UNKNOWN) (OutcomeVariable NodeOutcome C1 0x7fe880c06f48 [a](UNKNOWN)) (NodeOutcomeValue NodeOutcome 0x10372c868 [a](SUCCESS)))
   PostCondition: (EQ Boolean 0x7fe880c08b70 [i](UNKNOWN) (CommandHandleVariable NodeCommandHandle 0x7fe880c07ba0 [i](UNKNOWN)) (CommandHandleValue NodeCommandHandle 0x10372c958 [a](COMMAND_SENT_TO_SYSTEM)))
   ActionCompleteCondition: (IsKnown Boolean 0x7fe880c07d30 [i](UNKNOWN) (CommandHandleVariable NodeCommandHandle 0x7fe880c07ba0 [i](UNKNOWN)))
   AbortCompleteCondition: (InternalVariable Boolean C3 abortComplete 0x7fe880c07be0 [i](UNKNOWN))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fe880c07ba0 [i](UNKNOWN))
   mem_priority2: (Variable Integer mem_priority2 0x7fe880c07ae0 [i](UNKNOWN))
  }
  C4{
   State: EXECUTING (0)
   PostCondition: (EQ Boolean 0x7fe880c08cf0 [i](UNKNOWN) (CommandHandleVariable NodeCommandHandle 0x7fe880c08090 [a](COMMAND_DENIED)) (CommandHandleValue NodeCommandHandle 0x10372c958 [a](COMMAND_SENT_TO_SYSTEM)))
   ActionCompleteCondition: (IsKnown Boolean 0x7fe880c08220 [i](UNKNOWN) (CommandHandleVariable NodeCommandHandle 0x7fe880c08090 [a](COMMAND_DENIED)))
   AbortCompleteCondition: (InternalVariable Boolean C4 abortComplete 0x7fe880c080d0 [a](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fe880c08090 [a](COMMAND_DENIED))
   mem_priority2: (Variable Integer mem_priority2 0x7fe880c07fd0 [a](30))
  }
}

[Test:testOutput]Sending command ACK c1(20) = (string)COMMAND_SENT_TO_SYSTEM
[PlexilExec:cycle]==>Start cycle 2
[PlexilExec:step][2:0] Check queue: C1 SimpleTask C4 
[PlexilExec:handleConditionsChanged]Node C4 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C4' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C4' on the state change queue in position 9
[PlexilExec:step][2:0] State change queue: C4 
[PlexilExec:step][2:0:0] Transitioning node C4 from EXECUTING to FINISHING
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node C4
[PlexilExec:step][2:1] Check queue: SimpleTask C4 
[PlexilExec:handleConditionsChanged]Node C4 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C4' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C4' on the state change queue in position 10
[PlexilExec:step][2:1] State change queue: C4 
[PlexilExec:step][2:1:0] Transitioning node C4 from FINISHING to ITERATION_ENDED
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node C4
[PlexilExec:step][2:2] Check queue: SimpleTask C4 
[PlexilExec:handleConditionsChanged]Node C4 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C4' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C4' on the state change queue in position 11
[PlexilExec:step][2:2] State change queue: C4 
[PlexilExec:step][2:2:0] Transitioning node C4 from ITERATION_ENDED to FINISHED
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node C4
[PlexilExec:step][2:3] Check queue: SimpleTask C4 
[PlexilExec:performAssignments] performing 0 assignments and 0 retractions
[PlexilExec:cycle]==>End cycle 2
[PlexilExec:printPlan]
SimpleTask{
 State: EXECUTING (0)
 EndCondition: (AllChildrenFinished Boolean 0x7fe880c08390 [a](0))
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean 0x7fe880c08300 [i](UNKNOWN))
  C1{
   State: EXECUTING (0)
   EndCondition: (OR Boolean 0x7fe880c08700 [a](0) (Interruptible Boolean 0x7fe880c08740 [a](0) (CommandHandleVariable NodeCommandHandle 0x7fe880c07200 [a](COMMAND_SENT_TO_SYSTEM))) (EQ Boolean 0x7fe880c08620 [a](0) (Constant Integer 0x7fe880c085f0 [a](10)) (Variable Integer returnValue 0x7fe880c070b0 [a](-1))))
   PostCondition: (EQ Boolean 0x7fe880c086a0 [i](UNKNOWN) (CommandHandleVariable NodeCommandHandle 0x7fe880c07200 [a](COMMAND_SENT_TO_SYSTEM)) (CommandHandleValue NodeCommandHandle 0x10372c958 [a](COMMAND_SENT_TO_SYSTEM)))
   ActionCompleteCondition: (IsKnown Boolean 0x7fe880c07370 [i](UNKNOWN) (CommandHandleVariable NodeCommandHandle 0x7fe880c07200 [a](COMMAND_SENT_TO_SYSTEM)))
   AbortCompleteCondition: (InternalVariable Boolean C1 abortComplete 0x7fe880c07240 [a](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fe880c07200 [a](COMMAND_SENT_TO_SYSTEM))
   head_priority: (Variable Integer head_priority 0x7fe880c07140 [a](20))
   returnValue: (Variable Integer returnValue 0x7fe880c070b0 [a](-1))
  }
  C2{
   State: WAITING (0)
   StartCondition: (EQ Boolean 0x7fe880c08900 [a](UNKNOWN) (OutcomeVariable NodeOutcome C3 0x7fe880c079a8 [a](UNKNOWN)) (NodeOutcomeValue NodeOutcome 0x10372c868 [a](SUCCESS)))
   PostCondition: (EQ Boolean 0x7fe880c08980 [i](UNKNOWN) (CommandHandleVariable NodeCommandHandle 0x7fe880c076b0 [i](UNKNOWN)) (CommandHandleValue NodeCommandHandle 0x10372c958 [a](COMMAND_SENT_TO_SYSTEM)))
   ActionCompleteCondition: (IsKnown Boolean 0x7fe880c07840 [i](UNKNOWN) (CommandHandleVariable NodeCommandHandle 0x7fe880c076b0 [i](UNKNOWN)))
   AbortCompleteCondition: (InternalVariable Boolean C2 abortComplete 0x7fe880c076f0 [i](UNKNOWN))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fe880c076b0 [i](UNKNOWN))
   v_priority2: (Variable Integer v_priority2 0x7fe880c075f0 [i](UNKNOWN))
  }
  C3{
   State: WAITING (0)
   StartCondition: (EQ Boolean 0x7fe880c08b00 [a](UNKNOWN) (OutcomeVariable NodeOutcome C1 0x7fe880c06f48 [a](UNKNOWN)) (NodeOutcomeValue NodeOutcome 0x10372c868 [a](SUCCESS)))
   PostCondition: (EQ Boolean 0x7fe880c08b70 [i](UNKNOWN) (CommandHandleVariable NodeCommandHandle 0x7fe880c07ba0 [i](UNKNOWN)) (CommandHandleValue NodeCommandHandle 0x10372c958 [a](COMMAND_SENT_TO_SYSTEM)))
   ActionCompleteCondition: (IsKnown Boolean 0x7fe880c07d30 [i](UNKNOWN) (CommandHandleVariable NodeCommandHandle 0x7fe880c07ba0 [i](UNKNOWN)))
   AbortCompleteCondition: (InternalVariable Boolean C3 abortComplete 0x7fe880c07be0 [i](UNKNOWN))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fe880c07ba0 [i](UNKNOWN))
   mem_priority2: (Variable Integer mem_priority2 0x7fe880c07ae0 [i](UNKNOWN))
  }
  C4{
   State: FINISHED (0)
   Outcome: FAILURE
   Failure type: POST_CONDITION_FAILED
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fe880c08090 [i](UNKNOWN))
   mem_priority2: (Variable Integer mem_priority2 0x7fe880c07fd0 [i](UNKNOWN))
  }
}

[Test:testOutput]Sending command result c1(20) = 10
[PlexilExec:notifyNodeConditionChanged] for node C1
[PlexilExec:cycle]==>Start cycle 3
[PlexilExec:step][3:0] Check queue: C1 
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C1' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C1' on the state change queue in position 12
[PlexilExec:step][3:0] State change queue: C1 
[PlexilExec:step][3:0:0] Transitioning node C1 from EXECUTING to FINISHING
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node C1
[PlexilExec:step][3:1] Check queue: SimpleTask C1 
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C1' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C1' on the state change queue in position 13
[PlexilExec:step][3:1] State change queue: C1 
[PlexilExec:step][3:1:0] Transitioning node C1 from FINISHING to ITERATION_ENDED
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node C1
[PlexilExec:notifyNodeConditionChanged] for node C3
[PlexilExec:step][3:2] Check queue: SimpleTask C1 C3 
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C1' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C1' on the state change queue in position 14
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C3' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C3' on the state change queue in position 15
[PlexilExec:step][3:2] State change queue: C1 C3 
[PlexilExec:step][3:2:0] Transitioning node C1 from ITERATION_ENDED to FINISHED
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node C1
[PlexilExec:step][3:2:1] Transitioning node C3 from WAITING to EXECUTING
[PlexilExec:notifyNodeConditionChanged] for node C3
[PlexilExec:handleNeedsExecution]Storing action for node 'C3' of type 'Command' to be executed.
[PlexilExec:performAssignments] performing 0 assignments and 0 retractions
[Test:testOutput]Executing c3() into noId with ack (CommandHandleVariable NodeCommandHandle 0x7fe880c07ba0 [a](UNKNOWN))
[PlexilExec:cycle]==>End cycle 3
[PlexilExec:printPlan]
SimpleTask{
 State: EXECUTING (0)
 EndCondition: (AllChildrenFinished Boolean 0x7fe880c08390 [a](0))
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean 0x7fe880c08300 [i](UNKNOWN))
  C1{
   State: FINISHED (0)
   Outcome: SUCCESS
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fe880c07200 [i](UNKNOWN))
   head_priority: (Variable Integer head_priority 0x7fe880c07140 [i](UNKNOWN))
   returnValue: (Variable Integer returnValue 0x7fe880c070b0 [i](UNKNOWN))
  }
  C2{
   State: WAITING (0)
   StartCondition: (EQ Boolean 0x7fe880c08900 [a](UNKNOWN) (OutcomeVariable NodeOutcome C3 0x7fe880c079a8 [a](UNKNOWN)) (NodeOutcomeValue NodeOutcome 0x10372c868 [a](SUCCESS)))
   PostCondition: (EQ Boolean 0x7fe880c08980 [i](UNKNOWN) (CommandHandleVariable NodeCommandHandle 0x7fe880c076b0 [i](UNKNOWN)) (CommandHandleValue NodeCommandHandle 0x10372c958 [a](COMMAND_SENT_TO_SYSTEM)))
   ActionCompleteCondition: (IsKnown Boolean 0x7fe880c07840 [i](UNKNOWN) (CommandHandleVariable NodeCommandHandle 0x7fe880c076b0 [i](UNKNOWN)))
   AbortCompleteCondition: (InternalVariable Boolean C2 abortComplete 0x7fe880c076f0 [i](UNKNOWN))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fe880c076b0 [i](UNKNOWN))
   v_priority2: (Variable Integer v_priority2 0x7fe880c075f0 [i](UNKNOWN))
  }
  C3{
   State: EXECUTING (0)
   StartCondition: (EQ Boolean 0x7fe880c08b00 [i](UNKNOWN) (OutcomeVariable NodeOutcome C1 0x7fe880c06f48 [a](SUCCESS)) (NodeOutcomeValue NodeOutcome 0x10372c868 [a](SUCCESS)))
   PostCondition: (EQ Boolean 0x7fe880c08b70 [i](UNKNOWN) (CommandHandleVariable NodeCommandHandle 0x7fe880c07ba0 [a](UNKNOWN)) (CommandHandleValue NodeCommandHandle 0x10372c958 [a](COMMAND_SENT_TO_SYSTEM)))
   ActionCompleteCondition: (IsKnown Boolean 0x7fe880c07d30 [i](UNKNOWN) (CommandHandleVariable NodeCommandHandle 0x7fe880c07ba0 [a](UNKNOWN)))
   AbortCompleteCondition: (InternalVariable Boolean C3 abortComplete 0x7fe880c07be0 [a](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fe880c07ba0 [a](UNKNOWN))
   mem_priority2: (Variable Integer mem_priority2 0x7fe880c07ae0 [a](30))
  }
  C4{
   State: FINISHED (0)
   Outcome: FAILURE
   Failure type: POST_CONDITION_FAILED
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fe880c08090 [i](UNKNOWN))
   mem_priority2: (Variable Integer mem_priority2 0x7fe880c07fd0 [i](UNKNOWN))
  }
}

[Test:testOutput]Sending command ACK c3() = (string)COMMAND_SENT_TO_SYSTEM
[PlexilExec:cycle]==>Start cycle 4
[PlexilExec:step][4:0] Check queue: SimpleTask C1 C3 
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C3' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C3' on the state change queue in position 16
[PlexilExec:step][4:0] State change queue: C3 
[PlexilExec:step][4:0:0] Transitioning node C3 from EXECUTING to FINISHING
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node C3
[PlexilExec:step][4:1] Check queue: SimpleTask C3 
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C3' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C3' on the state change queue in position 17
[PlexilExec:step][4:1] State change queue: C3 
[PlexilExec:step][4:1:0] Transitioning node C3 from FINISHING to ITERATION_ENDED
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node C3
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:step][4:2] Check queue: SimpleTask C3 C2 
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C3' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C3' on the state change queue in position 18
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 19
[PlexilExec:step][4:2] State change queue: C3 C2 
[PlexilExec:step][4:2:0] Transitioning node C3 from ITERATION_ENDED to FINISHED
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node C3
[PlexilExec:step][4:2:1] Transitioning node C2 from WAITING to EXECUTING
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:handleNeedsExecution]Storing action for node 'C2' of type 'Command' to be executed.
[PlexilExec:performAssignments] performing 0 assignments and 0 retractions
[Test:testOutput]Executing c2() into noId with ack (CommandHandleVariable NodeCommandHandle 0x7fe880c076b0 [a](UNKNOWN))
[PlexilExec:cycle]==>End cycle 4
[PlexilExec:printPlan]
SimpleTask{
 State: EXECUTING (0)
 EndCondition: (AllChildrenFinished Boolean 0x7fe880c08390 [a](0))
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean 0x7fe880c08300 [i](UNKNOWN))
  C1{
   State: FINISHED (0)
   Outcome: SUCCESS
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fe880c07200 [i](UNKNOWN))
   head_priority: (Variable Integer head_priority 0x7fe880c07140 [i](UNKNOWN))
   returnValue: (Variable Integer returnValue 0x7fe880c070b0 [i](UNKNOWN))
  }
  C2{
   State: EXECUTING (0)
   StartCondition: (EQ Boolean 0x7fe880c08900 [i](UNKNOWN) (OutcomeVariable NodeOutcome C3 0x7fe880c079a8 [a](SUCCESS)) (NodeOutcomeValue NodeOutcome 0x10372c868 [a](SUCCESS)))
   PostCondition: (EQ Boolean 0x7fe880c08980 [i](UNKNOWN) (CommandHandleVariable NodeCommandHandle 0x7fe880c076b0 [a](UNKNOWN)) (CommandHandleValue NodeCommandHandle 0x10372c958 [a](COMMAND_SENT_TO_SYSTEM)))
   ActionCompleteCondition: (IsKnown Boolean 0x7fe880c07840 [i](UNKNOWN) (CommandHandleVariable NodeCommandHandle 0x7fe880c076b0 [a](UNKNOWN)))
   AbortCompleteCondition: (InternalVariable Boolean C2 abortComplete 0x7fe880c076f0 [a](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fe880c076b0 [a](UNKNOWN))
   v_priority2: (Variable Integer v_priority2 0x7fe880c075f0 [a](25))
  }
  C3{
   State: FINISHED (0)
   Outcome: SUCCESS
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fe880c07ba0 [i](UNKNOWN))
   mem_priority2: (Variable Integer mem_priority2 0x7fe880c07ae0 [i](UNKNOWN))
  }
  C4{
   State: FINISHED (0)
   Outcome: FAILURE
   Failure type: POST_CONDITION_FAILED
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fe880c08090 [i](UNKNOWN))
   mem_priority2: (Variable Integer mem_priority2 0x7fe880c07fd0 [i](UNKNOWN))
  }
}

[Test:testOutput]Sending command ACK c2() = (string)COMMAND_SENT_TO_SYSTEM
[PlexilExec:cycle]==>Start cycle 5
[PlexilExec:step][5:0] Check queue: SimpleTask C3 C2 
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 20
[PlexilExec:step][5:0] State change queue: C2 
[PlexilExec:step][5:0:0] Transitioning node C2 from EXECUTING to FINISHING
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:step][5:1] Check queue: SimpleTask C2 
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 21
[PlexilExec:step][5:1] State change queue: C2 
[PlexilExec:step][5:1:0] Transitioning node C2 from FINISHING to ITERATION_ENDED
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:step][5:2] Check queue: SimpleTask C2 
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 22
[PlexilExec:step][5:2] State change queue: C2 
[PlexilExec:step][5:2:0] Transitioning node C2 from ITERATION_ENDED to FINISHED
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node C2
[PlexilExec:step][5:3] Check queue: SimpleTask C2 
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 23
[PlexilExec:step][5:3] State change queue: SimpleTask 
[PlexilExec:step][5:3:0] Transitioning node SimpleTask from EXECUTING to FINISHING
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:step][5:4] Check queue: SimpleTask 
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 24
[PlexilExec:step][5:4] State change queue: SimpleTask 
[PlexilExec:step][5:4:0] Transitioning node SimpleTask from FINISHING to ITERATION_ENDED
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:step][5:5] Check queue: SimpleTask 
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 25
[PlexilExec:step][5:5] State change queue: SimpleTask 
[PlexilExec:step][5:5:0] Transitioning node SimpleTask from ITERATION_ENDED to FINISHED
[PlexilExec:performAssignments] performing 0 assignments and 0 retractions
[PlexilExec:cycle]==>End cycle 5
[PlexilExec:printPlan]
SimpleTask{
 State: FINISHED (0)
 Outcome: SUCCESS
  C1{
   State: FINISHED (0)
   Outcome: SUCCESS
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fe880c07200 [i](UNKNOWN))
   head_priority: (Variable Integer head_priority 0x7fe880c07140 [i](UNKNOWN))
   returnValue: (Variable Integer returnValue 0x7fe880c070b0 [i](UNKNOWN))
  }
  C2{
   State: FINISHED (0)
   Outcome: SUCCESS
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fe880c076b0 [i](UNKNOWN))
   v_priority2: (Variable Integer v_priority2 0x7fe880c075f0 [i](UNKNOWN))
  }
  C3{
   State: FINISHED (0)
   Outcome: SUCCESS
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fe880c07ba0 [i](UNKNOWN))
   mem_priority2: (Variable Integer mem_priority2 0x7fe880c07ae0 [i](UNKNOWN))
  }
  C4{
   State: FINISHED (0)
   Outcome: FAILURE
   Failure type: POST_CONDITION_FAILED
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fe880c08090 [i](UNKNOWN))
   mem_priority2: (Variable Integer mem_priority2 0x7fe880c07fd0 [i](UNKNOWN))
  }
}

