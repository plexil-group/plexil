[PlexilExec:addPlan]Added plan: 
NonUnaryResources{
 State: INACTIVE (0)
  C1{
   State: INACTIVE (0)
  }
  C2{
   State: INACTIVE (0)
  }
  C3{
   State: INACTIVE (0)
  }
}

[Node:notifyChanged] adding NonUnaryResources 0x55af7b32d990 to check queue
[PlexilExec:step] ==>Start cycle 1
[PlexilExec:step][1:0] Check queue: NonUnaryResources 
[PlexilExec:step] Node NonUnaryResources 0x55af7b32d990 can transition from INACTIVE to WAITING
[PlexilExec:step] adding NonUnaryResources 0x55af7b32d990 to state change queue
[PlexilExec:step][1:0] State change queue: NonUnaryResources 
[PlexilExec:step][1:0:0] Transitioning NodeList node NonUnaryResources 0x55af7b32d990 from INACTIVE to WAITING
[Node:notifyChanged] adding NonUnaryResources 0x55af7b32d990 to check queue
[PlexilExec:step][1:1] Check queue: NonUnaryResources 
[PlexilExec:step] Node NonUnaryResources 0x55af7b32d990 can transition from WAITING to EXECUTING
[PlexilExec:step] adding NonUnaryResources 0x55af7b32d990 to state change queue
[PlexilExec:step][1:1] State change queue: NonUnaryResources 
[PlexilExec:step][1:1:0] Transitioning NodeList node NonUnaryResources 0x55af7b32d990 from WAITING to EXECUTING
[Node:notifyChanged] adding NonUnaryResources 0x55af7b32d990 to check queue
[Node:notifyChanged] adding C1 0x55af7b32db90 to check queue
[Node:notifyChanged] adding C2 0x55af7b32df80 to check queue
[Node:notifyChanged] adding C3 0x55af7b32e470 to check queue
[PlexilExec:step][1:2] Check queue: NonUnaryResources C1 C2 C3 
[PlexilExec:step] Node C1 0x55af7b32db90 can transition from INACTIVE to WAITING
[PlexilExec:step] adding C1 0x55af7b32db90 to state change queue
[PlexilExec:step] Node C2 0x55af7b32df80 can transition from INACTIVE to WAITING
[PlexilExec:step] adding C2 0x55af7b32df80 to state change queue
[PlexilExec:step] Node C3 0x55af7b32e470 can transition from INACTIVE to WAITING
[PlexilExec:step] adding C3 0x55af7b32e470 to state change queue
[PlexilExec:step][1:2] State change queue: C1 C2 C3 
[PlexilExec:step][1:2:0] Transitioning Command node C1 0x55af7b32db90 from INACTIVE to WAITING
[Node:notifyChanged] adding C1 0x55af7b32db90 to check queue
[Node:notifyChanged] adding NonUnaryResources 0x55af7b32d990 to check queue
[PlexilExec:step][1:2:1] Transitioning Command node C2 0x55af7b32df80 from INACTIVE to WAITING
[Node:notifyChanged] adding C2 0x55af7b32df80 to check queue
[PlexilExec:step][1:2:2] Transitioning Command node C3 0x55af7b32e470 from INACTIVE to WAITING
[Node:notifyChanged] adding C3 0x55af7b32e470 to check queue
[PlexilExec:step][1:3] Check queue: C1 NonUnaryResources C2 C3 
[PlexilExec:step] Node C1 0x55af7b32db90 can transition from WAITING to EXECUTING
[PlexilExec:step] adding C1 0x55af7b32db90 to state change queue
[PlexilExec:step] Node C2 0x55af7b32df80 can transition from WAITING to EXECUTING
[PlexilExec:step] adding C2 0x55af7b32df80 to state change queue
[PlexilExec:step] Node C3 0x55af7b32e470 can transition from WAITING to EXECUTING
[PlexilExec:step] adding C3 0x55af7b32e470 to state change queue
[PlexilExec:step][1:3] State change queue: C1 C2 C3 
[PlexilExec:step][1:3:0] Transitioning Command node C1 0x55af7b32db90 from WAITING to EXECUTING
[Node:notifyChanged] adding C1 0x55af7b32db90 to check queue
[Node:notifyChanged] adding NonUnaryResources 0x55af7b32d990 to check queue
[PlexilExec:step][1:3:1] Transitioning Command node C2 0x55af7b32df80 from WAITING to EXECUTING
[Node:notifyChanged] adding C2 0x55af7b32df80 to check queue
[PlexilExec:step][1:3:2] Transitioning Command node C3 0x55af7b32e470 from WAITING to EXECUTING
[Node:notifyChanged] adding C3 0x55af7b32e470 to check queue
[Test:testOutput]Executing c3() into (Variable Integer returnValue 0x55af7b32e730 [a](-1)) with ack (CommandHandleVariable NodeCommandHandle 0x55af7b32e840 [a]([unknown_value]))
[Test:testOutput]Executing c1() into (Variable Integer returnValue 0x55af7b32dd30 [a](-1)) with ack (CommandHandleVariable NodeCommandHandle 0x55af7b32de40 [a]([unknown_value]))
[Test:testOutput]Executing c2() into (Variable Integer returnValue 0x55af7b32e240 [a](-1)) with ack (CommandHandleVariable NodeCommandHandle 0x55af7b32e350 [a]([unknown_value]))
[PlexilExec:step] ==>End cycle 1
[PlexilExec:printPlan]
NonUnaryResources{
 State: EXECUTING (0)
 EndCondition: (AllChildrenFinished Boolean NonUnaryResources 0x55af7b32db28 [a](false))
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean NonUnaryResources 0x55af7b32dae0 [i](false))
  C1{
   State: EXECUTING (0)
   EndCondition: (OR Boolean 0x55af7b32eb30 [a](false) (Interruptible Boolean C1 0x55af7b32eae0 [a](false)) (EQ Boolean 0x55af7b32ea00 [a](false) (Variable Integer returnValue 0x55af7b32dd30 [a](-1)) (Constant Integer 0x55af7b32ea60 [a](10))))
   PostCondition: (EQ Boolean 0x55af7b32ea80 [i]([unknown_value]) (CommandHandleVariable NodeCommandHandle 0x55af7b32de40 [a]([unknown_value])) (CommandHandleValue NodeCommandHandle 0x7fd0a2f0d330 [a](COMMAND_SUCCESS)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x55af7b32ddf8 [i](false))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x55af7b32de80 [a](false))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x55af7b32de40 [a]([unknown_value]))
   returnValue: (Variable Integer returnValue 0x55af7b32dd30 [a](-1))
  }
  C2{
   State: EXECUTING (0)
   EndCondition: (OR Boolean 0x55af7b32efb0 [a](false) (Interruptible Boolean C2 0x55af7b32ef60 [a](false)) (EQ Boolean 0x55af7b32eee0 [a](false) (Variable Integer returnValue 0x55af7b32e240 [a](-1)) (Constant Integer 0x55af7b32ef40 [a](10))))
   PostCondition: (EQ Boolean 0x55af7b32ee80 [i]([unknown_value]) (CommandHandleVariable NodeCommandHandle 0x55af7b32e350 [a]([unknown_value])) (CommandHandleValue NodeCommandHandle 0x7fd0a2f0d330 [a](COMMAND_SUCCESS)))
   RepeatCondition: (EQ Boolean 0x55af7b32ee20 [i]([unknown_value]) (CommandHandleVariable NodeCommandHandle 0x55af7b32e350 [a]([unknown_value])) (CommandHandleValue NodeCommandHandle 0x7fd0a2f0d350 [a](COMMAND_DENIED)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x55af7b32e308 [i](false))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x55af7b32e390 [a](false))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x55af7b32e350 [a]([unknown_value]))
   mem_priority: (Variable Integer mem_priority 0x55af7b32e180 [a](30))
   returnValue: (Variable Integer returnValue 0x55af7b32e240 [a](-1))
  }
  C3{
   State: EXECUTING (0)
   EndCondition: (OR Boolean 0x55af7b32f350 [a](false) (Interruptible Boolean C3 0x55af7b32f300 [a](false)) (EQ Boolean 0x55af7b32f280 [a](false) (Variable Integer returnValue 0x55af7b32e730 [a](-1)) (Constant Integer 0x55af7b32f2e0 [a](10))))
   PostCondition: (EQ Boolean 0x55af7b32f220 [i]([unknown_value]) (CommandHandleVariable NodeCommandHandle 0x55af7b32e840 [a]([unknown_value])) (CommandHandleValue NodeCommandHandle 0x7fd0a2f0d330 [a](COMMAND_SUCCESS)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x55af7b32e7f8 [i](false))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x55af7b32e880 [a](false))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x55af7b32e840 [a]([unknown_value]))
   returnValue: (Variable Integer returnValue 0x55af7b32e730 [a](-1))
   vision_priority: (Variable Integer vision_priority 0x55af7b32e670 [a](10))
  }
}

[Test:testOutput]Sending command ACK c1() = (string)COMMAND_SENT_TO_SYSTEM
[PlexilExec:step] ==>Start cycle 2
[PlexilExec:step][2:0] Check queue: C1 NonUnaryResources C2 C3 
[PlexilExec:step] ==>End cycle 2
[PlexilExec:printPlan]
NonUnaryResources{
 State: EXECUTING (0)
 EndCondition: (AllChildrenFinished Boolean NonUnaryResources 0x55af7b32db28 [a](false))
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean NonUnaryResources 0x55af7b32dae0 [i](false))
  C1{
   State: EXECUTING (0)
   EndCondition: (OR Boolean 0x55af7b32eb30 [a](false) (Interruptible Boolean C1 0x55af7b32eae0 [a](false)) (EQ Boolean 0x55af7b32ea00 [a](false) (Variable Integer returnValue 0x55af7b32dd30 [a](-1)) (Constant Integer 0x55af7b32ea60 [a](10))))
   PostCondition: (EQ Boolean 0x55af7b32ea80 [i](false) (CommandHandleVariable NodeCommandHandle 0x55af7b32de40 [a](COMMAND_SENT_TO_SYSTEM)) (CommandHandleValue NodeCommandHandle 0x7fd0a2f0d330 [a](COMMAND_SUCCESS)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x55af7b32ddf8 [i](true))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x55af7b32de80 [a](false))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x55af7b32de40 [a](COMMAND_SENT_TO_SYSTEM))
   returnValue: (Variable Integer returnValue 0x55af7b32dd30 [a](-1))
  }
  C2{
   State: EXECUTING (0)
   EndCondition: (OR Boolean 0x55af7b32efb0 [a](false) (Interruptible Boolean C2 0x55af7b32ef60 [a](false)) (EQ Boolean 0x55af7b32eee0 [a](false) (Variable Integer returnValue 0x55af7b32e240 [a](-1)) (Constant Integer 0x55af7b32ef40 [a](10))))
   PostCondition: (EQ Boolean 0x55af7b32ee80 [i]([unknown_value]) (CommandHandleVariable NodeCommandHandle 0x55af7b32e350 [a]([unknown_value])) (CommandHandleValue NodeCommandHandle 0x7fd0a2f0d330 [a](COMMAND_SUCCESS)))
   RepeatCondition: (EQ Boolean 0x55af7b32ee20 [i]([unknown_value]) (CommandHandleVariable NodeCommandHandle 0x55af7b32e350 [a]([unknown_value])) (CommandHandleValue NodeCommandHandle 0x7fd0a2f0d350 [a](COMMAND_DENIED)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x55af7b32e308 [i](false))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x55af7b32e390 [a](false))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x55af7b32e350 [a]([unknown_value]))
   mem_priority: (Variable Integer mem_priority 0x55af7b32e180 [a](30))
   returnValue: (Variable Integer returnValue 0x55af7b32e240 [a](-1))
  }
  C3{
   State: EXECUTING (0)
   EndCondition: (OR Boolean 0x55af7b32f350 [a](false) (Interruptible Boolean C3 0x55af7b32f300 [a](false)) (EQ Boolean 0x55af7b32f280 [a](false) (Variable Integer returnValue 0x55af7b32e730 [a](-1)) (Constant Integer 0x55af7b32f2e0 [a](10))))
   PostCondition: (EQ Boolean 0x55af7b32f220 [i]([unknown_value]) (CommandHandleVariable NodeCommandHandle 0x55af7b32e840 [a]([unknown_value])) (CommandHandleValue NodeCommandHandle 0x7fd0a2f0d330 [a](COMMAND_SUCCESS)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x55af7b32e7f8 [i](false))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x55af7b32e880 [a](false))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x55af7b32e840 [a]([unknown_value]))
   returnValue: (Variable Integer returnValue 0x55af7b32e730 [a](-1))
   vision_priority: (Variable Integer vision_priority 0x55af7b32e670 [a](10))
  }
}

[Test:testOutput]Sending command ACK c1() = (string)COMMAND_SUCCESS
[Node:notifyChanged] adding C1 0x55af7b32db90 to check queue
[PlexilExec:step] ==>Start cycle 3
[PlexilExec:step][3:0] Check queue: C1 
[PlexilExec:step] ==>End cycle 3
[PlexilExec:printPlan]
NonUnaryResources{
 State: EXECUTING (0)
 EndCondition: (AllChildrenFinished Boolean NonUnaryResources 0x55af7b32db28 [a](false))
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean NonUnaryResources 0x55af7b32dae0 [i](false))
  C1{
   State: EXECUTING (0)
   EndCondition: (OR Boolean 0x55af7b32eb30 [a](false) (Interruptible Boolean C1 0x55af7b32eae0 [a](false)) (EQ Boolean 0x55af7b32ea00 [a](false) (Variable Integer returnValue 0x55af7b32dd30 [a](-1)) (Constant Integer 0x55af7b32ea60 [a](10))))
   PostCondition: (EQ Boolean 0x55af7b32ea80 [i](true) (CommandHandleVariable NodeCommandHandle 0x55af7b32de40 [a](COMMAND_SUCCESS)) (CommandHandleValue NodeCommandHandle 0x7fd0a2f0d330 [a](COMMAND_SUCCESS)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x55af7b32ddf8 [i](true))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x55af7b32de80 [a](false))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x55af7b32de40 [a](COMMAND_SUCCESS))
   returnValue: (Variable Integer returnValue 0x55af7b32dd30 [a](-1))
  }
  C2{
   State: EXECUTING (0)
   EndCondition: (OR Boolean 0x55af7b32efb0 [a](false) (Interruptible Boolean C2 0x55af7b32ef60 [a](false)) (EQ Boolean 0x55af7b32eee0 [a](false) (Variable Integer returnValue 0x55af7b32e240 [a](-1)) (Constant Integer 0x55af7b32ef40 [a](10))))
   PostCondition: (EQ Boolean 0x55af7b32ee80 [i]([unknown_value]) (CommandHandleVariable NodeCommandHandle 0x55af7b32e350 [a]([unknown_value])) (CommandHandleValue NodeCommandHandle 0x7fd0a2f0d330 [a](COMMAND_SUCCESS)))
   RepeatCondition: (EQ Boolean 0x55af7b32ee20 [i]([unknown_value]) (CommandHandleVariable NodeCommandHandle 0x55af7b32e350 [a]([unknown_value])) (CommandHandleValue NodeCommandHandle 0x7fd0a2f0d350 [a](COMMAND_DENIED)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x55af7b32e308 [i](false))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x55af7b32e390 [a](false))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x55af7b32e350 [a]([unknown_value]))
   mem_priority: (Variable Integer mem_priority 0x55af7b32e180 [a](30))
   returnValue: (Variable Integer returnValue 0x55af7b32e240 [a](-1))
  }
  C3{
   State: EXECUTING (0)
   EndCondition: (OR Boolean 0x55af7b32f350 [a](false) (Interruptible Boolean C3 0x55af7b32f300 [a](false)) (EQ Boolean 0x55af7b32f280 [a](false) (Variable Integer returnValue 0x55af7b32e730 [a](-1)) (Constant Integer 0x55af7b32f2e0 [a](10))))
   PostCondition: (EQ Boolean 0x55af7b32f220 [i]([unknown_value]) (CommandHandleVariable NodeCommandHandle 0x55af7b32e840 [a]([unknown_value])) (CommandHandleValue NodeCommandHandle 0x7fd0a2f0d330 [a](COMMAND_SUCCESS)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x55af7b32e7f8 [i](false))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x55af7b32e880 [a](false))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x55af7b32e840 [a]([unknown_value]))
   returnValue: (Variable Integer returnValue 0x55af7b32e730 [a](-1))
   vision_priority: (Variable Integer vision_priority 0x55af7b32e670 [a](10))
  }
}

[Test:testOutput]Sending command ACK c3() = (string)COMMAND_SENT_TO_SYSTEM
[Node:notifyChanged] adding C3 0x55af7b32e470 to check queue
[PlexilExec:step] ==>Start cycle 4
[PlexilExec:step][4:0] Check queue: C3 
[PlexilExec:step] ==>End cycle 4
[PlexilExec:printPlan]
NonUnaryResources{
 State: EXECUTING (0)
 EndCondition: (AllChildrenFinished Boolean NonUnaryResources 0x55af7b32db28 [a](false))
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean NonUnaryResources 0x55af7b32dae0 [i](false))
  C1{
   State: EXECUTING (0)
   EndCondition: (OR Boolean 0x55af7b32eb30 [a](false) (Interruptible Boolean C1 0x55af7b32eae0 [a](false)) (EQ Boolean 0x55af7b32ea00 [a](false) (Variable Integer returnValue 0x55af7b32dd30 [a](-1)) (Constant Integer 0x55af7b32ea60 [a](10))))
   PostCondition: (EQ Boolean 0x55af7b32ea80 [i](true) (CommandHandleVariable NodeCommandHandle 0x55af7b32de40 [a](COMMAND_SUCCESS)) (CommandHandleValue NodeCommandHandle 0x7fd0a2f0d330 [a](COMMAND_SUCCESS)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x55af7b32ddf8 [i](true))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x55af7b32de80 [a](false))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x55af7b32de40 [a](COMMAND_SUCCESS))
   returnValue: (Variable Integer returnValue 0x55af7b32dd30 [a](-1))
  }
  C2{
   State: EXECUTING (0)
   EndCondition: (OR Boolean 0x55af7b32efb0 [a](false) (Interruptible Boolean C2 0x55af7b32ef60 [a](false)) (EQ Boolean 0x55af7b32eee0 [a](false) (Variable Integer returnValue 0x55af7b32e240 [a](-1)) (Constant Integer 0x55af7b32ef40 [a](10))))
   PostCondition: (EQ Boolean 0x55af7b32ee80 [i]([unknown_value]) (CommandHandleVariable NodeCommandHandle 0x55af7b32e350 [a]([unknown_value])) (CommandHandleValue NodeCommandHandle 0x7fd0a2f0d330 [a](COMMAND_SUCCESS)))
   RepeatCondition: (EQ Boolean 0x55af7b32ee20 [i]([unknown_value]) (CommandHandleVariable NodeCommandHandle 0x55af7b32e350 [a]([unknown_value])) (CommandHandleValue NodeCommandHandle 0x7fd0a2f0d350 [a](COMMAND_DENIED)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x55af7b32e308 [i](false))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x55af7b32e390 [a](false))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x55af7b32e350 [a]([unknown_value]))
   mem_priority: (Variable Integer mem_priority 0x55af7b32e180 [a](30))
   returnValue: (Variable Integer returnValue 0x55af7b32e240 [a](-1))
  }
  C3{
   State: EXECUTING (0)
   EndCondition: (OR Boolean 0x55af7b32f350 [a](false) (Interruptible Boolean C3 0x55af7b32f300 [a](false)) (EQ Boolean 0x55af7b32f280 [a](false) (Variable Integer returnValue 0x55af7b32e730 [a](-1)) (Constant Integer 0x55af7b32f2e0 [a](10))))
   PostCondition: (EQ Boolean 0x55af7b32f220 [i](false) (CommandHandleVariable NodeCommandHandle 0x55af7b32e840 [a](COMMAND_SENT_TO_SYSTEM)) (CommandHandleValue NodeCommandHandle 0x7fd0a2f0d330 [a](COMMAND_SUCCESS)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x55af7b32e7f8 [i](true))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x55af7b32e880 [a](false))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x55af7b32e840 [a](COMMAND_SENT_TO_SYSTEM))
   returnValue: (Variable Integer returnValue 0x55af7b32e730 [a](-1))
   vision_priority: (Variable Integer vision_priority 0x55af7b32e670 [a](10))
  }
}

[Test:testOutput]Sending command ACK c3() = (string)COMMAND_SUCCESS
[Node:notifyChanged] adding C3 0x55af7b32e470 to check queue
[PlexilExec:step] ==>Start cycle 5
[PlexilExec:step][5:0] Check queue: C3 
[PlexilExec:step] ==>End cycle 5
[PlexilExec:printPlan]
NonUnaryResources{
 State: EXECUTING (0)
 EndCondition: (AllChildrenFinished Boolean NonUnaryResources 0x55af7b32db28 [a](false))
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean NonUnaryResources 0x55af7b32dae0 [i](false))
  C1{
   State: EXECUTING (0)
   EndCondition: (OR Boolean 0x55af7b32eb30 [a](false) (Interruptible Boolean C1 0x55af7b32eae0 [a](false)) (EQ Boolean 0x55af7b32ea00 [a](false) (Variable Integer returnValue 0x55af7b32dd30 [a](-1)) (Constant Integer 0x55af7b32ea60 [a](10))))
   PostCondition: (EQ Boolean 0x55af7b32ea80 [i](true) (CommandHandleVariable NodeCommandHandle 0x55af7b32de40 [a](COMMAND_SUCCESS)) (CommandHandleValue NodeCommandHandle 0x7fd0a2f0d330 [a](COMMAND_SUCCESS)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x55af7b32ddf8 [i](true))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x55af7b32de80 [a](false))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x55af7b32de40 [a](COMMAND_SUCCESS))
   returnValue: (Variable Integer returnValue 0x55af7b32dd30 [a](-1))
  }
  C2{
   State: EXECUTING (0)
   EndCondition: (OR Boolean 0x55af7b32efb0 [a](false) (Interruptible Boolean C2 0x55af7b32ef60 [a](false)) (EQ Boolean 0x55af7b32eee0 [a](false) (Variable Integer returnValue 0x55af7b32e240 [a](-1)) (Constant Integer 0x55af7b32ef40 [a](10))))
   PostCondition: (EQ Boolean 0x55af7b32ee80 [i]([unknown_value]) (CommandHandleVariable NodeCommandHandle 0x55af7b32e350 [a]([unknown_value])) (CommandHandleValue NodeCommandHandle 0x7fd0a2f0d330 [a](COMMAND_SUCCESS)))
   RepeatCondition: (EQ Boolean 0x55af7b32ee20 [i]([unknown_value]) (CommandHandleVariable NodeCommandHandle 0x55af7b32e350 [a]([unknown_value])) (CommandHandleValue NodeCommandHandle 0x7fd0a2f0d350 [a](COMMAND_DENIED)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x55af7b32e308 [i](false))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x55af7b32e390 [a](false))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x55af7b32e350 [a]([unknown_value]))
   mem_priority: (Variable Integer mem_priority 0x55af7b32e180 [a](30))
   returnValue: (Variable Integer returnValue 0x55af7b32e240 [a](-1))
  }
  C3{
   State: EXECUTING (0)
   EndCondition: (OR Boolean 0x55af7b32f350 [a](false) (Interruptible Boolean C3 0x55af7b32f300 [a](false)) (EQ Boolean 0x55af7b32f280 [a](false) (Variable Integer returnValue 0x55af7b32e730 [a](-1)) (Constant Integer 0x55af7b32f2e0 [a](10))))
   PostCondition: (EQ Boolean 0x55af7b32f220 [i](true) (CommandHandleVariable NodeCommandHandle 0x55af7b32e840 [a](COMMAND_SUCCESS)) (CommandHandleValue NodeCommandHandle 0x7fd0a2f0d330 [a](COMMAND_SUCCESS)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x55af7b32e7f8 [i](true))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x55af7b32e880 [a](false))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x55af7b32e840 [a](COMMAND_SUCCESS))
   returnValue: (Variable Integer returnValue 0x55af7b32e730 [a](-1))
   vision_priority: (Variable Integer vision_priority 0x55af7b32e670 [a](10))
  }
}

[Test:testOutput]Sending command result c3() = 10
[Node:notifyChanged] adding C3 0x55af7b32e470 to check queue
[PlexilExec:step] ==>Start cycle 6
[PlexilExec:step][6:0] Check queue: C3 
[PlexilExec:step] Node C3 0x55af7b32e470 can transition from EXECUTING to FINISHING
[PlexilExec:step] adding C3 0x55af7b32e470 to state change queue
[PlexilExec:step][6:0] State change queue: C3 
[PlexilExec:step][6:0:0] Transitioning Command node C3 0x55af7b32e470 from EXECUTING to FINISHING
[Node:notifyChanged] adding C3 0x55af7b32e470 to check queue
[Node:notifyChanged] adding NonUnaryResources 0x55af7b32d990 to check queue
[PlexilExec:step][6:1] Check queue: C3 NonUnaryResources 
[PlexilExec:step] Node C3 0x55af7b32e470 can transition from FINISHING to ITERATION_ENDED
[PlexilExec:step] adding C3 0x55af7b32e470 to state change queue
[PlexilExec:step][6:1] State change queue: C3 
[PlexilExec:step][6:1:0] Transitioning Command node C3 0x55af7b32e470 from FINISHING to ITERATION_ENDED
[Node:notifyChanged] adding C3 0x55af7b32e470 to check queue
[Node:notifyChanged] adding NonUnaryResources 0x55af7b32d990 to check queue
[PlexilExec:step][6:2] Check queue: C3 NonUnaryResources 
[PlexilExec:step] Node C3 0x55af7b32e470 can transition from ITERATION_ENDED to FINISHED
[PlexilExec:step] adding C3 0x55af7b32e470 to state change queue
[PlexilExec:step][6:2] State change queue: C3 
[PlexilExec:step][6:2:0] Transitioning Command node C3 0x55af7b32e470 from ITERATION_ENDED to FINISHED
[Node:notifyChanged] adding C3 0x55af7b32e470 to check queue
[Node:notifyChanged] adding NonUnaryResources 0x55af7b32d990 to check queue
[PlexilExec:step][6:3] Check queue: C3 NonUnaryResources 
[PlexilExec:step] ==>End cycle 6
[PlexilExec:printPlan]
NonUnaryResources{
 State: EXECUTING (0)
 EndCondition: (AllChildrenFinished Boolean NonUnaryResources 0x55af7b32db28 [a](false))
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean NonUnaryResources 0x55af7b32dae0 [i](false))
  C1{
   State: EXECUTING (0)
   EndCondition: (OR Boolean 0x55af7b32eb30 [a](false) (Interruptible Boolean C1 0x55af7b32eae0 [a](false)) (EQ Boolean 0x55af7b32ea00 [a](false) (Variable Integer returnValue 0x55af7b32dd30 [a](-1)) (Constant Integer 0x55af7b32ea60 [a](10))))
   PostCondition: (EQ Boolean 0x55af7b32ea80 [i](true) (CommandHandleVariable NodeCommandHandle 0x55af7b32de40 [a](COMMAND_SUCCESS)) (CommandHandleValue NodeCommandHandle 0x7fd0a2f0d330 [a](COMMAND_SUCCESS)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x55af7b32ddf8 [i](true))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x55af7b32de80 [a](false))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x55af7b32de40 [a](COMMAND_SUCCESS))
   returnValue: (Variable Integer returnValue 0x55af7b32dd30 [a](-1))
  }
  C2{
   State: EXECUTING (0)
   EndCondition: (OR Boolean 0x55af7b32efb0 [a](false) (Interruptible Boolean C2 0x55af7b32ef60 [a](false)) (EQ Boolean 0x55af7b32eee0 [a](false) (Variable Integer returnValue 0x55af7b32e240 [a](-1)) (Constant Integer 0x55af7b32ef40 [a](10))))
   PostCondition: (EQ Boolean 0x55af7b32ee80 [i]([unknown_value]) (CommandHandleVariable NodeCommandHandle 0x55af7b32e350 [a]([unknown_value])) (CommandHandleValue NodeCommandHandle 0x7fd0a2f0d330 [a](COMMAND_SUCCESS)))
   RepeatCondition: (EQ Boolean 0x55af7b32ee20 [i]([unknown_value]) (CommandHandleVariable NodeCommandHandle 0x55af7b32e350 [a]([unknown_value])) (CommandHandleValue NodeCommandHandle 0x7fd0a2f0d350 [a](COMMAND_DENIED)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x55af7b32e308 [i](false))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x55af7b32e390 [a](false))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x55af7b32e350 [a]([unknown_value]))
   mem_priority: (Variable Integer mem_priority 0x55af7b32e180 [a](30))
   returnValue: (Variable Integer returnValue 0x55af7b32e240 [a](-1))
  }
  C3{
   State: FINISHED (0)
   Outcome: SUCCESS
   Command handle: (CommandHandleVariable NodeCommandHandle 0x55af7b32e840 [i]([unknown_value]))
   returnValue: (Variable Integer returnValue 0x55af7b32e730 [i]([unknown_value]))
   vision_priority: (Variable Integer vision_priority 0x55af7b32e670 [i]([unknown_value]))
  }
}

[Test:testOutput]Sending command result c1() = 10
[Node:notifyChanged] adding C1 0x55af7b32db90 to check queue
[PlexilExec:step] ==>Start cycle 7
[PlexilExec:step][7:0] Check queue: C1 
[PlexilExec:step] Node C1 0x55af7b32db90 can transition from EXECUTING to FINISHING
[PlexilExec:step] adding C1 0x55af7b32db90 to state change queue
[PlexilExec:step][7:0] State change queue: C1 
[PlexilExec:step][7:0:0] Transitioning Command node C1 0x55af7b32db90 from EXECUTING to FINISHING
[Node:notifyChanged] adding C1 0x55af7b32db90 to check queue
[Node:notifyChanged] adding NonUnaryResources 0x55af7b32d990 to check queue
[PlexilExec:step][7:1] Check queue: C1 NonUnaryResources 
[PlexilExec:step] Node C1 0x55af7b32db90 can transition from FINISHING to ITERATION_ENDED
[PlexilExec:step] adding C1 0x55af7b32db90 to state change queue
[PlexilExec:step][7:1] State change queue: C1 
[PlexilExec:step][7:1:0] Transitioning Command node C1 0x55af7b32db90 from FINISHING to ITERATION_ENDED
[Node:notifyChanged] adding C1 0x55af7b32db90 to check queue
[Node:notifyChanged] adding NonUnaryResources 0x55af7b32d990 to check queue
[PlexilExec:step][7:2] Check queue: C1 NonUnaryResources 
[PlexilExec:step] Node C1 0x55af7b32db90 can transition from ITERATION_ENDED to FINISHED
[PlexilExec:step] adding C1 0x55af7b32db90 to state change queue
[PlexilExec:step][7:2] State change queue: C1 
[PlexilExec:step][7:2:0] Transitioning Command node C1 0x55af7b32db90 from ITERATION_ENDED to FINISHED
[Node:notifyChanged] adding C1 0x55af7b32db90 to check queue
[Node:notifyChanged] adding NonUnaryResources 0x55af7b32d990 to check queue
[PlexilExec:step][7:3] Check queue: C1 NonUnaryResources 
[PlexilExec:step] ==>End cycle 7
[PlexilExec:printPlan]
NonUnaryResources{
 State: EXECUTING (0)
 EndCondition: (AllChildrenFinished Boolean NonUnaryResources 0x55af7b32db28 [a](false))
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean NonUnaryResources 0x55af7b32dae0 [i](false))
  C1{
   State: FINISHED (0)
   Outcome: SUCCESS
   Command handle: (CommandHandleVariable NodeCommandHandle 0x55af7b32de40 [i]([unknown_value]))
   returnValue: (Variable Integer returnValue 0x55af7b32dd30 [i]([unknown_value]))
  }
  C2{
   State: EXECUTING (0)
   EndCondition: (OR Boolean 0x55af7b32efb0 [a](false) (Interruptible Boolean C2 0x55af7b32ef60 [a](false)) (EQ Boolean 0x55af7b32eee0 [a](false) (Variable Integer returnValue 0x55af7b32e240 [a](-1)) (Constant Integer 0x55af7b32ef40 [a](10))))
   PostCondition: (EQ Boolean 0x55af7b32ee80 [i]([unknown_value]) (CommandHandleVariable NodeCommandHandle 0x55af7b32e350 [a]([unknown_value])) (CommandHandleValue NodeCommandHandle 0x7fd0a2f0d330 [a](COMMAND_SUCCESS)))
   RepeatCondition: (EQ Boolean 0x55af7b32ee20 [i]([unknown_value]) (CommandHandleVariable NodeCommandHandle 0x55af7b32e350 [a]([unknown_value])) (CommandHandleValue NodeCommandHandle 0x7fd0a2f0d350 [a](COMMAND_DENIED)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x55af7b32e308 [i](false))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x55af7b32e390 [a](false))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x55af7b32e350 [a]([unknown_value]))
   mem_priority: (Variable Integer mem_priority 0x55af7b32e180 [a](30))
   returnValue: (Variable Integer returnValue 0x55af7b32e240 [a](-1))
  }
  C3{
   State: FINISHED (0)
   Outcome: SUCCESS
   Command handle: (CommandHandleVariable NodeCommandHandle 0x55af7b32e840 [i]([unknown_value]))
   returnValue: (Variable Integer returnValue 0x55af7b32e730 [i]([unknown_value]))
   vision_priority: (Variable Integer vision_priority 0x55af7b32e670 [i]([unknown_value]))
  }
}

[Test:testOutput]Sending command ACK c2() = (string)COMMAND_SENT_TO_SYSTEM
[Node:notifyChanged] adding C2 0x55af7b32df80 to check queue
[PlexilExec:step] ==>Start cycle 8
[PlexilExec:step][8:0] Check queue: C2 
[PlexilExec:step] ==>End cycle 8
[PlexilExec:printPlan]
NonUnaryResources{
 State: EXECUTING (0)
 EndCondition: (AllChildrenFinished Boolean NonUnaryResources 0x55af7b32db28 [a](false))
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean NonUnaryResources 0x55af7b32dae0 [i](false))
  C1{
   State: FINISHED (0)
   Outcome: SUCCESS
   Command handle: (CommandHandleVariable NodeCommandHandle 0x55af7b32de40 [i]([unknown_value]))
   returnValue: (Variable Integer returnValue 0x55af7b32dd30 [i]([unknown_value]))
  }
  C2{
   State: EXECUTING (0)
   EndCondition: (OR Boolean 0x55af7b32efb0 [a](false) (Interruptible Boolean C2 0x55af7b32ef60 [a](false)) (EQ Boolean 0x55af7b32eee0 [a](false) (Variable Integer returnValue 0x55af7b32e240 [a](-1)) (Constant Integer 0x55af7b32ef40 [a](10))))
   PostCondition: (EQ Boolean 0x55af7b32ee80 [i](false) (CommandHandleVariable NodeCommandHandle 0x55af7b32e350 [a](COMMAND_SENT_TO_SYSTEM)) (CommandHandleValue NodeCommandHandle 0x7fd0a2f0d330 [a](COMMAND_SUCCESS)))
   RepeatCondition: (EQ Boolean 0x55af7b32ee20 [i](false) (CommandHandleVariable NodeCommandHandle 0x55af7b32e350 [a](COMMAND_SENT_TO_SYSTEM)) (CommandHandleValue NodeCommandHandle 0x7fd0a2f0d350 [a](COMMAND_DENIED)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x55af7b32e308 [i](true))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x55af7b32e390 [a](false))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x55af7b32e350 [a](COMMAND_SENT_TO_SYSTEM))
   mem_priority: (Variable Integer mem_priority 0x55af7b32e180 [a](30))
   returnValue: (Variable Integer returnValue 0x55af7b32e240 [a](-1))
  }
  C3{
   State: FINISHED (0)
   Outcome: SUCCESS
   Command handle: (CommandHandleVariable NodeCommandHandle 0x55af7b32e840 [i]([unknown_value]))
   returnValue: (Variable Integer returnValue 0x55af7b32e730 [i]([unknown_value]))
   vision_priority: (Variable Integer vision_priority 0x55af7b32e670 [i]([unknown_value]))
  }
}

[Test:testOutput]Sending command ACK c2() = (string)COMMAND_SUCCESS
[Node:notifyChanged] adding C2 0x55af7b32df80 to check queue
[PlexilExec:step] ==>Start cycle 9
[PlexilExec:step][9:0] Check queue: C2 
[PlexilExec:step] ==>End cycle 9
[PlexilExec:printPlan]
NonUnaryResources{
 State: EXECUTING (0)
 EndCondition: (AllChildrenFinished Boolean NonUnaryResources 0x55af7b32db28 [a](false))
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean NonUnaryResources 0x55af7b32dae0 [i](false))
  C1{
   State: FINISHED (0)
   Outcome: SUCCESS
   Command handle: (CommandHandleVariable NodeCommandHandle 0x55af7b32de40 [i]([unknown_value]))
   returnValue: (Variable Integer returnValue 0x55af7b32dd30 [i]([unknown_value]))
  }
  C2{
   State: EXECUTING (0)
   EndCondition: (OR Boolean 0x55af7b32efb0 [a](false) (Interruptible Boolean C2 0x55af7b32ef60 [a](false)) (EQ Boolean 0x55af7b32eee0 [a](false) (Variable Integer returnValue 0x55af7b32e240 [a](-1)) (Constant Integer 0x55af7b32ef40 [a](10))))
   PostCondition: (EQ Boolean 0x55af7b32ee80 [i](true) (CommandHandleVariable NodeCommandHandle 0x55af7b32e350 [a](COMMAND_SUCCESS)) (CommandHandleValue NodeCommandHandle 0x7fd0a2f0d330 [a](COMMAND_SUCCESS)))
   RepeatCondition: (EQ Boolean 0x55af7b32ee20 [i](false) (CommandHandleVariable NodeCommandHandle 0x55af7b32e350 [a](COMMAND_SUCCESS)) (CommandHandleValue NodeCommandHandle 0x7fd0a2f0d350 [a](COMMAND_DENIED)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x55af7b32e308 [i](true))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x55af7b32e390 [a](false))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x55af7b32e350 [a](COMMAND_SUCCESS))
   mem_priority: (Variable Integer mem_priority 0x55af7b32e180 [a](30))
   returnValue: (Variable Integer returnValue 0x55af7b32e240 [a](-1))
  }
  C3{
   State: FINISHED (0)
   Outcome: SUCCESS
   Command handle: (CommandHandleVariable NodeCommandHandle 0x55af7b32e840 [i]([unknown_value]))
   returnValue: (Variable Integer returnValue 0x55af7b32e730 [i]([unknown_value]))
   vision_priority: (Variable Integer vision_priority 0x55af7b32e670 [i]([unknown_value]))
  }
}

[Test:testOutput]Sending command result c2() = 10
[Node:notifyChanged] adding C2 0x55af7b32df80 to check queue
[PlexilExec:step] ==>Start cycle 10
[PlexilExec:step][10:0] Check queue: C2 
[PlexilExec:step] Node C2 0x55af7b32df80 can transition from EXECUTING to FINISHING
[PlexilExec:step] adding C2 0x55af7b32df80 to state change queue
[PlexilExec:step][10:0] State change queue: C2 
[PlexilExec:step][10:0:0] Transitioning Command node C2 0x55af7b32df80 from EXECUTING to FINISHING
[Node:notifyChanged] adding C2 0x55af7b32df80 to check queue
[Node:notifyChanged] adding NonUnaryResources 0x55af7b32d990 to check queue
[PlexilExec:step][10:1] Check queue: C2 NonUnaryResources 
[PlexilExec:step] Node C2 0x55af7b32df80 can transition from FINISHING to ITERATION_ENDED
[PlexilExec:step] adding C2 0x55af7b32df80 to state change queue
[PlexilExec:step][10:1] State change queue: C2 
[PlexilExec:step][10:1:0] Transitioning Command node C2 0x55af7b32df80 from FINISHING to ITERATION_ENDED
[Node:notifyChanged] adding C2 0x55af7b32df80 to check queue
[Node:notifyChanged] adding NonUnaryResources 0x55af7b32d990 to check queue
[PlexilExec:step][10:2] Check queue: C2 NonUnaryResources 
[PlexilExec:step] Node C2 0x55af7b32df80 can transition from ITERATION_ENDED to FINISHED
[PlexilExec:step] adding C2 0x55af7b32df80 to state change queue
[PlexilExec:step][10:2] State change queue: C2 
[PlexilExec:step][10:2:0] Transitioning Command node C2 0x55af7b32df80 from ITERATION_ENDED to FINISHED
[Node:notifyChanged] adding C2 0x55af7b32df80 to check queue
[Node:notifyChanged] adding NonUnaryResources 0x55af7b32d990 to check queue
[PlexilExec:step][10:3] Check queue: C2 NonUnaryResources 
[PlexilExec:step] Node NonUnaryResources 0x55af7b32d990 can transition from EXECUTING to FINISHING
[PlexilExec:step] adding NonUnaryResources 0x55af7b32d990 to state change queue
[PlexilExec:step][10:3] State change queue: NonUnaryResources 
[PlexilExec:step][10:3:0] Transitioning NodeList node NonUnaryResources 0x55af7b32d990 from EXECUTING to FINISHING
[Node:notifyChanged] adding NonUnaryResources 0x55af7b32d990 to check queue
[PlexilExec:step][10:4] Check queue: NonUnaryResources 
[PlexilExec:step] Node NonUnaryResources 0x55af7b32d990 can transition from FINISHING to ITERATION_ENDED
[PlexilExec:step] adding NonUnaryResources 0x55af7b32d990 to state change queue
[PlexilExec:step][10:4] State change queue: NonUnaryResources 
[PlexilExec:step][10:4:0] Transitioning NodeList node NonUnaryResources 0x55af7b32d990 from FINISHING to ITERATION_ENDED
[Node:notifyChanged] adding NonUnaryResources 0x55af7b32d990 to check queue
[PlexilExec:step][10:5] Check queue: NonUnaryResources 
[PlexilExec:step] Node NonUnaryResources 0x55af7b32d990 can transition from ITERATION_ENDED to FINISHED
[PlexilExec:step] adding NonUnaryResources 0x55af7b32d990 to state change queue
[PlexilExec:step][10:5] State change queue: NonUnaryResources 
[PlexilExec:step][10:5:0] Transitioning NodeList node NonUnaryResources 0x55af7b32d990 from ITERATION_ENDED to FINISHED
[PlexilExec:step] Marking NonUnaryResources 0x55af7b32d990 as a finished root node
[PlexilExec:step] ==>End cycle 10
[PlexilExec:printPlan]
NonUnaryResources{
 State: FINISHED (0)
 Outcome: SUCCESS
  C1{
   State: FINISHED (0)
   Outcome: SUCCESS
   Command handle: (CommandHandleVariable NodeCommandHandle 0x55af7b32de40 [i]([unknown_value]))
   returnValue: (Variable Integer returnValue 0x55af7b32dd30 [i]([unknown_value]))
  }
  C2{
   State: FINISHED (0)
   Outcome: SUCCESS
   Command handle: (CommandHandleVariable NodeCommandHandle 0x55af7b32e350 [i]([unknown_value]))
   mem_priority: (Variable Integer mem_priority 0x55af7b32e180 [i]([unknown_value]))
   returnValue: (Variable Integer returnValue 0x55af7b32e240 [i]([unknown_value]))
  }
  C3{
   State: FINISHED (0)
   Outcome: SUCCESS
   Command handle: (CommandHandleVariable NodeCommandHandle 0x55af7b32e840 [i]([unknown_value]))
   returnValue: (Variable Integer returnValue 0x55af7b32e730 [i]([unknown_value]))
   vision_priority: (Variable Integer vision_priority 0x55af7b32e670 [i]([unknown_value]))
  }
}

