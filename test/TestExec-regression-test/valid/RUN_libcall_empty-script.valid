[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:addPlan]Added plan: 
List{
 State: (id_277[a](INACTIVE): state(INACTIVE)) (inf)
  CallLibTest1{
   State: (id_328[a](INACTIVE): state(INACTIVE)) (inf)
    LibTest1{
     State: (id_375[a](INACTIVE): state(INACTIVE)) (inf)
      FooCall1{
       State: (id_422[a](INACTIVE): state(INACTIVE)) (inf)
      }
    }
  }
  CallLibTest2{
   State: (id_481[a](INACTIVE): state(INACTIVE)) (inf)
    LibTest2{
     State: (id_528[a](INACTIVE): state(INACTIVE)) (inf)
      BarCall2{
       State: (id_575[a](INACTIVE): state(INACTIVE)) (inf)
      }
      Call2LibTest1{
       State: (id_622[a](INACTIVE): state(INACTIVE)) (inf)
        LibTest1{
         State: (id_672[a](INACTIVE): state(INACTIVE)) (inf)
          FooCall1{
           State: (id_719[a](INACTIVE): state(INACTIVE)) (inf)
          }
        }
      }
    }
  }
}

[PlexilExec:handleConditionsChanged]Node List had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'List' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'List' on the state change queue in position 1
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 1
[PlexilExec:step][1:0] State change queue: List 
[PlexilExec:step][1:0:0] Transitioning node List
[PlexilExec:handleConditionsChanged]Node List had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'List' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'List' on the state change queue in position 2
[PlexilExec:step][1:1] State change queue: List 
[PlexilExec:step][1:1:0] Transitioning node List
[PlexilExec:handleConditionsChanged]Node CallLibTest1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'CallLibTest1' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'CallLibTest1' on the state change queue in position 3
[PlexilExec:handleConditionsChanged]Node CallLibTest2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'CallLibTest2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'CallLibTest2' on the state change queue in position 4
[PlexilExec:handleNeedsExecution]Storing action for node 'List' of type 'NodeList' to be executed.
[PlexilExec:handleConditionsChanged]Node List had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'List' was previously eligible to transition but isn't now.
[PlexilExec:step][1:2] State change queue: CallLibTest1 CallLibTest2 
[PlexilExec:step][1:2:0] Transitioning node CallLibTest1
[PlexilExec:handleConditionsChanged]Node CallLibTest1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'CallLibTest1' was previously eligible to transition but isn't now.
[PlexilExec:step][1:2:1] Transitioning node CallLibTest2
[PlexilExec:handleConditionsChanged]Node CallLibTest2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'CallLibTest2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'CallLibTest2' on the state change queue in position 5
[PlexilExec:step][1:3] State change queue: CallLibTest2 
[PlexilExec:step][1:3:0] Transitioning node CallLibTest2
[PlexilExec:handleConditionsChanged]Node LibTest2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'LibTest2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'LibTest2' on the state change queue in position 6
[PlexilExec:handleNeedsExecution]Storing action for node 'CallLibTest2' of type 'LibraryNodeCall' to be executed.
[PlexilExec:handleConditionsChanged]Node CallLibTest2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'CallLibTest2' was previously eligible to transition but isn't now.
[PlexilExec:step][1:4] State change queue: LibTest2 
[PlexilExec:step][1:4:0] Transitioning node LibTest2
[PlexilExec:handleConditionsChanged]Node LibTest2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'LibTest2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'LibTest2' on the state change queue in position 7
[PlexilExec:step][1:5] State change queue: LibTest2 
[PlexilExec:step][1:5:0] Transitioning node LibTest2
[PlexilExec:handleConditionsChanged]Node BarCall2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'BarCall2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'BarCall2' on the state change queue in position 8
[PlexilExec:handleConditionsChanged]Node Call2LibTest1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'Call2LibTest1' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'Call2LibTest1' on the state change queue in position 9
[PlexilExec:handleNeedsExecution]Storing action for node 'LibTest2' of type 'NodeList' to be executed.
[PlexilExec:handleConditionsChanged]Node LibTest2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'LibTest2' was previously eligible to transition but isn't now.
[PlexilExec:step][1:6] State change queue: BarCall2 Call2LibTest1 
[PlexilExec:step][1:6:0] Transitioning node BarCall2
[PlexilExec:handleConditionsChanged]Node BarCall2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'BarCall2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'BarCall2' on the state change queue in position 10
[PlexilExec:step][1:6:1] Transitioning node Call2LibTest1
[PlexilExec:handleConditionsChanged]Node Call2LibTest1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'Call2LibTest1' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'Call2LibTest1' on the state change queue in position 11
[PlexilExec:step][1:7] State change queue: BarCall2 Call2LibTest1 
[PlexilExec:step][1:7:0] Transitioning node BarCall2
[PlexilExec:handleNeedsExecution]Storing action for node 'BarCall2' of type 'Command' to be executed.
[PlexilExec:handleConditionsChanged]Node BarCall2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'BarCall2' was previously eligible to transition but isn't now.
[PlexilExec:step][1:7:1] Transitioning node Call2LibTest1
[PlexilExec:handleConditionsChanged]Node LibTest1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'LibTest1' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'LibTest1' on the state change queue in position 12
[PlexilExec:handleNeedsExecution]Storing action for node 'Call2LibTest1' of type 'LibraryNodeCall' to be executed.
[PlexilExec:handleConditionsChanged]Node Call2LibTest1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'Call2LibTest1' was previously eligible to transition but isn't now.
[PlexilExec:step][1:8] State change queue: LibTest1 
[PlexilExec:step][1:8:0] Transitioning node LibTest1
[PlexilExec:handleConditionsChanged]Node LibTest1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'LibTest1' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'LibTest1' on the state change queue in position 13
[PlexilExec:step][1:9] State change queue: LibTest1 
[PlexilExec:step][1:9:0] Transitioning node LibTest1
[PlexilExec:handleConditionsChanged]Node FooCall1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'FooCall1' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'FooCall1' on the state change queue in position 14
[PlexilExec:handleNeedsExecution]Storing action for node 'LibTest1' of type 'NodeList' to be executed.
[PlexilExec:handleConditionsChanged]Node LibTest1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'LibTest1' was previously eligible to transition but isn't now.
[PlexilExec:step][1:10] State change queue: FooCall1 
[PlexilExec:step][1:10:0] Transitioning node FooCall1
[PlexilExec:handleConditionsChanged]Node FooCall1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'FooCall1' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'FooCall1' on the state change queue in position 15
[PlexilExec:step][1:11] State change queue: FooCall1 
[PlexilExec:step][1:11:0] Transitioning node FooCall1
[PlexilExec:handleNeedsExecution]Storing action for node 'FooCall1' of type 'Command' to be executed.
[PlexilExec:handleConditionsChanged]Node FooCall1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'FooCall1' was previously eligible to transition but isn't now.
[Test:testOutput]Executing bar(3.1415, 3.1415) into noId with ack (id_917[a](UNKNOWN): boolean)
[Test:testOutput]Executing foo(0, 123, 3.1415, "what!") into noId with ack (id_977[a](UNKNOWN): boolean)
[PlexilExec:cycle]==>End cycle 1
[PlexilExec:printPlan]
List{
 State: (id_277[a](EXECUTING): state(EXECUTING)) (0)
 SkipCondition: (id_294[a](0): boolean)
 StartCondition: (id_296[a](1): boolean)
 EndCondition: (id_791[a](0): childrenFinished(0:2))
 InvariantCondition: (id_300[a](1): boolean)
 PreCondition: (id_302[a](1): boolean)
 PostCondition: (id_304[a](1): boolean)
 RepeatCondition: (id_306[a](0): boolean)
 AncestorInvariantCondition: (id_308[a](1): boolean)
 AncestorEndCondition: (id_310[a](0): boolean)
 ParentExecutingCondition: (id_312[a](1): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_788[i](UNKNOWN): childrenWaitingOrFinished(0:2))
 AbortCompleteCondition: (id_316[a](UNKNOWN): boolean)
 ParentWaitingCondition: (id_318[a](0): boolean)
 ParentFinishedCondition: (id_320[a](0): boolean)
 i: (id_322[i](1966): int)
 r: (id_323[a](3.1415): real)
 b: (id_324[i](1): boolean)
 s: (id_325[i](UNKNOWN): string)
  CallLibTest1{
   State: (id_328[a](WAITING): state(WAITING)) (0)
   SkipCondition: (id_345[a](0): boolean)
   StartCondition: (id_815[a](UNKNOWN): (id_818[a](UNKNOWN): ((id_482[a](UNKNOWN):  outcome) == (id_817[a](SUCCESS):  outcome))))
   EndCondition: (id_476[i](UNKNOWN): childrenFinished(0:1))
   InvariantCondition: (id_351[a](1): boolean)
   PreCondition: (id_353[a](1): boolean)
   PostCondition: (id_355[a](1): boolean)
   RepeatCondition: (id_357[a](0): boolean)
   AncestorInvariantCondition: (id_798[a](1): (TransparentWrapper(id_794[auT]{1}((id_308[a](1): boolean)) && TransparentWrapper(id_796[auT]{1}((id_300[a](1): boolean)))
   AncestorEndCondition: (id_804[a](0): (TransparentWrapper(id_800[auT]{0}((id_310[a](0): boolean)) || TransparentWrapper(id_802[auT]{0}((id_791[a](0): childrenFinished(0:2))))
   ParentExecutingCondition: (id_807[i](UNKNOWN): ((id_277[a](EXECUTING): state(EXECUTING)) == (id_806[a](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_473[i](UNKNOWN): childrenWaitingOrFinished(0:1))
   AbortCompleteCondition: (id_367[a](UNKNOWN): boolean)
   ParentWaitingCondition: (id_810[i](UNKNOWN): ((id_277[a](EXECUTING): state(EXECUTING)) == (id_809[a](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_813[i](UNKNOWN): ((id_277[a](EXECUTING): state(EXECUTING)) == (id_812[a](FINISHED): state(FINISHED))))
   lb: (id_324[i](1): boolean)
   li: (id_322[i](1966): int)
   lr: (id_323[a](3.1415): real)
   ls: (id_325[i](UNKNOWN): string)
   i: (id_322[i](1966): int)
   r: (id_323[a](3.1415): real)
   b: (id_324[i](1): boolean)
   s: (id_325[i](UNKNOWN): string)
    LibTest1{
     State: (id_375[a](INACTIVE): state(INACTIVE)) (inf)
      FooCall1{
       State: (id_422[a](INACTIVE): state(INACTIVE)) (inf)
      }
    }
  }
  CallLibTest2{
   State: (id_481[a](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_498[a](0): boolean)
   StartCondition: (id_500[a](1): boolean)
   EndCondition: (id_785[a](0): childrenFinished(0:1))
   InvariantCondition: (id_504[a](1): boolean)
   PreCondition: (id_506[a](1): boolean)
   PostCondition: (id_508[a](1): boolean)
   RepeatCondition: (id_510[a](0): boolean)
   AncestorInvariantCondition: (id_866[a](1): (TransparentWrapper(id_862[auT]{1}((id_308[a](1): boolean)) && TransparentWrapper(id_864[auT]{1}((id_300[a](1): boolean)))
   AncestorEndCondition: (id_872[i](UNKNOWN): (TransparentWrapper(id_868[iuT]{0}((id_310[a](0): boolean)) || TransparentWrapper(id_870[iuT]{0}((id_791[a](0): childrenFinished(0:2))))
   ParentExecutingCondition: (id_874[i](UNKNOWN): ((id_277[a](EXECUTING): state(EXECUTING)) == (id_806[a](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_782[i](UNKNOWN): childrenWaitingOrFinished(0:1))
   AbortCompleteCondition: (id_520[a](UNKNOWN): boolean)
   ParentWaitingCondition: (id_876[i](UNKNOWN): ((id_277[a](EXECUTING): state(EXECUTING)) == (id_809[a](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_878[i](UNKNOWN): ((id_277[a](EXECUTING): state(EXECUTING)) == (id_812[a](FINISHED): state(FINISHED))))
   y: (id_323[a](3.1415): real)
   z: (id_323[a](3.1415): real)
   i: (id_322[i](1966): int)
   r: (id_323[a](3.1415): real)
   b: (id_324[i](1): boolean)
   s: (id_325[i](UNKNOWN): string)
    LibTest2{
     State: (id_528[a](EXECUTING): state(EXECUTING)) (0)
     SkipCondition: (id_545[a](0): boolean)
     StartCondition: (id_547[a](1): boolean)
     EndCondition: (id_779[a](0): childrenFinished(0:2))
     InvariantCondition: (id_551[a](1): boolean)
     PreCondition: (id_553[a](1): boolean)
     PostCondition: (id_555[a](1): boolean)
     RepeatCondition: (id_557[a](0): boolean)
     AncestorInvariantCondition: (id_884[a](1): (TransparentWrapper(id_880[auT]{1}((id_866[a](1): (TransparentWrapper(id_862[auT]{1}((id_308[a](1): boolean)) && TransparentWrapper(id_864[auT]{1}((id_300[a](1): boolean)))) && TransparentWrapper(id_882[auT]{1}((id_504[a](1): boolean)))
     AncestorEndCondition: (id_890[i](UNKNOWN): (TransparentWrapper(id_886[iuT]{UNKNOWN}((id_872[i](UNKNOWN): (TransparentWrapper(id_868[iuT]{0}((id_310[a](0): boolean)) || TransparentWrapper(id_870[iuT]{0}((id_791[a](0): childrenFinished(0:2))))) || TransparentWrapper(id_888[iuT]{0}((id_785[a](0): childrenFinished(0:1))))
     ParentExecutingCondition: (id_892[i](UNKNOWN): ((id_481[a](EXECUTING): state(EXECUTING)) == (id_806[a](EXECUTING): state(EXECUTING))))
     AllChildrenWaitingOrFinishedCondition: (id_776[i](UNKNOWN): childrenWaitingOrFinished(0:2))
     AbortCompleteCondition: (id_567[a](UNKNOWN): boolean)
     ParentWaitingCondition: (id_894[i](UNKNOWN): ((id_481[a](EXECUTING): state(EXECUTING)) == (id_809[a](WAITING): state(WAITING))))
     ParentFinishedCondition: (id_896[i](UNKNOWN): ((id_481[a](EXECUTING): state(EXECUTING)) == (id_812[a](FINISHED): state(FINISHED))))
     y: (id_323[a](3.1415): real)
     z: (id_323[a](3.1415): real)
     i: (id_322[i](1966): int)
     r: (id_323[a](3.1415): real)
     b: (id_324[i](1): boolean)
     s: (id_325[i](UNKNOWN): string)
      BarCall2{
       State: (id_575[a](EXECUTING): state(EXECUTING)) (0)
       SkipCondition: (id_592[a](0): boolean)
       StartCondition: (id_594[a](1): boolean)
       EndCondition: (id_918[a](UNKNOWN): ((id_917[a](UNKNOWN): boolean) && (id_596[a](1): boolean))
       InvariantCondition: (id_598[a](1): boolean)
       PreCondition: (id_600[a](1): boolean)
       PostCondition: (id_602[a](1): boolean)
       RepeatCondition: (id_604[a](0): boolean)
       AncestorInvariantCondition: (id_902[a](1): (TransparentWrapper(id_898[auT]{1}((id_884[a](1): (TransparentWrapper(id_880[auT]{1}((id_866[a](1): (TransparentWrapper(id_862[auT]{1}((id_308[a](1): boolean)) && TransparentWrapper(id_864[auT]{1}((id_300[a](1): boolean)))) && TransparentWrapper(id_882[auT]{1}((id_504[a](1): boolean)))) && TransparentWrapper(id_900[auT]{1}((id_551[a](1): boolean)))
       AncestorEndCondition: (id_908[i](UNKNOWN): (TransparentWrapper(id_904[iuT]{UNKNOWN}((id_890[i](UNKNOWN): (TransparentWrapper(id_886[iuT]{UNKNOWN}((id_872[i](UNKNOWN): (TransparentWrapper(id_868[iuT]{0}((id_310[a](0): boolean)) || TransparentWrapper(id_870[iuT]{0}((id_791[a](0): childrenFinished(0:2))))) || TransparentWrapper(id_888[iuT]{0}((id_785[a](0): childrenFinished(0:1))))) || TransparentWrapper(id_906[iuT]{0}((id_779[a](0): childrenFinished(0:2))))
       ParentExecutingCondition: (id_910[i](UNKNOWN): ((id_528[a](EXECUTING): state(EXECUTING)) == (id_806[a](EXECUTING): state(EXECUTING))))
       AllChildrenWaitingOrFinishedCondition: (id_612[a](UNKNOWN): boolean)
       AbortCompleteCondition: (id_916[i](UNKNOWN): boolean)
       ParentWaitingCondition: (id_912[i](UNKNOWN): ((id_528[a](EXECUTING): state(EXECUTING)) == (id_809[a](WAITING): state(WAITING))))
       ParentFinishedCondition: (id_914[i](UNKNOWN): ((id_528[a](EXECUTING): state(EXECUTING)) == (id_812[a](FINISHED): state(FINISHED))))
       y: (id_323[a](3.1415): real)
       z: (id_323[a](3.1415): real)
       i: (id_322[i](1966): int)
       r: (id_323[a](3.1415): real)
       b: (id_324[i](1): boolean)
       s: (id_325[i](UNKNOWN): string)
      }
      Call2LibTest1{
       State: (id_622[a](EXECUTING): state(EXECUTING)) (0)
       SkipCondition: (id_639[a](0): boolean)
       StartCondition: (id_641[a](1): boolean)
       EndCondition: (id_773[a](0): childrenFinished(0:1))
       InvariantCondition: (id_645[a](1): boolean)
       PreCondition: (id_647[a](1): boolean)
       PostCondition: (id_649[a](1): boolean)
       RepeatCondition: (id_651[a](0): boolean)
       AncestorInvariantCondition: (id_926[a](1): (TransparentWrapper(id_922[auT]{1}((id_884[a](1): (TransparentWrapper(id_880[auT]{1}((id_866[a](1): (TransparentWrapper(id_862[auT]{1}((id_308[a](1): boolean)) && TransparentWrapper(id_864[auT]{1}((id_300[a](1): boolean)))) && TransparentWrapper(id_882[auT]{1}((id_504[a](1): boolean)))) && TransparentWrapper(id_924[auT]{1}((id_551[a](1): boolean)))
       AncestorEndCondition: (id_932[i](UNKNOWN): (TransparentWrapper(id_928[iuT]{UNKNOWN}((id_890[i](UNKNOWN): (TransparentWrapper(id_886[iuT]{UNKNOWN}((id_872[i](UNKNOWN): (TransparentWrapper(id_868[iuT]{0}((id_310[a](0): boolean)) || TransparentWrapper(id_870[iuT]{0}((id_791[a](0): childrenFinished(0:2))))) || TransparentWrapper(id_888[iuT]{0}((id_785[a](0): childrenFinished(0:1))))) || TransparentWrapper(id_930[iuT]{0}((id_779[a](0): childrenFinished(0:2))))
       ParentExecutingCondition: (id_934[i](UNKNOWN): ((id_528[a](EXECUTING): state(EXECUTING)) == (id_806[a](EXECUTING): state(EXECUTING))))
       AllChildrenWaitingOrFinishedCondition: (id_770[i](UNKNOWN): childrenWaitingOrFinished(0:1))
       AbortCompleteCondition: (id_661[a](UNKNOWN): boolean)
       ParentWaitingCondition: (id_936[i](UNKNOWN): ((id_528[a](EXECUTING): state(EXECUTING)) == (id_809[a](WAITING): state(WAITING))))
       ParentFinishedCondition: (id_938[i](UNKNOWN): ((id_528[a](EXECUTING): state(EXECUTING)) == (id_812[a](FINISHED): state(FINISHED))))
       lb: (id_667[a](0): boolean)
       li: (id_668[a](123): int)
       lr: (id_323[a](3.1415): real)
       ls: (id_669[a]("what!"): string)
       y: (id_323[a](3.1415): real)
       z: (id_323[a](3.1415): real)
       i: (id_322[i](1966): int)
       r: (id_323[a](3.1415): real)
       b: (id_324[i](1): boolean)
       s: (id_325[i](UNKNOWN): string)
        LibTest1{
         State: (id_672[a](EXECUTING): state(EXECUTING)) (0)
         SkipCondition: (id_689[a](0): boolean)
         StartCondition: (id_691[a](1): boolean)
         EndCondition: (id_767[a](0): childrenFinished(0:1))
         InvariantCondition: (id_695[a](1): boolean)
         PreCondition: (id_697[a](1): boolean)
         PostCondition: (id_699[a](1): boolean)
         RepeatCondition: (id_701[a](0): boolean)
         AncestorInvariantCondition: (id_944[a](1): (TransparentWrapper(id_940[auT]{1}((id_926[a](1): (TransparentWrapper(id_922[auT]{1}((id_884[a](1): (TransparentWrapper(id_880[auT]{1}((id_866[a](1): (TransparentWrapper(id_862[auT]{1}((id_308[a](1): boolean)) && TransparentWrapper(id_864[auT]{1}((id_300[a](1): boolean)))) && TransparentWrapper(id_882[auT]{1}((id_504[a](1): boolean)))) && TransparentWrapper(id_924[auT]{1}((id_551[a](1): boolean)))) && TransparentWrapper(id_942[auT]{1}((id_645[a](1): boolean)))
         AncestorEndCondition: (id_950[i](UNKNOWN): (TransparentWrapper(id_946[iuT]{UNKNOWN}((id_932[i](UNKNOWN): (TransparentWrapper(id_928[iuT]{UNKNOWN}((id_890[i](UNKNOWN): (TransparentWrapper(id_886[iuT]{UNKNOWN}((id_872[i](UNKNOWN): (TransparentWrapper(id_868[iuT]{0}((id_310[a](0): boolean)) || TransparentWrapper(id_870[iuT]{0}((id_791[a](0): childrenFinished(0:2))))) || TransparentWrapper(id_888[iuT]{0}((id_785[a](0): childrenFinished(0:1))))) || TransparentWrapper(id_930[iuT]{0}((id_779[a](0): childrenFinished(0:2))))) || TransparentWrapper(id_948[iuT]{0}((id_773[a](0): childrenFinished(0:1))))
         ParentExecutingCondition: (id_952[i](UNKNOWN): ((id_622[a](EXECUTING): state(EXECUTING)) == (id_806[a](EXECUTING): state(EXECUTING))))
         AllChildrenWaitingOrFinishedCondition: (id_764[i](UNKNOWN): childrenWaitingOrFinished(0:1))
         AbortCompleteCondition: (id_711[a](UNKNOWN): boolean)
         ParentWaitingCondition: (id_954[i](UNKNOWN): ((id_622[a](EXECUTING): state(EXECUTING)) == (id_809[a](WAITING): state(WAITING))))
         ParentFinishedCondition: (id_956[i](UNKNOWN): ((id_622[a](EXECUTING): state(EXECUTING)) == (id_812[a](FINISHED): state(FINISHED))))
         lb: (id_667[a](0): boolean)
         li: (id_668[a](123): int)
         lr: (id_323[a](3.1415): real)
         ls: (id_669[a]("what!"): string)
         y: (id_323[a](3.1415): real)
         z: (id_323[a](3.1415): real)
         i: (id_322[i](1966): int)
         r: (id_323[a](3.1415): real)
         b: (id_324[i](1): boolean)
         s: (id_325[i](UNKNOWN): string)
          FooCall1{
           State: (id_719[a](EXECUTING): state(EXECUTING)) (0)
           SkipCondition: (id_736[a](0): boolean)
           StartCondition: (id_738[a](1): boolean)
           EndCondition: (id_978[a](UNKNOWN): ((id_977[a](UNKNOWN): boolean) && (id_740[a](1): boolean))
           InvariantCondition: (id_742[a](1): boolean)
           PreCondition: (id_744[a](1): boolean)
           PostCondition: (id_746[a](1): boolean)
           RepeatCondition: (id_748[a](0): boolean)
           AncestorInvariantCondition: (id_962[a](1): (TransparentWrapper(id_958[auT]{1}((id_944[a](1): (TransparentWrapper(id_940[auT]{1}((id_926[a](1): (TransparentWrapper(id_922[auT]{1}((id_884[a](1): (TransparentWrapper(id_880[auT]{1}((id_866[a](1): (TransparentWrapper(id_862[auT]{1}((id_308[a](1): boolean)) && TransparentWrapper(id_864[auT]{1}((id_300[a](1): boolean)))) && TransparentWrapper(id_882[auT]{1}((id_504[a](1): boolean)))) && TransparentWrapper(id_924[auT]{1}((id_551[a](1): boolean)))) && TransparentWrapper(id_942[auT]{1}((id_645[a](1): boolean)))) && TransparentWrapper(id_960[auT]{1}((id_695[a](1): boolean)))
           AncestorEndCondition: (id_968[i](UNKNOWN): (TransparentWrapper(id_964[iuT]{UNKNOWN}((id_950[i](UNKNOWN): (TransparentWrapper(id_946[iuT]{UNKNOWN}((id_932[i](UNKNOWN): (TransparentWrapper(id_928[iuT]{UNKNOWN}((id_890[i](UNKNOWN): (TransparentWrapper(id_886[iuT]{UNKNOWN}((id_872[i](UNKNOWN): (TransparentWrapper(id_868[iuT]{0}((id_310[a](0): boolean)) || TransparentWrapper(id_870[iuT]{0}((id_791[a](0): childrenFinished(0:2))))) || TransparentWrapper(id_888[iuT]{0}((id_785[a](0): childrenFinished(0:1))))) || TransparentWrapper(id_930[iuT]{0}((id_779[a](0): childrenFinished(0:2))))) || TransparentWrapper(id_948[iuT]{0}((id_773[a](0): childrenFinished(0:1))))) || TransparentWrapper(id_966[iuT]{0}((id_767[a](0): childrenFinished(0:1))))
           ParentExecutingCondition: (id_970[i](UNKNOWN): ((id_672[a](EXECUTING): state(EXECUTING)) == (id_806[a](EXECUTING): state(EXECUTING))))
           AllChildrenWaitingOrFinishedCondition: (id_756[a](UNKNOWN): boolean)
           AbortCompleteCondition: (id_976[i](UNKNOWN): boolean)
           ParentWaitingCondition: (id_972[i](UNKNOWN): ((id_672[a](EXECUTING): state(EXECUTING)) == (id_809[a](WAITING): state(WAITING))))
           ParentFinishedCondition: (id_974[i](UNKNOWN): ((id_672[a](EXECUTING): state(EXECUTING)) == (id_812[a](FINISHED): state(FINISHED))))
           lb: (id_667[a](0): boolean)
           li: (id_668[a](123): int)
           lr: (id_323[a](3.1415): real)
           ls: (id_669[a]("what!"): string)
           y: (id_323[a](3.1415): real)
           z: (id_323[a](3.1415): real)
           i: (id_322[i](1966): int)
           r: (id_323[a](3.1415): real)
           b: (id_324[i](1): boolean)
           s: (id_325[i](UNKNOWN): string)
          }
        }
      }
    }
  }
}

