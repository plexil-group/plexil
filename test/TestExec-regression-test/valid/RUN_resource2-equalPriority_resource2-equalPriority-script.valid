[PlexilExec:addPlan]Added plan: 
SimpleTask{
 State: INACTIVE (0)
  PickupObject{
   State: INACTIVE (0)
  }
  ProcessImage{
   State: INACTIVE (0)
  }
}

[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:cycle]==>Start cycle 1
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 1
[PlexilExec:step][1:0] State change queue: SimpleTask 
[PlexilExec:step][1:0:0] Transitioning node SimpleTask from INACTIVE to WAITING
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 2
[PlexilExec:step][1:1] State change queue: SimpleTask 
[PlexilExec:step][1:1:0] Transitioning node SimpleTask from WAITING to EXECUTING
[PlexilExec:notifyNodeConditionChanged] for node PickupObject
[PlexilExec:notifyNodeConditionChanged] for node ProcessImage
[PlexilExec:handleNeedsExecution]Storing action for node 'SimpleTask' of type 'NodeList' to be executed.
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:handleConditionsChanged]Node PickupObject had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'PickupObject' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'PickupObject' on the state change queue in position 3
[PlexilExec:handleConditionsChanged]Node ProcessImage had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'ProcessImage' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'ProcessImage' on the state change queue in position 4
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'SimpleTask' was previously eligible to transition but isn't now.
[PlexilExec:step][1:2] State change queue: PickupObject ProcessImage 
[PlexilExec:step][1:2:0] Transitioning node PickupObject from INACTIVE to WAITING
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node PickupObject
[PlexilExec:notifyNodeConditionChanged] for node ProcessImage
[PlexilExec:step][1:2:1] Transitioning node ProcessImage from INACTIVE to WAITING
[PlexilExec:handleConditionsChanged]Node PickupObject had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'PickupObject' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'PickupObject' on the state change queue in position 5
[PlexilExec:handleConditionsChanged]Node ProcessImage had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'ProcessImage' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'ProcessImage' on the state change queue in position 6
[PlexilExec:step][1:3] State change queue: PickupObject ProcessImage 
[PlexilExec:step][1:3:0] Transitioning node PickupObject from WAITING to EXECUTING
[PlexilExec:notifyNodeConditionChanged] for node PickupObject
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node ProcessImage
[PlexilExec:handleNeedsExecution]Storing action for node 'PickupObject' of type 'Command' to be executed.
[PlexilExec:step][1:3:1] Transitioning node ProcessImage from WAITING to EXECUTING
[PlexilExec:handleNeedsExecution]Storing action for node 'ProcessImage' of type 'Command' to be executed.
[PlexilExec:performAssignments] performing 0 assignments and 0 retractions
[Test:testOutput]Executing pickup_object(20) into (Variable Integer returnValue 0x7fc82b40b800 [a](-1)) with ack (CommandHandleVariable NodeCommandHandle 0x7fc82b40c450 [a](UNKNOWN))
[Test:testOutput]Permission to execute process_image has been denied by the resource arbiter.
[PlexilExec:cycle]==>End cycle 1
[PlexilExec:printPlan]
SimpleTask{
 State: EXECUTING (0)
 AncestorEndCondition: (Constant Boolean 0x10b5fb5d8 [a](0))
 AncestorExitCondition: (Constant Boolean 0x10b5fb5d8 [a](0))
 AncestorInvariantCondition: (Constant Boolean 0x10b5fb5f0 [a](1))
 SkipCondition: (Constant Boolean 0x10b5fb5d8 [a](0))
 StartCondition: (Constant Boolean 0x10b5fb5f0 [a](1))
 EndCondition: (AllChildrenFinished Boolean 0x7fc82b40be90 [a](0) (StateVariable NodeState PickupObject 0x7fc82b40b368 [a](EXECUTING)) (StateVariable NodeState ProcessImage 0x7fc82b40ba38 [a](EXECUTING)))
 ExitCondition: (Constant Boolean 0x10b5fb5d8 [a](0))
 InvariantCondition: (Constant Boolean 0x10b5fb5f0 [a](1))
 PreCondition: (Constant Boolean 0x10b5fb5f0 [a](1))
 PostCondition: (Constant Boolean 0x10b5fb5f0 [a](1))
 RepeatCondition: (Constant Boolean 0x10b5fb5d8 [a](0))
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean 0x7fc82b40bdb0 [i](UNKNOWN) (StateVariable NodeState PickupObject 0x7fc82b40b368 [a](EXECUTING)) (StateVariable NodeState ProcessImage 0x7fc82b40ba38 [a](EXECUTING)))
  PickupObject{
   State: EXECUTING (0)
   AncestorEndCondition: (AllChildrenFinished Boolean 0x7fc82b40be90 [a](0) (StateVariable NodeState PickupObject 0x7fc82b40b368 [a](EXECUTING)) (StateVariable NodeState ProcessImage 0x7fc82b40ba38 [a](EXECUTING)))
   AncestorExitCondition: (Constant Boolean 0x10b5fb5d8 [a](0))
   AncestorInvariantCondition: (Constant Boolean 0x10b5fb5f0 [a](1))
   SkipCondition: (Constant Boolean 0x10b5fb5d8 [a](0))
   StartCondition: (Constant Boolean 0x10b5fb5f0 [a](1))
   EndCondition: (OR Boolean 0x7fc82b40ca80 [a](UNKNOWN) (Interruptible Boolean 0x7fc82b40cae0 [a](UNKNOWN) (CommandHandleVariable NodeCommandHandle 0x7fc82b40c450 [a](UNKNOWN))) (EQ Boolean 0x7fc82b40c990 [a](0) (Constant Integer 0x7fc82b40c440 [a](10)) (Variable Integer returnValue 0x7fc82b40b800 [a](-1))))
   ExitCondition: (Constant Boolean 0x10b5fb5d8 [a](0))
   InvariantCondition: (Constant Boolean 0x10b5fb5f0 [a](1))
   PreCondition: (Constant Boolean 0x10b5fb5f0 [a](1))
   PostCondition: (EQ Boolean 0x7fc82b40ca40 [i](UNKNOWN) (CommandHandleVariable NodeCommandHandle 0x7fc82b40c450 [a](UNKNOWN)) (CommandHandleValue NodeCommandHandle 0x10b5fb840 [a](COMMAND_SENT_TO_SYSTEM)))
   RepeatCondition: (Constant Boolean 0x10b5fb5d8 [a](0))
   ActionCompleteCondition: (IsKnown Boolean 0x7fc82b40c230 [i](UNKNOWN) (CommandHandleVariable NodeCommandHandle 0x7fc82b40c450 [a](UNKNOWN)))
   AbortCompleteCondition: (Variable Boolean PickupObject abortComplete 0x7fc82b40c490 [a](UNKNOWN))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fc82b40c450 [a](UNKNOWN))
   priority20: (Variable Integer priority20 0x7fc82b40b8a0 [a](20))
   returnValue: (Variable Integer returnValue 0x7fc82b40b800 [a](-1))
  }
  ProcessImage{
   State: EXECUTING (0)
   AncestorEndCondition: (AllChildrenFinished Boolean 0x7fc82b40be90 [a](0) (StateVariable NodeState PickupObject 0x7fc82b40b368 [a](EXECUTING)) (StateVariable NodeState ProcessImage 0x7fc82b40ba38 [a](EXECUTING)))
   AncestorExitCondition: (Constant Boolean 0x10b5fb5d8 [a](0))
   AncestorInvariantCondition: (Constant Boolean 0x10b5fb5f0 [a](1))
   SkipCondition: (Constant Boolean 0x10b5fb5d8 [a](0))
   StartCondition: (Constant Boolean 0x10b5fb5f0 [a](1))
   EndCondition: (Constant Boolean 0x10b5fb5f0 [a](1))
   ExitCondition: (Constant Boolean 0x10b5fb5d8 [a](0))
   InvariantCondition: (Constant Boolean 0x10b5fb5f0 [a](1))
   PreCondition: (Constant Boolean 0x10b5fb5f0 [a](1))
   PostCondition: (EQ Boolean 0x7fc82b40cde0 [i](UNKNOWN) (CommandHandleVariable NodeCommandHandle 0x7fc82b40ce40 [a](COMMAND_DENIED)) (CommandHandleValue NodeCommandHandle 0x10b5fb8a0 [a](COMMAND_DENIED)))
   RepeatCondition: (Constant Boolean 0x10b5fb5d8 [a](0))
   ActionCompleteCondition: (IsKnown Boolean 0x7fc82b40cc20 [i](UNKNOWN) (CommandHandleVariable NodeCommandHandle 0x7fc82b40ce40 [a](COMMAND_DENIED)))
   AbortCompleteCondition: (Variable Boolean ProcessImage abortComplete 0x7fc82b40ce80 [a](UNKNOWN))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fc82b40ce40 [a](COMMAND_DENIED))
   mem_priority2: (Variable Integer mem_priority2 0x7fc82b40bc70 [a](20))
  }
}

[Test:testOutput]Sending command ACK pickup_object(20) = (string)COMMAND_SENT_TO_SYSTEM
[PlexilExec:cycle]==>Start cycle 2
[PlexilExec:handleConditionsChanged]Node PickupObject had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'PickupObject' was previously eligible to transition but isn't now.
[PlexilExec:handleConditionsChanged]Node ProcessImage had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'ProcessImage' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'ProcessImage' on the state change queue in position 7
[PlexilExec:step][2:0] State change queue: ProcessImage 
[PlexilExec:step][2:0:0] Transitioning node ProcessImage from EXECUTING to FINISHING
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node PickupObject
[PlexilExec:notifyNodeConditionChanged] for node ProcessImage
[PlexilExec:handleConditionsChanged]Node ProcessImage had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'ProcessImage' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'ProcessImage' on the state change queue in position 8
[PlexilExec:step][2:1] State change queue: ProcessImage 
[PlexilExec:step][2:1:0] Transitioning node ProcessImage from FINISHING to ITERATION_ENDED
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node PickupObject
[PlexilExec:notifyNodeConditionChanged] for node ProcessImage
[PlexilExec:handleConditionsChanged]Node ProcessImage had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'ProcessImage' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'ProcessImage' on the state change queue in position 9
[PlexilExec:step][2:2] State change queue: ProcessImage 
[PlexilExec:step][2:2:0] Transitioning node ProcessImage from ITERATION_ENDED to FINISHED
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node PickupObject
[PlexilExec:notifyNodeConditionChanged] for node ProcessImage
[PlexilExec:handleConditionsChanged]Node ProcessImage had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'ProcessImage' was previously eligible to transition but isn't now.
[PlexilExec:performAssignments] performing 0 assignments and 0 retractions
[PlexilExec:cycle]==>End cycle 2
[PlexilExec:printPlan]
SimpleTask{
 State: EXECUTING (0)
 AncestorEndCondition: (Constant Boolean 0x10b5fb5d8 [a](0))
 AncestorExitCondition: (Constant Boolean 0x10b5fb5d8 [a](0))
 AncestorInvariantCondition: (Constant Boolean 0x10b5fb5f0 [a](1))
 SkipCondition: (Constant Boolean 0x10b5fb5d8 [a](0))
 StartCondition: (Constant Boolean 0x10b5fb5f0 [a](1))
 EndCondition: (AllChildrenFinished Boolean 0x7fc82b40be90 [a](0) (StateVariable NodeState PickupObject 0x7fc82b40b368 [a](EXECUTING)) (StateVariable NodeState ProcessImage 0x7fc82b40ba38 [a](FINISHED)))
 ExitCondition: (Constant Boolean 0x10b5fb5d8 [a](0))
 InvariantCondition: (Constant Boolean 0x10b5fb5f0 [a](1))
 PreCondition: (Constant Boolean 0x10b5fb5f0 [a](1))
 PostCondition: (Constant Boolean 0x10b5fb5f0 [a](1))
 RepeatCondition: (Constant Boolean 0x10b5fb5d8 [a](0))
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean 0x7fc82b40bdb0 [i](UNKNOWN) (StateVariable NodeState PickupObject 0x7fc82b40b368 [a](EXECUTING)) (StateVariable NodeState ProcessImage 0x7fc82b40ba38 [a](FINISHED)))
  PickupObject{
   State: EXECUTING (0)
   AncestorEndCondition: (AllChildrenFinished Boolean 0x7fc82b40be90 [a](0) (StateVariable NodeState PickupObject 0x7fc82b40b368 [a](EXECUTING)) (StateVariable NodeState ProcessImage 0x7fc82b40ba38 [a](FINISHED)))
   AncestorExitCondition: (Constant Boolean 0x10b5fb5d8 [a](0))
   AncestorInvariantCondition: (Constant Boolean 0x10b5fb5f0 [a](1))
   SkipCondition: (Constant Boolean 0x10b5fb5d8 [a](0))
   StartCondition: (Constant Boolean 0x10b5fb5f0 [a](1))
   EndCondition: (OR Boolean 0x7fc82b40ca80 [a](0) (Interruptible Boolean 0x7fc82b40cae0 [a](0) (CommandHandleVariable NodeCommandHandle 0x7fc82b40c450 [a](COMMAND_SENT_TO_SYSTEM))) (EQ Boolean 0x7fc82b40c990 [a](0) (Constant Integer 0x7fc82b40c440 [a](10)) (Variable Integer returnValue 0x7fc82b40b800 [a](-1))))
   ExitCondition: (Constant Boolean 0x10b5fb5d8 [a](0))
   InvariantCondition: (Constant Boolean 0x10b5fb5f0 [a](1))
   PreCondition: (Constant Boolean 0x10b5fb5f0 [a](1))
   PostCondition: (EQ Boolean 0x7fc82b40ca40 [i](UNKNOWN) (CommandHandleVariable NodeCommandHandle 0x7fc82b40c450 [a](COMMAND_SENT_TO_SYSTEM)) (CommandHandleValue NodeCommandHandle 0x10b5fb840 [a](COMMAND_SENT_TO_SYSTEM)))
   RepeatCondition: (Constant Boolean 0x10b5fb5d8 [a](0))
   ActionCompleteCondition: (IsKnown Boolean 0x7fc82b40c230 [i](UNKNOWN) (CommandHandleVariable NodeCommandHandle 0x7fc82b40c450 [a](COMMAND_SENT_TO_SYSTEM)))
   AbortCompleteCondition: (Variable Boolean PickupObject abortComplete 0x7fc82b40c490 [a](UNKNOWN))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fc82b40c450 [a](COMMAND_SENT_TO_SYSTEM))
   priority20: (Variable Integer priority20 0x7fc82b40b8a0 [a](20))
   returnValue: (Variable Integer returnValue 0x7fc82b40b800 [a](-1))
  }
  ProcessImage{
   State: FINISHED (0)
   Outcome: SUCCESS
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fc82b40ce40 [i](UNKNOWN))
   mem_priority2: (Variable Integer mem_priority2 0x7fc82b40bc70 [i](UNKNOWN))
  }
}

[Test:testOutput]Sending command result pickup_object(20) = 10
[PlexilExec:notifyNodeConditionChanged] for node PickupObject
[PlexilExec:cycle]==>Start cycle 3
[PlexilExec:handleConditionsChanged]Node PickupObject had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'PickupObject' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'PickupObject' on the state change queue in position 10
[PlexilExec:step][3:0] State change queue: PickupObject 
[PlexilExec:step][3:0:0] Transitioning node PickupObject from EXECUTING to FINISHING
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node PickupObject
[PlexilExec:notifyNodeConditionChanged] for node ProcessImage
[PlexilExec:handleConditionsChanged]Node PickupObject had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'PickupObject' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'PickupObject' on the state change queue in position 11
[PlexilExec:step][3:1] State change queue: PickupObject 
[PlexilExec:step][3:1:0] Transitioning node PickupObject from FINISHING to ITERATION_ENDED
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node PickupObject
[PlexilExec:notifyNodeConditionChanged] for node ProcessImage
[PlexilExec:handleConditionsChanged]Node PickupObject had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'PickupObject' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'PickupObject' on the state change queue in position 12
[PlexilExec:step][3:2] State change queue: PickupObject 
[PlexilExec:step][3:2:0] Transitioning node PickupObject from ITERATION_ENDED to FINISHED
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:notifyNodeConditionChanged] for node PickupObject
[PlexilExec:notifyNodeConditionChanged] for node ProcessImage
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 13
[PlexilExec:handleConditionsChanged]Node PickupObject had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'PickupObject' was previously eligible to transition but isn't now.
[PlexilExec:step][3:3] State change queue: SimpleTask 
[PlexilExec:step][3:3:0] Transitioning node SimpleTask from EXECUTING to FINISHING
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 14
[PlexilExec:step][3:4] State change queue: SimpleTask 
[PlexilExec:step][3:4:0] Transitioning node SimpleTask from FINISHING to ITERATION_ENDED
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 15
[PlexilExec:step][3:5] State change queue: SimpleTask 
[PlexilExec:step][3:5:0] Transitioning node SimpleTask from ITERATION_ENDED to FINISHED
[PlexilExec:notifyNodeConditionChanged] for node SimpleTask
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'SimpleTask' was previously eligible to transition but isn't now.
[PlexilExec:performAssignments] performing 0 assignments and 0 retractions
[PlexilExec:cycle]==>End cycle 3
[PlexilExec:printPlan]
SimpleTask{
 State: FINISHED (0)
 Outcome: SUCCESS
  PickupObject{
   State: FINISHED (0)
   Outcome: SUCCESS
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fc82b40c450 [i](UNKNOWN))
   priority20: (Variable Integer priority20 0x7fc82b40b8a0 [i](UNKNOWN))
   returnValue: (Variable Integer returnValue 0x7fc82b40b800 [i](UNKNOWN))
  }
  ProcessImage{
   State: FINISHED (0)
   Outcome: SUCCESS
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fc82b40ce40 [i](UNKNOWN))
   mem_priority2: (Variable Integer mem_priority2 0x7fc82b40bc70 [i](UNKNOWN))
  }
}

