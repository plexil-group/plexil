[PlexilExec:addPlan]Added plan: 
simple-closedloop-command-multipleAck{
 State: INACTIVE (0)
  Drive{
   State: INACTIVE (0)
  }
  NextWaypoint{
   State: INACTIVE (0)
  }
}

[PlexilExec:notifyNodeConditionChanged] for node simple-closedloop-command-multipleAck 0x7fbeeae04640
[PlexilExec:cycle] ==>Start cycle 1
[PlexilExec:step][1:0] Check queue: simple-closedloop-command-multipleAck 0x7fbeeae04640 
[PlexilExec:handleConditionsChanged] Considering node simple-closedloop-command-multipleAck 0x7fbeeae04640 for state transition.
[PlexilExec:addStateChangeNode] Placing node simple-closedloop-command-multipleAck 0x7fbeeae04640 on the state change queue in position 1
[PlexilExec:step][1:0] State change queue: simple-closedloop-command-multipleAck 0x7fbeeae04640 
[PlexilExec:step][1:0:0] Transitioning node simple-closedloop-command-multipleAck 0x7fbeeae04640 from INACTIVE to WAITING
[PlexilExec:notifyNodeConditionChanged] for node simple-closedloop-command-multipleAck 0x7fbeeae04640
[PlexilExec:step][1:1] Check queue: simple-closedloop-command-multipleAck 0x7fbeeae04640 
[PlexilExec:handleConditionsChanged] Considering node simple-closedloop-command-multipleAck 0x7fbeeae04640 for state transition.
[PlexilExec:addStateChangeNode] Placing node simple-closedloop-command-multipleAck 0x7fbeeae04640 on the state change queue in position 2
[PlexilExec:step][1:1] State change queue: simple-closedloop-command-multipleAck 0x7fbeeae04640 
[PlexilExec:step][1:1:0] Transitioning node simple-closedloop-command-multipleAck 0x7fbeeae04640 from WAITING to EXECUTING
[PlexilExec:notifyNodeConditionChanged] for node simple-closedloop-command-multipleAck 0x7fbeeae04640
[PlexilExec:notifyNodeConditionChanged] for node Drive 0x7fbeeae04920
[PlexilExec:notifyNodeConditionChanged] for node NextWaypoint 0x7fbeeae04bb0
[PlexilExec:handleNeedsExecution] Storing action for node simple-closedloop-command-multipleAck 0x7fbeeae04640 of type NodeList to be executed.
[PlexilExec:step][1:2] Check queue: simple-closedloop-command-multipleAck 0x7fbeeae04640 Drive 0x7fbeeae04920 NextWaypoint 0x7fbeeae04bb0 
[PlexilExec:handleConditionsChanged] Considering node Drive 0x7fbeeae04920 for state transition.
[PlexilExec:addStateChangeNode] Placing node Drive 0x7fbeeae04920 on the state change queue in position 3
[PlexilExec:handleConditionsChanged] Considering node NextWaypoint 0x7fbeeae04bb0 for state transition.
[PlexilExec:addStateChangeNode] Placing node NextWaypoint 0x7fbeeae04bb0 on the state change queue in position 4
[PlexilExec:step][1:2] State change queue: Drive 0x7fbeeae04920 NextWaypoint 0x7fbeeae04bb0 
[PlexilExec:step][1:2:0] Transitioning node Drive 0x7fbeeae04920 from INACTIVE to WAITING
[PlexilExec:notifyNodeConditionChanged] for node Drive 0x7fbeeae04920
[PlexilExec:notifyNodeConditionChanged] for node simple-closedloop-command-multipleAck 0x7fbeeae04640
[PlexilExec:step][1:2:1] Transitioning node NextWaypoint 0x7fbeeae04bb0 from INACTIVE to WAITING
[PlexilExec:notifyNodeConditionChanged] for node NextWaypoint 0x7fbeeae04bb0
[PlexilExec:step][1:3] Check queue: Drive 0x7fbeeae04920 simple-closedloop-command-multipleAck 0x7fbeeae04640 NextWaypoint 0x7fbeeae04bb0 
[PlexilExec:handleConditionsChanged] Considering node Drive 0x7fbeeae04920 for state transition.
[PlexilExec:addStateChangeNode] Placing node Drive 0x7fbeeae04920 on the state change queue in position 5
[PlexilExec:step][1:3] State change queue: Drive 0x7fbeeae04920 
[PlexilExec:step][1:3:0] Transitioning node Drive 0x7fbeeae04920 from WAITING to EXECUTING
[PlexilExec:notifyNodeConditionChanged] for node Drive 0x7fbeeae04920
[PlexilExec:handleNeedsExecution] Storing action for node Drive 0x7fbeeae04920 of type Command to be executed.
[PlexilExec:notifyNodeConditionChanged] for node simple-closedloop-command-multipleAck 0x7fbeeae04640
[PlexilExec:performAssignments] performing 0 assignments and 0 retractions
[Test:testOutput]Executing drive() into (Variable Integer retTestFunction 0x7fbeeae04898 [a](-1)) with ack (CommandHandleVariable NodeCommandHandle 0x7fbeeae04ab0 [a](UNKNOWN))
[PlexilExec:cycle] ==>End cycle 1
[PlexilExec:printPlan]
simple-closedloop-command-multipleAck{
 State: EXECUTING (0)
 EndCondition: (AllChildrenFinished Boolean simple-closedloop-command-multipleAck0x7fbeeae04e40 [a](0))
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean simple-closedloop-command-multipleAck0x7fbeeae04770 [i](0))
 retTestFunction: (Variable Integer retTestFunction 0x7fbeeae04898 [a](-1))
  Drive{
   State: EXECUTING (0)
   EndCondition: (OR Boolean 0x7fbeeae04ff0 [a](0) (Interruptible Boolean Drive0x7fbeeae04fa0 [a](0)) (EQ Boolean 0x7fbeeae04ed0 [a](0) (Constant Integer 0x7fbeeae04f30 [a](10)) (Variable Integer retTestFunction 0x7fbeeae04898 [a](-1))))
   PostCondition: (EQ Boolean 0x7fbeeae04f40 [i](UNKNOWN) (CommandHandleVariable NodeCommandHandle 0x7fbeeae04ab0 [a](UNKNOWN)) (CommandHandleValue NodeCommandHandle 0x102fc70e8 [a](COMMAND_SUCCESS)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x7fbeeae04a68 [i](0))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x7fbeeae04af0 [a](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fbeeae04ab0 [a](UNKNOWN))
  }
  NextWaypoint{
   State: WAITING (0)
   StartCondition: (EQ Boolean 0x7fbeeae050d0 [a](UNKNOWN) (CommandHandleVariable NodeCommandHandle 0x7fbeeae04ab0 [a](UNKNOWN)) (CommandHandleValue NodeCommandHandle 0x102fc70a0 [a](COMMAND_RCVD_BY_SYSTEM)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x7fbeeae04cf8 [i](0))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x7fbeeae04d80 [i](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fbeeae04d40 [i](UNKNOWN))
  }
}

[Test:testOutput]Sending command ACK drive() = (string)COMMAND_ACCEPTED
[PlexilExec:notifyNodeConditionChanged] for node NextWaypoint 0x7fbeeae04bb0
[PlexilExec:cycle] ==>Start cycle 2
[PlexilExec:step][2:0] Check queue: Drive 0x7fbeeae04920 simple-closedloop-command-multipleAck 0x7fbeeae04640 NextWaypoint 0x7fbeeae04bb0 
[PlexilExec:performAssignments] performing 0 assignments and 0 retractions
[PlexilExec:cycle] ==>End cycle 2
[PlexilExec:printPlan]
simple-closedloop-command-multipleAck{
 State: EXECUTING (0)
 EndCondition: (AllChildrenFinished Boolean simple-closedloop-command-multipleAck0x7fbeeae04e40 [a](0))
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean simple-closedloop-command-multipleAck0x7fbeeae04770 [i](0))
 retTestFunction: (Variable Integer retTestFunction 0x7fbeeae04898 [a](-1))
  Drive{
   State: EXECUTING (0)
   EndCondition: (OR Boolean 0x7fbeeae04ff0 [a](0) (Interruptible Boolean Drive0x7fbeeae04fa0 [a](0)) (EQ Boolean 0x7fbeeae04ed0 [a](0) (Constant Integer 0x7fbeeae04f30 [a](10)) (Variable Integer retTestFunction 0x7fbeeae04898 [a](-1))))
   PostCondition: (EQ Boolean 0x7fbeeae04f40 [i](0) (CommandHandleVariable NodeCommandHandle 0x7fbeeae04ab0 [a](COMMAND_ACCEPTED)) (CommandHandleValue NodeCommandHandle 0x102fc70e8 [a](COMMAND_SUCCESS)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x7fbeeae04a68 [i](1))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x7fbeeae04af0 [a](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fbeeae04ab0 [a](COMMAND_ACCEPTED))
  }
  NextWaypoint{
   State: WAITING (0)
   StartCondition: (EQ Boolean 0x7fbeeae050d0 [a](0) (CommandHandleVariable NodeCommandHandle 0x7fbeeae04ab0 [a](COMMAND_ACCEPTED)) (CommandHandleValue NodeCommandHandle 0x102fc70a0 [a](COMMAND_RCVD_BY_SYSTEM)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x7fbeeae04cf8 [i](0))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x7fbeeae04d80 [i](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fbeeae04d40 [i](UNKNOWN))
  }
}

[PlexilExec:cycle] ==>Start cycle 3
[PlexilExec:step][3:0] Check queue: 
[PlexilExec:performAssignments] performing 0 assignments and 0 retractions
[PlexilExec:cycle] ==>End cycle 3
[PlexilExec:printPlan]
simple-closedloop-command-multipleAck{
 State: EXECUTING (0)
 EndCondition: (AllChildrenFinished Boolean simple-closedloop-command-multipleAck0x7fbeeae04e40 [a](0))
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean simple-closedloop-command-multipleAck0x7fbeeae04770 [i](0))
 retTestFunction: (Variable Integer retTestFunction 0x7fbeeae04898 [a](-1))
  Drive{
   State: EXECUTING (0)
   EndCondition: (OR Boolean 0x7fbeeae04ff0 [a](0) (Interruptible Boolean Drive0x7fbeeae04fa0 [a](0)) (EQ Boolean 0x7fbeeae04ed0 [a](0) (Constant Integer 0x7fbeeae04f30 [a](10)) (Variable Integer retTestFunction 0x7fbeeae04898 [a](-1))))
   PostCondition: (EQ Boolean 0x7fbeeae04f40 [i](0) (CommandHandleVariable NodeCommandHandle 0x7fbeeae04ab0 [a](COMMAND_ACCEPTED)) (CommandHandleValue NodeCommandHandle 0x102fc70e8 [a](COMMAND_SUCCESS)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x7fbeeae04a68 [i](1))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x7fbeeae04af0 [a](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fbeeae04ab0 [a](COMMAND_ACCEPTED))
  }
  NextWaypoint{
   State: WAITING (0)
   StartCondition: (EQ Boolean 0x7fbeeae050d0 [a](0) (CommandHandleVariable NodeCommandHandle 0x7fbeeae04ab0 [a](COMMAND_ACCEPTED)) (CommandHandleValue NodeCommandHandle 0x102fc70a0 [a](COMMAND_RCVD_BY_SYSTEM)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x7fbeeae04cf8 [i](0))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x7fbeeae04d80 [i](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fbeeae04d40 [i](UNKNOWN))
  }
}

[Test:testOutput]Sending command ACK drive() = (string)COMMAND_SENT_TO_SYSTEM
[PlexilExec:notifyNodeConditionChanged] for node Drive 0x7fbeeae04920
[PlexilExec:notifyNodeConditionChanged] for node NextWaypoint 0x7fbeeae04bb0
[PlexilExec:cycle] ==>Start cycle 4
[PlexilExec:step][4:0] Check queue: Drive 0x7fbeeae04920 NextWaypoint 0x7fbeeae04bb0 
[PlexilExec:performAssignments] performing 0 assignments and 0 retractions
[PlexilExec:cycle] ==>End cycle 4
[PlexilExec:printPlan]
simple-closedloop-command-multipleAck{
 State: EXECUTING (0)
 EndCondition: (AllChildrenFinished Boolean simple-closedloop-command-multipleAck0x7fbeeae04e40 [a](0))
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean simple-closedloop-command-multipleAck0x7fbeeae04770 [i](0))
 retTestFunction: (Variable Integer retTestFunction 0x7fbeeae04898 [a](-1))
  Drive{
   State: EXECUTING (0)
   EndCondition: (OR Boolean 0x7fbeeae04ff0 [a](0) (Interruptible Boolean Drive0x7fbeeae04fa0 [a](0)) (EQ Boolean 0x7fbeeae04ed0 [a](0) (Constant Integer 0x7fbeeae04f30 [a](10)) (Variable Integer retTestFunction 0x7fbeeae04898 [a](-1))))
   PostCondition: (EQ Boolean 0x7fbeeae04f40 [i](0) (CommandHandleVariable NodeCommandHandle 0x7fbeeae04ab0 [a](COMMAND_SENT_TO_SYSTEM)) (CommandHandleValue NodeCommandHandle 0x102fc70e8 [a](COMMAND_SUCCESS)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x7fbeeae04a68 [i](1))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x7fbeeae04af0 [a](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fbeeae04ab0 [a](COMMAND_SENT_TO_SYSTEM))
  }
  NextWaypoint{
   State: WAITING (0)
   StartCondition: (EQ Boolean 0x7fbeeae050d0 [a](0) (CommandHandleVariable NodeCommandHandle 0x7fbeeae04ab0 [a](COMMAND_SENT_TO_SYSTEM)) (CommandHandleValue NodeCommandHandle 0x102fc70a0 [a](COMMAND_RCVD_BY_SYSTEM)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x7fbeeae04cf8 [i](0))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x7fbeeae04d80 [i](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fbeeae04d40 [i](UNKNOWN))
  }
}

[PlexilExec:cycle] ==>Start cycle 5
[PlexilExec:step][5:0] Check queue: 
[PlexilExec:performAssignments] performing 0 assignments and 0 retractions
[PlexilExec:cycle] ==>End cycle 5
[PlexilExec:printPlan]
simple-closedloop-command-multipleAck{
 State: EXECUTING (0)
 EndCondition: (AllChildrenFinished Boolean simple-closedloop-command-multipleAck0x7fbeeae04e40 [a](0))
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean simple-closedloop-command-multipleAck0x7fbeeae04770 [i](0))
 retTestFunction: (Variable Integer retTestFunction 0x7fbeeae04898 [a](-1))
  Drive{
   State: EXECUTING (0)
   EndCondition: (OR Boolean 0x7fbeeae04ff0 [a](0) (Interruptible Boolean Drive0x7fbeeae04fa0 [a](0)) (EQ Boolean 0x7fbeeae04ed0 [a](0) (Constant Integer 0x7fbeeae04f30 [a](10)) (Variable Integer retTestFunction 0x7fbeeae04898 [a](-1))))
   PostCondition: (EQ Boolean 0x7fbeeae04f40 [i](0) (CommandHandleVariable NodeCommandHandle 0x7fbeeae04ab0 [a](COMMAND_SENT_TO_SYSTEM)) (CommandHandleValue NodeCommandHandle 0x102fc70e8 [a](COMMAND_SUCCESS)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x7fbeeae04a68 [i](1))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x7fbeeae04af0 [a](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fbeeae04ab0 [a](COMMAND_SENT_TO_SYSTEM))
  }
  NextWaypoint{
   State: WAITING (0)
   StartCondition: (EQ Boolean 0x7fbeeae050d0 [a](0) (CommandHandleVariable NodeCommandHandle 0x7fbeeae04ab0 [a](COMMAND_SENT_TO_SYSTEM)) (CommandHandleValue NodeCommandHandle 0x102fc70a0 [a](COMMAND_RCVD_BY_SYSTEM)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x7fbeeae04cf8 [i](0))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x7fbeeae04d80 [i](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fbeeae04d40 [i](UNKNOWN))
  }
}

[Test:testOutput]Sending command ACK drive() = (string)COMMAND_RCVD_BY_SYSTEM
[PlexilExec:notifyNodeConditionChanged] for node Drive 0x7fbeeae04920
[PlexilExec:notifyNodeConditionChanged] for node NextWaypoint 0x7fbeeae04bb0
[PlexilExec:cycle] ==>Start cycle 6
[PlexilExec:step][6:0] Check queue: Drive 0x7fbeeae04920 NextWaypoint 0x7fbeeae04bb0 
[PlexilExec:handleConditionsChanged] Considering node NextWaypoint 0x7fbeeae04bb0 for state transition.
[PlexilExec:addStateChangeNode] Placing node NextWaypoint 0x7fbeeae04bb0 on the state change queue in position 6
[PlexilExec:step][6:0] State change queue: NextWaypoint 0x7fbeeae04bb0 
[PlexilExec:step][6:0:0] Transitioning node NextWaypoint 0x7fbeeae04bb0 from WAITING to EXECUTING
[PlexilExec:notifyNodeConditionChanged] for node NextWaypoint 0x7fbeeae04bb0
[PlexilExec:handleNeedsExecution] Storing action for node NextWaypoint 0x7fbeeae04bb0 of type Command to be executed.
[PlexilExec:notifyNodeConditionChanged] for node simple-closedloop-command-multipleAck 0x7fbeeae04640
[PlexilExec:performAssignments] performing 0 assignments and 0 retractions
[Test:testOutput]Executing next_waypoint() into noId with ack (CommandHandleVariable NodeCommandHandle 0x7fbeeae04d40 [a](UNKNOWN))
[PlexilExec:cycle] ==>End cycle 6
[PlexilExec:printPlan]
simple-closedloop-command-multipleAck{
 State: EXECUTING (0)
 EndCondition: (AllChildrenFinished Boolean simple-closedloop-command-multipleAck0x7fbeeae04e40 [a](0))
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean simple-closedloop-command-multipleAck0x7fbeeae04770 [i](0))
 retTestFunction: (Variable Integer retTestFunction 0x7fbeeae04898 [a](-1))
  Drive{
   State: EXECUTING (0)
   EndCondition: (OR Boolean 0x7fbeeae04ff0 [a](0) (Interruptible Boolean Drive0x7fbeeae04fa0 [a](0)) (EQ Boolean 0x7fbeeae04ed0 [a](0) (Constant Integer 0x7fbeeae04f30 [a](10)) (Variable Integer retTestFunction 0x7fbeeae04898 [a](-1))))
   PostCondition: (EQ Boolean 0x7fbeeae04f40 [i](0) (CommandHandleVariable NodeCommandHandle 0x7fbeeae04ab0 [a](COMMAND_RCVD_BY_SYSTEM)) (CommandHandleValue NodeCommandHandle 0x102fc70e8 [a](COMMAND_SUCCESS)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x7fbeeae04a68 [i](1))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x7fbeeae04af0 [a](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fbeeae04ab0 [a](COMMAND_RCVD_BY_SYSTEM))
  }
  NextWaypoint{
   State: EXECUTING (0)
   StartCondition: (EQ Boolean 0x7fbeeae050d0 [i](1) (CommandHandleVariable NodeCommandHandle 0x7fbeeae04ab0 [a](COMMAND_RCVD_BY_SYSTEM)) (CommandHandleValue NodeCommandHandle 0x102fc70a0 [a](COMMAND_RCVD_BY_SYSTEM)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x7fbeeae04cf8 [i](0))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x7fbeeae04d80 [a](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fbeeae04d40 [a](UNKNOWN))
  }
}

[PlexilExec:cycle] ==>Start cycle 7
[PlexilExec:step][7:0] Check queue: NextWaypoint 0x7fbeeae04bb0 simple-closedloop-command-multipleAck 0x7fbeeae04640 
[PlexilExec:handleConditionsChanged] Considering node NextWaypoint 0x7fbeeae04bb0 for state transition.
[PlexilExec:addStateChangeNode] Placing node NextWaypoint 0x7fbeeae04bb0 on the state change queue in position 7
[PlexilExec:step][7:0] State change queue: NextWaypoint 0x7fbeeae04bb0 
[PlexilExec:step][7:0:0] Transitioning node NextWaypoint 0x7fbeeae04bb0 from EXECUTING to FINISHING
[PlexilExec:notifyNodeConditionChanged] for node NextWaypoint 0x7fbeeae04bb0
[PlexilExec:notifyNodeConditionChanged] for node simple-closedloop-command-multipleAck 0x7fbeeae04640
[PlexilExec:step][7:1] Check queue: NextWaypoint 0x7fbeeae04bb0 simple-closedloop-command-multipleAck 0x7fbeeae04640 
[PlexilExec:performAssignments] performing 0 assignments and 0 retractions
[PlexilExec:cycle] ==>End cycle 7
[PlexilExec:printPlan]
simple-closedloop-command-multipleAck{
 State: EXECUTING (0)
 EndCondition: (AllChildrenFinished Boolean simple-closedloop-command-multipleAck0x7fbeeae04e40 [a](0))
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean simple-closedloop-command-multipleAck0x7fbeeae04770 [i](0))
 retTestFunction: (Variable Integer retTestFunction 0x7fbeeae04898 [a](-1))
  Drive{
   State: EXECUTING (0)
   EndCondition: (OR Boolean 0x7fbeeae04ff0 [a](0) (Interruptible Boolean Drive0x7fbeeae04fa0 [a](0)) (EQ Boolean 0x7fbeeae04ed0 [a](0) (Constant Integer 0x7fbeeae04f30 [a](10)) (Variable Integer retTestFunction 0x7fbeeae04898 [a](-1))))
   PostCondition: (EQ Boolean 0x7fbeeae04f40 [i](0) (CommandHandleVariable NodeCommandHandle 0x7fbeeae04ab0 [a](COMMAND_RCVD_BY_SYSTEM)) (CommandHandleValue NodeCommandHandle 0x102fc70e8 [a](COMMAND_SUCCESS)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x7fbeeae04a68 [i](1))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x7fbeeae04af0 [a](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fbeeae04ab0 [a](COMMAND_RCVD_BY_SYSTEM))
  }
  NextWaypoint{
   State: FINISHING (0)
   StartCondition: (EQ Boolean 0x7fbeeae050d0 [i](1) (CommandHandleVariable NodeCommandHandle 0x7fbeeae04ab0 [a](COMMAND_RCVD_BY_SYSTEM)) (CommandHandleValue NodeCommandHandle 0x102fc70a0 [a](COMMAND_RCVD_BY_SYSTEM)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x7fbeeae04cf8 [a](0))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x7fbeeae04d80 [a](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fbeeae04d40 [a](UNKNOWN))
  }
}

[Test:testOutput]Sending command ACK drive() = (string)COMMAND_SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node Drive 0x7fbeeae04920
[PlexilExec:cycle] ==>Start cycle 8
[PlexilExec:step][8:0] Check queue: Drive 0x7fbeeae04920 
[PlexilExec:performAssignments] performing 0 assignments and 0 retractions
[PlexilExec:cycle] ==>End cycle 8
[PlexilExec:printPlan]
simple-closedloop-command-multipleAck{
 State: EXECUTING (0)
 EndCondition: (AllChildrenFinished Boolean simple-closedloop-command-multipleAck0x7fbeeae04e40 [a](0))
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean simple-closedloop-command-multipleAck0x7fbeeae04770 [i](0))
 retTestFunction: (Variable Integer retTestFunction 0x7fbeeae04898 [a](-1))
  Drive{
   State: EXECUTING (0)
   EndCondition: (OR Boolean 0x7fbeeae04ff0 [a](0) (Interruptible Boolean Drive0x7fbeeae04fa0 [a](0)) (EQ Boolean 0x7fbeeae04ed0 [a](0) (Constant Integer 0x7fbeeae04f30 [a](10)) (Variable Integer retTestFunction 0x7fbeeae04898 [a](-1))))
   PostCondition: (EQ Boolean 0x7fbeeae04f40 [i](1) (CommandHandleVariable NodeCommandHandle 0x7fbeeae04ab0 [a](COMMAND_SUCCESS)) (CommandHandleValue NodeCommandHandle 0x102fc70e8 [a](COMMAND_SUCCESS)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x7fbeeae04a68 [i](1))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x7fbeeae04af0 [a](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fbeeae04ab0 [a](COMMAND_SUCCESS))
  }
  NextWaypoint{
   State: FINISHING (0)
   StartCondition: (EQ Boolean 0x7fbeeae050d0 [i](0) (CommandHandleVariable NodeCommandHandle 0x7fbeeae04ab0 [a](COMMAND_SUCCESS)) (CommandHandleValue NodeCommandHandle 0x102fc70a0 [a](COMMAND_RCVD_BY_SYSTEM)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x7fbeeae04cf8 [a](0))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x7fbeeae04d80 [a](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fbeeae04d40 [a](UNKNOWN))
  }
}

[PlexilExec:cycle] ==>Start cycle 9
[PlexilExec:step][9:0] Check queue: 
[PlexilExec:performAssignments] performing 0 assignments and 0 retractions
[PlexilExec:cycle] ==>End cycle 9
[PlexilExec:printPlan]
simple-closedloop-command-multipleAck{
 State: EXECUTING (0)
 EndCondition: (AllChildrenFinished Boolean simple-closedloop-command-multipleAck0x7fbeeae04e40 [a](0))
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean simple-closedloop-command-multipleAck0x7fbeeae04770 [i](0))
 retTestFunction: (Variable Integer retTestFunction 0x7fbeeae04898 [a](-1))
  Drive{
   State: EXECUTING (0)
   EndCondition: (OR Boolean 0x7fbeeae04ff0 [a](0) (Interruptible Boolean Drive0x7fbeeae04fa0 [a](0)) (EQ Boolean 0x7fbeeae04ed0 [a](0) (Constant Integer 0x7fbeeae04f30 [a](10)) (Variable Integer retTestFunction 0x7fbeeae04898 [a](-1))))
   PostCondition: (EQ Boolean 0x7fbeeae04f40 [i](1) (CommandHandleVariable NodeCommandHandle 0x7fbeeae04ab0 [a](COMMAND_SUCCESS)) (CommandHandleValue NodeCommandHandle 0x102fc70e8 [a](COMMAND_SUCCESS)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x7fbeeae04a68 [i](1))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x7fbeeae04af0 [a](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fbeeae04ab0 [a](COMMAND_SUCCESS))
  }
  NextWaypoint{
   State: FINISHING (0)
   StartCondition: (EQ Boolean 0x7fbeeae050d0 [i](0) (CommandHandleVariable NodeCommandHandle 0x7fbeeae04ab0 [a](COMMAND_SUCCESS)) (CommandHandleValue NodeCommandHandle 0x102fc70a0 [a](COMMAND_RCVD_BY_SYSTEM)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x7fbeeae04cf8 [a](0))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x7fbeeae04d80 [a](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fbeeae04d40 [a](UNKNOWN))
  }
}

[Test:testOutput]Sending command ACK next_waypoint() = (string)COMMAND_SENT_TO_SYSTEM
[PlexilExec:notifyNodeConditionChanged] for node NextWaypoint 0x7fbeeae04bb0
[PlexilExec:cycle] ==>Start cycle 10
[PlexilExec:step][10:0] Check queue: NextWaypoint 0x7fbeeae04bb0 
[PlexilExec:handleConditionsChanged] Considering node NextWaypoint 0x7fbeeae04bb0 for state transition.
[PlexilExec:addStateChangeNode] Placing node NextWaypoint 0x7fbeeae04bb0 on the state change queue in position 8
[PlexilExec:step][10:0] State change queue: NextWaypoint 0x7fbeeae04bb0 
[PlexilExec:step][10:0:0] Transitioning node NextWaypoint 0x7fbeeae04bb0 from FINISHING to ITERATION_ENDED
[PlexilExec:notifyNodeConditionChanged] for node NextWaypoint 0x7fbeeae04bb0
[PlexilExec:notifyNodeConditionChanged] for node simple-closedloop-command-multipleAck 0x7fbeeae04640
[PlexilExec:step][10:1] Check queue: NextWaypoint 0x7fbeeae04bb0 simple-closedloop-command-multipleAck 0x7fbeeae04640 
[PlexilExec:handleConditionsChanged] Considering node NextWaypoint 0x7fbeeae04bb0 for state transition.
[PlexilExec:addStateChangeNode] Placing node NextWaypoint 0x7fbeeae04bb0 on the state change queue in position 9
[PlexilExec:step][10:1] State change queue: NextWaypoint 0x7fbeeae04bb0 
[PlexilExec:step][10:1:0] Transitioning node NextWaypoint 0x7fbeeae04bb0 from ITERATION_ENDED to FINISHED
[PlexilExec:notifyNodeConditionChanged] for node NextWaypoint 0x7fbeeae04bb0
[PlexilExec:notifyNodeConditionChanged] for node simple-closedloop-command-multipleAck 0x7fbeeae04640
[PlexilExec:step][10:2] Check queue: NextWaypoint 0x7fbeeae04bb0 simple-closedloop-command-multipleAck 0x7fbeeae04640 
[PlexilExec:performAssignments] performing 0 assignments and 0 retractions
[PlexilExec:cycle] ==>End cycle 10
[PlexilExec:printPlan]
simple-closedloop-command-multipleAck{
 State: EXECUTING (0)
 EndCondition: (AllChildrenFinished Boolean simple-closedloop-command-multipleAck0x7fbeeae04e40 [a](0))
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean simple-closedloop-command-multipleAck0x7fbeeae04770 [i](0))
 retTestFunction: (Variable Integer retTestFunction 0x7fbeeae04898 [a](-1))
  Drive{
   State: EXECUTING (0)
   EndCondition: (OR Boolean 0x7fbeeae04ff0 [a](0) (Interruptible Boolean Drive0x7fbeeae04fa0 [a](0)) (EQ Boolean 0x7fbeeae04ed0 [a](0) (Constant Integer 0x7fbeeae04f30 [a](10)) (Variable Integer retTestFunction 0x7fbeeae04898 [a](-1))))
   PostCondition: (EQ Boolean 0x7fbeeae04f40 [i](1) (CommandHandleVariable NodeCommandHandle 0x7fbeeae04ab0 [a](COMMAND_SUCCESS)) (CommandHandleValue NodeCommandHandle 0x102fc70e8 [a](COMMAND_SUCCESS)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x7fbeeae04a68 [i](1))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x7fbeeae04af0 [a](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fbeeae04ab0 [a](COMMAND_SUCCESS))
  }
  NextWaypoint{
   State: FINISHED (0)
   Outcome: SUCCESS
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fbeeae04d40 [i](UNKNOWN))
  }
}

[PlexilExec:cycle] ==>Start cycle 11
[PlexilExec:step][11:0] Check queue: 
[PlexilExec:performAssignments] performing 0 assignments and 0 retractions
[PlexilExec:cycle] ==>End cycle 11
[PlexilExec:printPlan]
simple-closedloop-command-multipleAck{
 State: EXECUTING (0)
 EndCondition: (AllChildrenFinished Boolean simple-closedloop-command-multipleAck0x7fbeeae04e40 [a](0))
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean simple-closedloop-command-multipleAck0x7fbeeae04770 [i](0))
 retTestFunction: (Variable Integer retTestFunction 0x7fbeeae04898 [a](-1))
  Drive{
   State: EXECUTING (0)
   EndCondition: (OR Boolean 0x7fbeeae04ff0 [a](0) (Interruptible Boolean Drive0x7fbeeae04fa0 [a](0)) (EQ Boolean 0x7fbeeae04ed0 [a](0) (Constant Integer 0x7fbeeae04f30 [a](10)) (Variable Integer retTestFunction 0x7fbeeae04898 [a](-1))))
   PostCondition: (EQ Boolean 0x7fbeeae04f40 [i](1) (CommandHandleVariable NodeCommandHandle 0x7fbeeae04ab0 [a](COMMAND_SUCCESS)) (CommandHandleValue NodeCommandHandle 0x102fc70e8 [a](COMMAND_SUCCESS)))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x7fbeeae04a68 [i](1))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x7fbeeae04af0 [a](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fbeeae04ab0 [a](COMMAND_SUCCESS))
  }
  NextWaypoint{
   State: FINISHED (0)
   Outcome: SUCCESS
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fbeeae04d40 [i](UNKNOWN))
  }
}

[Test:testOutput]Sending command result drive() = 10
[PlexilExec:notifyNodeConditionChanged] for node Drive 0x7fbeeae04920
[PlexilExec:cycle] ==>Start cycle 12
[PlexilExec:step][12:0] Check queue: Drive 0x7fbeeae04920 
[PlexilExec:handleConditionsChanged] Considering node Drive 0x7fbeeae04920 for state transition.
[PlexilExec:addStateChangeNode] Placing node Drive 0x7fbeeae04920 on the state change queue in position 10
[PlexilExec:step][12:0] State change queue: Drive 0x7fbeeae04920 
[PlexilExec:step][12:0:0] Transitioning node Drive 0x7fbeeae04920 from EXECUTING to FINISHING
[PlexilExec:notifyNodeConditionChanged] for node Drive 0x7fbeeae04920
[PlexilExec:notifyNodeConditionChanged] for node simple-closedloop-command-multipleAck 0x7fbeeae04640
[PlexilExec:step][12:1] Check queue: Drive 0x7fbeeae04920 simple-closedloop-command-multipleAck 0x7fbeeae04640 
[PlexilExec:handleConditionsChanged] Considering node Drive 0x7fbeeae04920 for state transition.
[PlexilExec:addStateChangeNode] Placing node Drive 0x7fbeeae04920 on the state change queue in position 11
[PlexilExec:step][12:1] State change queue: Drive 0x7fbeeae04920 
[PlexilExec:step][12:1:0] Transitioning node Drive 0x7fbeeae04920 from FINISHING to ITERATION_ENDED
[PlexilExec:notifyNodeConditionChanged] for node Drive 0x7fbeeae04920
[PlexilExec:notifyNodeConditionChanged] for node simple-closedloop-command-multipleAck 0x7fbeeae04640
[PlexilExec:step][12:2] Check queue: Drive 0x7fbeeae04920 simple-closedloop-command-multipleAck 0x7fbeeae04640 
[PlexilExec:handleConditionsChanged] Considering node Drive 0x7fbeeae04920 for state transition.
[PlexilExec:addStateChangeNode] Placing node Drive 0x7fbeeae04920 on the state change queue in position 12
[PlexilExec:step][12:2] State change queue: Drive 0x7fbeeae04920 
[PlexilExec:step][12:2:0] Transitioning node Drive 0x7fbeeae04920 from ITERATION_ENDED to FINISHED
[PlexilExec:notifyNodeConditionChanged] for node Drive 0x7fbeeae04920
[PlexilExec:notifyNodeConditionChanged] for node simple-closedloop-command-multipleAck 0x7fbeeae04640
[PlexilExec:step][12:3] Check queue: Drive 0x7fbeeae04920 simple-closedloop-command-multipleAck 0x7fbeeae04640 
[PlexilExec:handleConditionsChanged] Considering node simple-closedloop-command-multipleAck 0x7fbeeae04640 for state transition.
[PlexilExec:addStateChangeNode] Placing node simple-closedloop-command-multipleAck 0x7fbeeae04640 on the state change queue in position 13
[PlexilExec:step][12:3] State change queue: simple-closedloop-command-multipleAck 0x7fbeeae04640 
[PlexilExec:step][12:3:0] Transitioning node simple-closedloop-command-multipleAck 0x7fbeeae04640 from EXECUTING to FINISHING
[PlexilExec:notifyNodeConditionChanged] for node simple-closedloop-command-multipleAck 0x7fbeeae04640
[PlexilExec:step][12:4] Check queue: simple-closedloop-command-multipleAck 0x7fbeeae04640 
[PlexilExec:handleConditionsChanged] Considering node simple-closedloop-command-multipleAck 0x7fbeeae04640 for state transition.
[PlexilExec:addStateChangeNode] Placing node simple-closedloop-command-multipleAck 0x7fbeeae04640 on the state change queue in position 14
[PlexilExec:step][12:4] State change queue: simple-closedloop-command-multipleAck 0x7fbeeae04640 
[PlexilExec:step][12:4:0] Transitioning node simple-closedloop-command-multipleAck 0x7fbeeae04640 from FINISHING to ITERATION_ENDED
[PlexilExec:notifyNodeConditionChanged] for node simple-closedloop-command-multipleAck 0x7fbeeae04640
[PlexilExec:step][12:5] Check queue: simple-closedloop-command-multipleAck 0x7fbeeae04640 
[PlexilExec:handleConditionsChanged] Considering node simple-closedloop-command-multipleAck 0x7fbeeae04640 for state transition.
[PlexilExec:addStateChangeNode] Placing node simple-closedloop-command-multipleAck 0x7fbeeae04640 on the state change queue in position 15
[PlexilExec:step][12:5] State change queue: simple-closedloop-command-multipleAck 0x7fbeeae04640 
[PlexilExec:step][12:5:0] Transitioning node simple-closedloop-command-multipleAck 0x7fbeeae04640 from ITERATION_ENDED to FINISHED
[PlexilExec:performAssignments] performing 0 assignments and 0 retractions
[PlexilExec:cycle] ==>End cycle 12
[PlexilExec:printPlan]
simple-closedloop-command-multipleAck{
 State: FINISHED (0)
 Outcome: SUCCESS
 retTestFunction: (Variable Integer retTestFunction 0x7fbeeae04898 [i](UNKNOWN))
  Drive{
   State: FINISHED (0)
   Outcome: SUCCESS
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fbeeae04ab0 [i](UNKNOWN))
  }
  NextWaypoint{
   State: FINISHED (0)
   Outcome: SUCCESS
   Command handle: (CommandHandleVariable NodeCommandHandle 0x7fbeeae04d40 [i](UNKNOWN))
  }
}

