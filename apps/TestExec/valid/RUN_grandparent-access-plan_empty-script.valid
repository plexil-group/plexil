[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:addPlan]Added plan: 
Grandparent{
 State: (id_217[au](INACTIVE): state(INACTIVE)) (inf)
  Parent{
   State: (id_263[au](INACTIVE): state(INACTIVE)) (inf)
    Child{
     State: (id_309[au](INACTIVE): state(INACTIVE)) (inf)
    }
  }
}

[PlexilExec:handleConditionsChanged]Node Grandparent had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'Grandparent' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'Grandparent' on the state change queue in position 1
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 1
[PlexilExec:step][1:0] State change queue: Grandparent 
[PlexilExec:lock]Locking node Grandparent
[PlexilExec:step][1:0:0] Transitioning node Grandparent
[PlexilExec:handleConditionsChanged]Node Grandparent had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'Grandparent' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'Grandparent' on the state change queue in position 2
[PlexilExec:unlock]Unlocking node Grandparent
[PlexilExec:step][1:1] State change queue: Grandparent 
[PlexilExec:lock]Locking node Grandparent
[PlexilExec:step][1:1:0] Transitioning node Grandparent
[PlexilExec:handleConditionsChanged]Node Parent had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'Parent' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'Parent' on the state change queue in position 3
[PlexilExec:handleNeedsExecution]Storing action for node 'Grandparent' to be executed.
[PlexilExec:handleConditionsChanged]Node Grandparent had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'Grandparent' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node Grandparent
[PlexilExec:step][1:2] State change queue: Parent 
[PlexilExec:lock]Locking node Parent
[PlexilExec:step][1:2:0] Transitioning node Parent
[PlexilExec:handleConditionsChanged]Node Parent had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'Parent' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'Parent' on the state change queue in position 4
[PlexilExec:unlock]Unlocking node Parent
[PlexilExec:step][1:3] State change queue: Parent 
[PlexilExec:lock]Locking node Parent
[PlexilExec:step][1:3:0] Transitioning node Parent
[PlexilExec:handleConditionsChanged]Node Child had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'Child' for state transition.
[PlexilExec:handleConditionsChanged]Node 'Child' is an assignment node that is no longer possibly executing.  Removing it from resource contention.
[PlexilExec:handleConditionsChanged]Placing node 'Child' on the state change queue in position 5
[PlexilExec:handleNeedsExecution]Storing action for node 'Parent' to be executed.
[PlexilExec:handleConditionsChanged]Node Parent had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'Parent' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node Parent
[PlexilExec:step][1:4] State change queue: Child 
[PlexilExec:lock]Locking node Child
[PlexilExec:step][1:4:0] Transitioning node Child
[PlexilExec:handleConditionsChanged]Node Child had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'Child' for state transition.
[PlexilExec:handleConditionsChanged]Node 'Child' is an assignment node that could be executing.  Adding it to the resource contention list 
[PlexilExec:addToResourceContention]Adding node 'Child' to resource contention.
[PlexilExec:unlock]Unlocking node Child
[PlexilExec:resolveResourceConflicts]Node 'Child' has best priority.  Adding it to be executed in position 6
[PlexilExec:step][1:5] State change queue: Child 
[PlexilExec:lock]Locking node Child
[PlexilExec:step][1:5:0] Transitioning node Child
[PlexilExec:handleNeedsExecution]Storing action for node 'Child' to be executed.
[PlexilExec:handleConditionsChanged]Node Child had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'Child' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node Child
[Test:testOutput]Assigning 'y' ((id_306[au](1): boolean)) to 0
[PlexilExec:handleConditionsChanged]Node Child had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'Child' for state transition.
[PlexilExec:handleConditionsChanged]Node 'Child' is an assignment node that is no longer possibly executing.  Removing it from resource contention.
[PlexilExec:handleConditionsChanged]Placing node 'Child' on the state change queue in position 7
[PlexilExec:step][1:6] State change queue: Child 
[PlexilExec:lock]Locking node Child
[PlexilExec:step][1:6:0] Transitioning node Child
[PlexilExec:handleConditionsChanged]Node Child had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'Child' for state transition.
[PlexilExec:handleConditionsChanged]Node 'Child' is an assignment node that is no longer possibly executing.  Removing it from resource contention.
[PlexilExec:handleConditionsChanged]Placing node 'Child' on the state change queue in position 8
[PlexilExec:unlock]Unlocking node Child
[PlexilExec:step][1:7] State change queue: Child 
[PlexilExec:lock]Locking node Child
[PlexilExec:step][1:7:0] Transitioning node Child
[PlexilExec:handleConditionsChanged]Node Parent had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'Parent' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'Parent' on the state change queue in position 9
[PlexilExec:handleConditionsChanged]Node Child had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'Child' was previously eligible to transition but isn't now.
[PlexilExec:handleConditionsChanged]Removing node from resource contention.
[PlexilExec:unlock]Unlocking node Child
[PlexilExec:step][1:8] State change queue: Parent 
[PlexilExec:lock]Locking node Parent
[PlexilExec:step][1:8:0] Transitioning node Parent
[PlexilExec:handleConditionsChanged]Node Parent had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'Parent' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'Parent' on the state change queue in position 10
[PlexilExec:unlock]Unlocking node Parent
[PlexilExec:step][1:9] State change queue: Parent 
[PlexilExec:lock]Locking node Parent
[PlexilExec:step][1:9:0] Transitioning node Parent
[PlexilExec:handleConditionsChanged]Node Parent had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'Parent' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'Parent' on the state change queue in position 11
[PlexilExec:unlock]Unlocking node Parent
[PlexilExec:step][1:10] State change queue: Parent 
[PlexilExec:lock]Locking node Parent
[PlexilExec:step][1:10:0] Transitioning node Parent
[PlexilExec:handleConditionsChanged]Node Grandparent had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'Grandparent' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'Grandparent' on the state change queue in position 12
[PlexilExec:handleConditionsChanged]Node Parent had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'Parent' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node Parent
[PlexilExec:step][1:11] State change queue: Grandparent 
[PlexilExec:lock]Locking node Grandparent
[PlexilExec:step][1:11:0] Transitioning node Grandparent
[PlexilExec:handleConditionsChanged]Node Grandparent had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'Grandparent' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'Grandparent' on the state change queue in position 13
[PlexilExec:unlock]Unlocking node Grandparent
[PlexilExec:step][1:12] State change queue: Grandparent 
[PlexilExec:lock]Locking node Grandparent
[PlexilExec:step][1:12:0] Transitioning node Grandparent
[PlexilExec:handleConditionsChanged]Node Grandparent had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'Grandparent' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'Grandparent' on the state change queue in position 14
[PlexilExec:unlock]Unlocking node Grandparent
[PlexilExec:step][1:13] State change queue: Grandparent 
[PlexilExec:lock]Locking node Grandparent
[PlexilExec:step][1:13:0] Transitioning node Grandparent
[PlexilExec:handleConditionsChanged]Node Grandparent had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'Grandparent' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node Grandparent
[PlexilExec:cycle]==>End cycle 1
[PlexilExec:printPlan]
Grandparent{
 State: (id_217[au](FINISHED): state(FINISHED)) (0)
 Outcome: (id_218[au](SUCCESS):  outcome)
 x: (id_260[iu](0): boolean)
  Parent{
   State: (id_263[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_264[au](SUCCESS):  outcome)
   x: (id_260[iu](0): boolean)
   y: (id_306[iu](0): boolean)
    Child{
     State: (id_309[au](FINISHED): state(FINISHED)) (0)
     Outcome: (id_310[au](SUCCESS):  outcome)
     x: (id_260[iu](0): boolean)
     y: (id_306[iu](0): boolean)
    }
  }
}

