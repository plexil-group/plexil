[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:addPlan]Added plan: 
SimpleTask{
 State: (id_275[au](INACTIVE): state(INACTIVE)) (inf)
  C1{
   State: (id_325[au](INACTIVE): state(INACTIVE)) (inf)
  }
  C2{
   State: (id_377[au](INACTIVE): state(INACTIVE)) (inf)
  }
  C3{
   State: (id_428[au](INACTIVE): state(INACTIVE)) (inf)
  }
}

[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 1
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 1
[PlexilExec:step][1:0] State change queue: SimpleTask 
[PlexilExec:lock]Locking node SimpleTask
[PlexilExec:step][1:0:0] Transitioning node SimpleTask
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 2
[PlexilExec:unlock]Unlocking node SimpleTask
[PlexilExec:step][1:1] State change queue: SimpleTask 
[PlexilExec:lock]Locking node SimpleTask
[PlexilExec:step][1:1:0] Transitioning node SimpleTask
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C1' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C1' on the state change queue in position 3
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 4
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C3' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C3' on the state change queue in position 5
[PlexilExec:handleNeedsExecution]Storing action for node 'SimpleTask' of type 'NodeList' to be executed.
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'SimpleTask' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node SimpleTask
[PlexilExec:step][1:2] State change queue: C1 C2 C3 
[PlexilExec:lock]Locking node C1
[PlexilExec:lock]Locking node C2
[PlexilExec:lock]Locking node C3
[PlexilExec:step][1:2:0] Transitioning node C1
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C1' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C1' on the state change queue in position 6
[PlexilExec:step][1:2:1] Transitioning node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 7
[PlexilExec:step][1:2:2] Transitioning node C3
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C3' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C3' on the state change queue in position 8
[PlexilExec:unlock]Unlocking node C1
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:unlock]Unlocking node C3
[PlexilExec:step][1:3] State change queue: C1 C2 C3 
[PlexilExec:lock]Locking node C1
[PlexilExec:lock]Locking node C2
[PlexilExec:lock]Locking node C3
[PlexilExec:step][1:3:0] Transitioning node C1
[PlexilExec:handleNeedsExecution]Storing action for node 'C1' of type 'Command' to be executed.
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C1' was previously eligible to transition but isn't now.
[PlexilExec:step][1:3:1] Transitioning node C2
[PlexilExec:handleNeedsExecution]Storing action for node 'C2' of type 'Command' to be executed.
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C2' was previously eligible to transition but isn't now.
[PlexilExec:step][1:3:2] Transitioning node C3
[PlexilExec:handleNeedsExecution]Storing action for node 'C3' of type 'Command' to be executed.
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C3' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node C1
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:unlock]Unlocking node C3
[Test:testOutput]Executing c1(20) into (id_373[au](-1): int) with ack (id_513[au](UNKNOWN): string)
[Test:testOutput]Permission to execute c2 has been denied by the resource arbiter.
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 9
[Test:testOutput]Executing c3() into noId with ack (id_599[au](UNKNOWN): string)
[PlexilExec:cycle]==>End cycle 1
[PlexilExec:printPlan]
SimpleTask{
 State: (id_275[au](EXECUTING): state(EXECUTING)) (0)
 SkipCondition: (id_293[au](0): boolean)
 StartCondition: (id_295[au](1): boolean)
 EndCondition: (id_480[au](0): childrenFinished(0:3))
 InvariantCondition: (id_299[au](1): boolean)
 PreCondition: (id_301[au](1): boolean)
 PostCondition: (id_303[au](1): boolean)
 RepeatCondition: (id_305[au](0): boolean)
 AncestorInvariantCondition: (id_307[au](1): boolean)
 AncestorEndCondition: (id_309[au](0): boolean)
 ParentExecutingCondition: (id_311[au](1): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_477[iu](UNKNOWN): childrenWaitingOrFinished(0:3))
 AbortCompleteCondition: (id_315[au](UNKNOWN): boolean)
 ParentWaitingCondition: (id_317[au](0): boolean)
 ParentFinishedCondition: (id_319[au](0): boolean)
 CommandHandleReceivedCondition: (id_321[au](1): boolean)
 command_handle: (id_278[au](UNKNOWN):  command_handle)
  C1{
   State: (id_325[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_343[au](0): boolean)
   StartCondition: (id_345[au](1): boolean)
   EndCondition: (id_520[au](0): ((id_516[au](0): interruptibleCommandHandleValues((id_513[au](UNKNOWN): string))) || (id_518[au](0): ((id_514[au](0): isknown((id_513[au](UNKNOWN): string))) && (id_504[au](0): ((id_506[au](10): int) == (id_373[au](-1): int)))))
   InvariantCondition: (id_349[au](1): boolean)
   PreCondition: (id_351[au](1): boolean)
   PostCondition: (id_507[au](UNKNOWN): (id_510[au](UNKNOWN): ((id_328[au](UNKNOWN):  command_handle) == (id_509[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_355[au](0): boolean)
   AncestorInvariantCondition: (id_487[au](1): (TransparentWrapper(id_483[auT]{1}((id_307[au](1): boolean)) && TransparentWrapper(id_485[auT]{1}((id_299[au](1): boolean)))
   AncestorEndCondition: (id_493[iu](UNKNOWN): (TransparentWrapper(id_489[iuT]{0}((id_309[au](0): boolean)) || TransparentWrapper(id_491[iuT]{0}((id_480[au](0): childrenFinished(0:3))))
   ParentExecutingCondition: (id_496[iu](UNKNOWN): ((id_275[au](EXECUTING): state(EXECUTING)) == (id_495[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_363[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_512[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_499[iu](UNKNOWN): ((id_275[au](EXECUTING): state(EXECUTING)) == (id_498[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_502[iu](UNKNOWN): ((id_275[au](EXECUTING): state(EXECUTING)) == (id_501[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_524[au](0): ((id_522[au](0): allCommandHandleValues((id_513[au](UNKNOWN): string))) && (id_371[au](1): boolean))
   command_handle: (id_328[au](UNKNOWN):  command_handle)
   returnValue: (id_373[au](-1): int)
   head_priority: (id_374[au](20): int)
  }
  C2{
   State: (id_377[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_395[au](0): boolean)
   StartCondition: (id_397[au](1): boolean)
   EndCondition: (id_566[au](1): ((id_562[au](1): interruptibleCommandHandleValues((id_559[au](COMMAND_DENIED): string))) || (id_564[au](1): ((id_560[au](1): isknown((id_559[au](COMMAND_DENIED): string))) && (id_399[au](1): boolean)))
   InvariantCondition: (id_401[au](1): boolean)
   PreCondition: (id_403[au](1): boolean)
   PostCondition: (id_548[au](0): (id_551[au](0): ((id_380[au](COMMAND_DENIED):  command_handle) == (id_550[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_553[iu](UNKNOWN): (id_556[iu](UNKNOWN): ((id_380[au](COMMAND_DENIED):  command_handle) == (id_555[iu](UNKNOWN):  command_handle))))
   AncestorInvariantCondition: (id_534[au](1): (TransparentWrapper(id_530[auT]{1}((id_307[au](1): boolean)) && TransparentWrapper(id_532[auT]{1}((id_299[au](1): boolean)))
   AncestorEndCondition: (id_540[iu](UNKNOWN): (TransparentWrapper(id_536[iuT]{0}((id_309[au](0): boolean)) || TransparentWrapper(id_538[iuT]{0}((id_480[au](0): childrenFinished(0:3))))
   ParentExecutingCondition: (id_542[iu](UNKNOWN): ((id_275[au](EXECUTING): state(EXECUTING)) == (id_495[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_415[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_558[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_544[iu](UNKNOWN): ((id_275[au](EXECUTING): state(EXECUTING)) == (id_498[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_546[iu](UNKNOWN): ((id_275[au](EXECUTING): state(EXECUTING)) == (id_501[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_570[au](1): ((id_568[au](1): allCommandHandleValues((id_559[au](COMMAND_DENIED): string))) && (id_423[au](1): boolean))
   command_handle: (id_380[au](COMMAND_DENIED):  command_handle)
   v_priority2: (id_425[au](25): int)
  }
  C3{
   State: (id_428[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_446[au](0): boolean)
   StartCondition: (id_448[au](1): boolean)
   EndCondition: (id_606[au](0): ((id_602[au](0): interruptibleCommandHandleValues((id_599[au](UNKNOWN): string))) || (id_604[au](0): ((id_600[au](0): isknown((id_599[au](UNKNOWN): string))) && (id_450[au](1): boolean)))
   InvariantCondition: (id_452[au](1): boolean)
   PreCondition: (id_454[au](1): boolean)
   PostCondition: (id_593[au](UNKNOWN): (id_596[au](UNKNOWN): ((id_431[au](UNKNOWN):  command_handle) == (id_595[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_458[au](0): boolean)
   AncestorInvariantCondition: (id_579[au](1): (TransparentWrapper(id_575[auT]{1}((id_307[au](1): boolean)) && TransparentWrapper(id_577[auT]{1}((id_299[au](1): boolean)))
   AncestorEndCondition: (id_585[iu](UNKNOWN): (TransparentWrapper(id_581[iuT]{0}((id_309[au](0): boolean)) || TransparentWrapper(id_583[iuT]{0}((id_480[au](0): childrenFinished(0:3))))
   ParentExecutingCondition: (id_587[iu](UNKNOWN): ((id_275[au](EXECUTING): state(EXECUTING)) == (id_495[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_466[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_598[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_589[iu](UNKNOWN): ((id_275[au](EXECUTING): state(EXECUTING)) == (id_498[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_591[iu](UNKNOWN): ((id_275[au](EXECUTING): state(EXECUTING)) == (id_501[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_610[au](0): ((id_608[au](0): allCommandHandleValues((id_599[au](UNKNOWN): string))) && (id_474[au](1): boolean))
   command_handle: (id_431[au](UNKNOWN):  command_handle)
   mem_priority2: (id_476[au](30): int)
  }
}

[Test:testOutput]Sending command ACK c1(20) = (string)COMMAND_SENT_TO_SYSTEM
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 2
[PlexilExec:step][2:0] State change queue: C2 
[PlexilExec:lock]Locking node C2
[PlexilExec:step][2:0:0] Transitioning node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 10
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:step][2:1] State change queue: C2 
[PlexilExec:lock]Locking node C2
[PlexilExec:step][2:1:0] Transitioning node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 11
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:step][2:2] State change queue: C2 
[PlexilExec:lock]Locking node C2
[PlexilExec:step][2:2:0] Transitioning node C2
[PlexilExec:handleNeedsExecution]Storing action for node 'C2' of type 'Command' to be executed.
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C2' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node C2
[Test:testOutput]Permission to execute c2 has been denied by the resource arbiter.
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 12
[PlexilExec:cycle]==>End cycle 2
[PlexilExec:printPlan]
SimpleTask{
 State: (id_275[au](EXECUTING): state(EXECUTING)) (0)
 SkipCondition: (id_293[au](0): boolean)
 StartCondition: (id_295[au](1): boolean)
 EndCondition: (id_480[au](0): childrenFinished(0:3))
 InvariantCondition: (id_299[au](1): boolean)
 PreCondition: (id_301[au](1): boolean)
 PostCondition: (id_303[au](1): boolean)
 RepeatCondition: (id_305[au](0): boolean)
 AncestorInvariantCondition: (id_307[au](1): boolean)
 AncestorEndCondition: (id_309[au](0): boolean)
 ParentExecutingCondition: (id_311[au](1): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_477[iu](UNKNOWN): childrenWaitingOrFinished(0:3))
 AbortCompleteCondition: (id_315[au](UNKNOWN): boolean)
 ParentWaitingCondition: (id_317[au](0): boolean)
 ParentFinishedCondition: (id_319[au](0): boolean)
 CommandHandleReceivedCondition: (id_321[au](1): boolean)
 command_handle: (id_278[au](UNKNOWN):  command_handle)
  C1{
   State: (id_325[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_343[au](0): boolean)
   StartCondition: (id_345[au](1): boolean)
   EndCondition: (id_520[au](0): ((id_516[au](0): interruptibleCommandHandleValues((id_513[au](COMMAND_SENT_TO_SYSTEM): string))) || (id_518[au](0): ((id_514[au](1): isknown((id_513[au](COMMAND_SENT_TO_SYSTEM): string))) && (id_504[au](0): ((id_506[au](10): int) == (id_373[au](-1): int)))))
   InvariantCondition: (id_349[au](1): boolean)
   PreCondition: (id_351[au](1): boolean)
   PostCondition: (id_507[au](1): (id_510[au](1): ((id_328[au](COMMAND_SENT_TO_SYSTEM):  command_handle) == (id_509[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_355[au](0): boolean)
   AncestorInvariantCondition: (id_487[au](1): (TransparentWrapper(id_483[auT]{1}((id_307[au](1): boolean)) && TransparentWrapper(id_485[auT]{1}((id_299[au](1): boolean)))
   AncestorEndCondition: (id_493[iu](UNKNOWN): (TransparentWrapper(id_489[iuT]{0}((id_309[au](0): boolean)) || TransparentWrapper(id_491[iuT]{0}((id_480[au](0): childrenFinished(0:3))))
   ParentExecutingCondition: (id_496[iu](UNKNOWN): ((id_275[au](EXECUTING): state(EXECUTING)) == (id_495[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_363[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_512[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_499[iu](UNKNOWN): ((id_275[au](EXECUTING): state(EXECUTING)) == (id_498[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_502[iu](UNKNOWN): ((id_275[au](EXECUTING): state(EXECUTING)) == (id_501[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_524[au](1): ((id_522[au](1): allCommandHandleValues((id_513[au](COMMAND_SENT_TO_SYSTEM): string))) && (id_371[au](1): boolean))
   command_handle: (id_328[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   returnValue: (id_373[au](-1): int)
   head_priority: (id_374[au](20): int)
  }
  C2{
   State: (id_377[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_395[au](0): boolean)
   StartCondition: (id_397[au](1): boolean)
   EndCondition: (id_566[au](1): ((id_562[au](1): interruptibleCommandHandleValues((id_559[au](COMMAND_DENIED): string))) || (id_564[au](1): ((id_560[au](1): isknown((id_559[au](COMMAND_DENIED): string))) && (id_399[au](1): boolean)))
   InvariantCondition: (id_401[au](1): boolean)
   PreCondition: (id_403[au](1): boolean)
   PostCondition: (id_548[au](0): (id_551[au](0): ((id_380[au](COMMAND_DENIED):  command_handle) == (id_550[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_553[iu](UNKNOWN): (id_556[iu](UNKNOWN): ((id_380[au](COMMAND_DENIED):  command_handle) == (id_555[iu](UNKNOWN):  command_handle))))
   AncestorInvariantCondition: (id_534[au](1): (TransparentWrapper(id_530[auT]{1}((id_307[au](1): boolean)) && TransparentWrapper(id_532[auT]{1}((id_299[au](1): boolean)))
   AncestorEndCondition: (id_540[iu](UNKNOWN): (TransparentWrapper(id_536[iuT]{0}((id_309[au](0): boolean)) || TransparentWrapper(id_538[iuT]{0}((id_480[au](0): childrenFinished(0:3))))
   ParentExecutingCondition: (id_542[iu](UNKNOWN): ((id_275[au](EXECUTING): state(EXECUTING)) == (id_495[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_415[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_558[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_544[iu](UNKNOWN): ((id_275[au](EXECUTING): state(EXECUTING)) == (id_498[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_546[iu](UNKNOWN): ((id_275[au](EXECUTING): state(EXECUTING)) == (id_501[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_570[au](1): ((id_568[au](1): allCommandHandleValues((id_559[au](COMMAND_DENIED): string))) && (id_423[au](1): boolean))
   command_handle: (id_380[au](COMMAND_DENIED):  command_handle)
   v_priority2: (id_425[au](25): int)
  }
  C3{
   State: (id_428[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_446[au](0): boolean)
   StartCondition: (id_448[au](1): boolean)
   EndCondition: (id_606[au](0): ((id_602[au](0): interruptibleCommandHandleValues((id_599[au](UNKNOWN): string))) || (id_604[au](0): ((id_600[au](0): isknown((id_599[au](UNKNOWN): string))) && (id_450[au](1): boolean)))
   InvariantCondition: (id_452[au](1): boolean)
   PreCondition: (id_454[au](1): boolean)
   PostCondition: (id_593[au](UNKNOWN): (id_596[au](UNKNOWN): ((id_431[au](UNKNOWN):  command_handle) == (id_595[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_458[au](0): boolean)
   AncestorInvariantCondition: (id_579[au](1): (TransparentWrapper(id_575[auT]{1}((id_307[au](1): boolean)) && TransparentWrapper(id_577[auT]{1}((id_299[au](1): boolean)))
   AncestorEndCondition: (id_585[iu](UNKNOWN): (TransparentWrapper(id_581[iuT]{0}((id_309[au](0): boolean)) || TransparentWrapper(id_583[iuT]{0}((id_480[au](0): childrenFinished(0:3))))
   ParentExecutingCondition: (id_587[iu](UNKNOWN): ((id_275[au](EXECUTING): state(EXECUTING)) == (id_495[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_466[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_598[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_589[iu](UNKNOWN): ((id_275[au](EXECUTING): state(EXECUTING)) == (id_498[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_591[iu](UNKNOWN): ((id_275[au](EXECUTING): state(EXECUTING)) == (id_501[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_610[au](0): ((id_608[au](0): allCommandHandleValues((id_599[au](UNKNOWN): string))) && (id_474[au](1): boolean))
   command_handle: (id_431[au](UNKNOWN):  command_handle)
   mem_priority2: (id_476[au](30): int)
  }
}

[Test:testOutput]Sending command ACK c3() = (string)COMMAND_SENT_TO_SYSTEM
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C3' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C3' on the state change queue in position 13
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 3
[PlexilExec:step][3:0] State change queue: C2 C3 
[PlexilExec:lock]Locking node C2
[PlexilExec:lock]Locking node C3
[PlexilExec:step][3:0:0] Transitioning node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 14
[PlexilExec:step][3:0:1] Transitioning node C3
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C3' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C3' on the state change queue in position 15
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:unlock]Unlocking node C3
[PlexilExec:step][3:1] State change queue: C2 C3 
[PlexilExec:lock]Locking node C2
[PlexilExec:lock]Locking node C3
[PlexilExec:step][3:1:0] Transitioning node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 16
[PlexilExec:step][3:1:1] Transitioning node C3
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C3' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:unlock]Unlocking node C3
[PlexilExec:step][3:2] State change queue: C2 
[PlexilExec:lock]Locking node C2
[PlexilExec:step][3:2:0] Transitioning node C2
[PlexilExec:handleNeedsExecution]Storing action for node 'C2' of type 'Command' to be executed.
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C2' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node C2
[Test:testOutput]Permission to execute c2 has been denied by the resource arbiter.
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 17
[PlexilExec:cycle]==>End cycle 3
[PlexilExec:printPlan]
SimpleTask{
 State: (id_275[au](EXECUTING): state(EXECUTING)) (0)
 SkipCondition: (id_293[au](0): boolean)
 StartCondition: (id_295[au](1): boolean)
 EndCondition: (id_480[au](0): childrenFinished(1:3))
 InvariantCondition: (id_299[au](1): boolean)
 PreCondition: (id_301[au](1): boolean)
 PostCondition: (id_303[au](1): boolean)
 RepeatCondition: (id_305[au](0): boolean)
 AncestorInvariantCondition: (id_307[au](1): boolean)
 AncestorEndCondition: (id_309[au](0): boolean)
 ParentExecutingCondition: (id_311[au](1): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_477[iu](UNKNOWN): childrenWaitingOrFinished(0:3))
 AbortCompleteCondition: (id_315[au](UNKNOWN): boolean)
 ParentWaitingCondition: (id_317[au](0): boolean)
 ParentFinishedCondition: (id_319[au](0): boolean)
 CommandHandleReceivedCondition: (id_321[au](1): boolean)
 command_handle: (id_278[au](UNKNOWN):  command_handle)
  C1{
   State: (id_325[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_343[au](0): boolean)
   StartCondition: (id_345[au](1): boolean)
   EndCondition: (id_520[au](0): ((id_516[au](0): interruptibleCommandHandleValues((id_513[au](COMMAND_SENT_TO_SYSTEM): string))) || (id_518[au](0): ((id_514[au](1): isknown((id_513[au](COMMAND_SENT_TO_SYSTEM): string))) && (id_504[au](0): ((id_506[au](10): int) == (id_373[au](-1): int)))))
   InvariantCondition: (id_349[au](1): boolean)
   PreCondition: (id_351[au](1): boolean)
   PostCondition: (id_507[au](1): (id_510[au](1): ((id_328[au](COMMAND_SENT_TO_SYSTEM):  command_handle) == (id_509[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_355[au](0): boolean)
   AncestorInvariantCondition: (id_487[au](1): (TransparentWrapper(id_483[auT]{1}((id_307[au](1): boolean)) && TransparentWrapper(id_485[auT]{1}((id_299[au](1): boolean)))
   AncestorEndCondition: (id_493[iu](UNKNOWN): (TransparentWrapper(id_489[iuT]{0}((id_309[au](0): boolean)) || TransparentWrapper(id_491[iuT]{0}((id_480[au](0): childrenFinished(1:3))))
   ParentExecutingCondition: (id_496[iu](UNKNOWN): ((id_275[au](EXECUTING): state(EXECUTING)) == (id_495[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_363[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_512[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_499[iu](UNKNOWN): ((id_275[au](EXECUTING): state(EXECUTING)) == (id_498[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_502[iu](UNKNOWN): ((id_275[au](EXECUTING): state(EXECUTING)) == (id_501[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_524[au](1): ((id_522[au](1): allCommandHandleValues((id_513[au](COMMAND_SENT_TO_SYSTEM): string))) && (id_371[au](1): boolean))
   command_handle: (id_328[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   returnValue: (id_373[au](-1): int)
   head_priority: (id_374[au](20): int)
  }
  C2{
   State: (id_377[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_395[au](0): boolean)
   StartCondition: (id_397[au](1): boolean)
   EndCondition: (id_566[au](1): ((id_562[au](1): interruptibleCommandHandleValues((id_559[au](COMMAND_DENIED): string))) || (id_564[au](1): ((id_560[au](1): isknown((id_559[au](COMMAND_DENIED): string))) && (id_399[au](1): boolean)))
   InvariantCondition: (id_401[au](1): boolean)
   PreCondition: (id_403[au](1): boolean)
   PostCondition: (id_548[au](0): (id_551[au](0): ((id_380[au](COMMAND_DENIED):  command_handle) == (id_550[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_553[iu](UNKNOWN): (id_556[iu](UNKNOWN): ((id_380[au](COMMAND_DENIED):  command_handle) == (id_555[iu](UNKNOWN):  command_handle))))
   AncestorInvariantCondition: (id_534[au](1): (TransparentWrapper(id_530[auT]{1}((id_307[au](1): boolean)) && TransparentWrapper(id_532[auT]{1}((id_299[au](1): boolean)))
   AncestorEndCondition: (id_540[iu](UNKNOWN): (TransparentWrapper(id_536[iuT]{0}((id_309[au](0): boolean)) || TransparentWrapper(id_538[iuT]{0}((id_480[au](0): childrenFinished(1:3))))
   ParentExecutingCondition: (id_542[iu](UNKNOWN): ((id_275[au](EXECUTING): state(EXECUTING)) == (id_495[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_415[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_558[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_544[iu](UNKNOWN): ((id_275[au](EXECUTING): state(EXECUTING)) == (id_498[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_546[iu](UNKNOWN): ((id_275[au](EXECUTING): state(EXECUTING)) == (id_501[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_570[au](1): ((id_568[au](1): allCommandHandleValues((id_559[au](COMMAND_DENIED): string))) && (id_423[au](1): boolean))
   command_handle: (id_380[au](COMMAND_DENIED):  command_handle)
   v_priority2: (id_425[au](25): int)
  }
  C3{
   State: (id_428[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_429[au](SUCCESS):  outcome)
   Command handle: (id_431[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   mem_priority2: (id_476[au](30): int)
  }
}

[Test:testOutput]Sending command result c1(20) = 10
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C1' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C1' on the state change queue in position 18
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 4
[PlexilExec:step][4:0] State change queue: C2 C1 
[PlexilExec:lock]Locking node C2
[PlexilExec:lock]Locking node C1
[PlexilExec:step][4:0:0] Transitioning node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 19
[PlexilExec:step][4:0:1] Transitioning node C1
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C1' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C1' on the state change queue in position 20
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:unlock]Unlocking node C1
[PlexilExec:step][4:1] State change queue: C2 C1 
[PlexilExec:lock]Locking node C2
[PlexilExec:lock]Locking node C1
[PlexilExec:step][4:1:0] Transitioning node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 21
[PlexilExec:step][4:1:1] Transitioning node C1
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C1' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:unlock]Unlocking node C1
[PlexilExec:step][4:2] State change queue: C2 
[PlexilExec:lock]Locking node C2
[PlexilExec:step][4:2:0] Transitioning node C2
[PlexilExec:handleNeedsExecution]Storing action for node 'C2' of type 'Command' to be executed.
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C2' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node C2
[Test:testOutput]Executing c2() into noId with ack (id_559[au](UNKNOWN): string)
[PlexilExec:cycle]==>End cycle 4
[PlexilExec:printPlan]
SimpleTask{
 State: (id_275[au](EXECUTING): state(EXECUTING)) (0)
 SkipCondition: (id_293[au](0): boolean)
 StartCondition: (id_295[au](1): boolean)
 EndCondition: (id_480[au](0): childrenFinished(2:3))
 InvariantCondition: (id_299[au](1): boolean)
 PreCondition: (id_301[au](1): boolean)
 PostCondition: (id_303[au](1): boolean)
 RepeatCondition: (id_305[au](0): boolean)
 AncestorInvariantCondition: (id_307[au](1): boolean)
 AncestorEndCondition: (id_309[au](0): boolean)
 ParentExecutingCondition: (id_311[au](1): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_477[iu](UNKNOWN): childrenWaitingOrFinished(0:3))
 AbortCompleteCondition: (id_315[au](UNKNOWN): boolean)
 ParentWaitingCondition: (id_317[au](0): boolean)
 ParentFinishedCondition: (id_319[au](0): boolean)
 CommandHandleReceivedCondition: (id_321[au](1): boolean)
 command_handle: (id_278[au](UNKNOWN):  command_handle)
  C1{
   State: (id_325[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_326[au](SUCCESS):  outcome)
   Command handle: (id_328[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   returnValue: (id_373[iu](10): int)
   head_priority: (id_374[au](20): int)
  }
  C2{
   State: (id_377[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_395[au](0): boolean)
   StartCondition: (id_397[au](1): boolean)
   EndCondition: (id_566[au](0): ((id_562[au](0): interruptibleCommandHandleValues((id_559[au](UNKNOWN): string))) || (id_564[au](0): ((id_560[au](0): isknown((id_559[au](UNKNOWN): string))) && (id_399[au](1): boolean)))
   InvariantCondition: (id_401[au](1): boolean)
   PreCondition: (id_403[au](1): boolean)
   PostCondition: (id_548[au](UNKNOWN): (id_551[au](UNKNOWN): ((id_380[au](UNKNOWN):  command_handle) == (id_550[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_553[iu](UNKNOWN): (id_556[iu](UNKNOWN): ((id_380[au](UNKNOWN):  command_handle) == (id_555[iu](UNKNOWN):  command_handle))))
   AncestorInvariantCondition: (id_534[au](1): (TransparentWrapper(id_530[auT]{1}((id_307[au](1): boolean)) && TransparentWrapper(id_532[auT]{1}((id_299[au](1): boolean)))
   AncestorEndCondition: (id_540[iu](UNKNOWN): (TransparentWrapper(id_536[iuT]{0}((id_309[au](0): boolean)) || TransparentWrapper(id_538[iuT]{0}((id_480[au](0): childrenFinished(2:3))))
   ParentExecutingCondition: (id_542[iu](UNKNOWN): ((id_275[au](EXECUTING): state(EXECUTING)) == (id_495[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_415[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_558[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_544[iu](UNKNOWN): ((id_275[au](EXECUTING): state(EXECUTING)) == (id_498[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_546[iu](UNKNOWN): ((id_275[au](EXECUTING): state(EXECUTING)) == (id_501[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_570[au](0): ((id_568[au](0): allCommandHandleValues((id_559[au](UNKNOWN): string))) && (id_423[au](1): boolean))
   command_handle: (id_380[au](UNKNOWN):  command_handle)
   v_priority2: (id_425[au](25): int)
  }
  C3{
   State: (id_428[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_429[au](SUCCESS):  outcome)
   Command handle: (id_431[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   mem_priority2: (id_476[au](30): int)
  }
}

[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 5
[PlexilExec:cycle]==>End cycle 5
[PlexilExec:printPlan]
SimpleTask{
 State: (id_275[au](EXECUTING): state(EXECUTING)) (0)
 SkipCondition: (id_293[au](0): boolean)
 StartCondition: (id_295[au](1): boolean)
 EndCondition: (id_480[au](0): childrenFinished(2:3))
 InvariantCondition: (id_299[au](1): boolean)
 PreCondition: (id_301[au](1): boolean)
 PostCondition: (id_303[au](1): boolean)
 RepeatCondition: (id_305[au](0): boolean)
 AncestorInvariantCondition: (id_307[au](1): boolean)
 AncestorEndCondition: (id_309[au](0): boolean)
 ParentExecutingCondition: (id_311[au](1): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_477[iu](UNKNOWN): childrenWaitingOrFinished(0:3))
 AbortCompleteCondition: (id_315[au](UNKNOWN): boolean)
 ParentWaitingCondition: (id_317[au](0): boolean)
 ParentFinishedCondition: (id_319[au](0): boolean)
 CommandHandleReceivedCondition: (id_321[au](1): boolean)
 command_handle: (id_278[au](UNKNOWN):  command_handle)
  C1{
   State: (id_325[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_326[au](SUCCESS):  outcome)
   Command handle: (id_328[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   returnValue: (id_373[iu](10): int)
   head_priority: (id_374[au](20): int)
  }
  C2{
   State: (id_377[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_395[au](0): boolean)
   StartCondition: (id_397[au](1): boolean)
   EndCondition: (id_566[au](0): ((id_562[au](0): interruptibleCommandHandleValues((id_559[au](UNKNOWN): string))) || (id_564[au](0): ((id_560[au](0): isknown((id_559[au](UNKNOWN): string))) && (id_399[au](1): boolean)))
   InvariantCondition: (id_401[au](1): boolean)
   PreCondition: (id_403[au](1): boolean)
   PostCondition: (id_548[au](UNKNOWN): (id_551[au](UNKNOWN): ((id_380[au](UNKNOWN):  command_handle) == (id_550[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_553[iu](UNKNOWN): (id_556[iu](UNKNOWN): ((id_380[au](UNKNOWN):  command_handle) == (id_555[iu](UNKNOWN):  command_handle))))
   AncestorInvariantCondition: (id_534[au](1): (TransparentWrapper(id_530[auT]{1}((id_307[au](1): boolean)) && TransparentWrapper(id_532[auT]{1}((id_299[au](1): boolean)))
   AncestorEndCondition: (id_540[iu](UNKNOWN): (TransparentWrapper(id_536[iuT]{0}((id_309[au](0): boolean)) || TransparentWrapper(id_538[iuT]{0}((id_480[au](0): childrenFinished(2:3))))
   ParentExecutingCondition: (id_542[iu](UNKNOWN): ((id_275[au](EXECUTING): state(EXECUTING)) == (id_495[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_415[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_558[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_544[iu](UNKNOWN): ((id_275[au](EXECUTING): state(EXECUTING)) == (id_498[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_546[iu](UNKNOWN): ((id_275[au](EXECUTING): state(EXECUTING)) == (id_501[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_570[au](0): ((id_568[au](0): allCommandHandleValues((id_559[au](UNKNOWN): string))) && (id_423[au](1): boolean))
   command_handle: (id_380[au](UNKNOWN):  command_handle)
   v_priority2: (id_425[au](25): int)
  }
  C3{
   State: (id_428[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_429[au](SUCCESS):  outcome)
   Command handle: (id_431[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   mem_priority2: (id_476[au](30): int)
  }
}

[Test:testOutput]Sending command ACK c2() = (string)COMMAND_SENT_TO_SYSTEM
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 22
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 6
[PlexilExec:step][6:0] State change queue: C2 
[PlexilExec:lock]Locking node C2
[PlexilExec:step][6:0:0] Transitioning node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 23
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:step][6:1] State change queue: C2 
[PlexilExec:lock]Locking node C2
[PlexilExec:step][6:1:0] Transitioning node C2
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 24
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C2' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:step][6:2] State change queue: SimpleTask 
[PlexilExec:lock]Locking node SimpleTask
[PlexilExec:step][6:2:0] Transitioning node SimpleTask
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 25
[PlexilExec:unlock]Unlocking node SimpleTask
[PlexilExec:step][6:3] State change queue: SimpleTask 
[PlexilExec:lock]Locking node SimpleTask
[PlexilExec:step][6:3:0] Transitioning node SimpleTask
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 26
[PlexilExec:unlock]Unlocking node SimpleTask
[PlexilExec:step][6:4] State change queue: SimpleTask 
[PlexilExec:lock]Locking node SimpleTask
[PlexilExec:step][6:4:0] Transitioning node SimpleTask
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'SimpleTask' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node SimpleTask
[PlexilExec:cycle]==>End cycle 6
[PlexilExec:printPlan]
SimpleTask{
 State: (id_275[au](FINISHED): state(FINISHED)) (0)
 Outcome: (id_276[au](SUCCESS):  outcome)
  C1{
   State: (id_325[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_326[au](SUCCESS):  outcome)
   Command handle: (id_328[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   returnValue: (id_373[iu](10): int)
   head_priority: (id_374[au](20): int)
  }
  C2{
   State: (id_377[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_378[au](SUCCESS):  outcome)
   Command handle: (id_380[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   v_priority2: (id_425[au](25): int)
  }
  C3{
   State: (id_428[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_429[au](SUCCESS):  outcome)
   Command handle: (id_431[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   mem_priority2: (id_476[au](30): int)
  }
}

