[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:addPlan]Added plan: 
SimpleTask{
 State: (id_271[au](INACTIVE): state(INACTIVE)) (inf)
  C1{
   State: (id_321[au](INACTIVE): state(INACTIVE)) (inf)
  }
  C2{
   State: (id_373[au](INACTIVE): state(INACTIVE)) (inf)
  }
  C3{
   State: (id_424[au](INACTIVE): state(INACTIVE)) (inf)
  }
}

[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 1
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 1
[PlexilExec:step][1:0] State change queue: SimpleTask 
[PlexilExec:lock]Locking node SimpleTask
[PlexilExec:step][1:0:0] Transitioning node SimpleTask
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 2
[PlexilExec:unlock]Unlocking node SimpleTask
[PlexilExec:step][1:1] State change queue: SimpleTask 
[PlexilExec:lock]Locking node SimpleTask
[PlexilExec:step][1:1:0] Transitioning node SimpleTask
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C1' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C1' on the state change queue in position 3
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 4
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C3' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C3' on the state change queue in position 5
[PlexilExec:handleNeedsExecution]Storing action for node 'SimpleTask' of type 'NodeList' to be executed.
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'SimpleTask' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node SimpleTask
[PlexilExec:step][1:2] State change queue: C1 C2 C3 
[PlexilExec:lock]Locking node C1
[PlexilExec:lock]Locking node C2
[PlexilExec:lock]Locking node C3
[PlexilExec:step][1:2:0] Transitioning node C1
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C1' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C1' on the state change queue in position 6
[PlexilExec:step][1:2:1] Transitioning node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 7
[PlexilExec:step][1:2:2] Transitioning node C3
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C3' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C3' on the state change queue in position 8
[PlexilExec:unlock]Unlocking node C1
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:unlock]Unlocking node C3
[PlexilExec:step][1:3] State change queue: C1 C2 C3 
[PlexilExec:lock]Locking node C1
[PlexilExec:lock]Locking node C2
[PlexilExec:lock]Locking node C3
[PlexilExec:step][1:3:0] Transitioning node C1
[PlexilExec:handleNeedsExecution]Storing action for node 'C1' of type 'Command' to be executed.
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C1' was previously eligible to transition but isn't now.
[PlexilExec:step][1:3:1] Transitioning node C2
[PlexilExec:handleNeedsExecution]Storing action for node 'C2' of type 'Command' to be executed.
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C2' was previously eligible to transition but isn't now.
[PlexilExec:step][1:3:2] Transitioning node C3
[PlexilExec:handleNeedsExecution]Storing action for node 'C3' of type 'Command' to be executed.
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C3' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node C1
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:unlock]Unlocking node C3
[Test:testOutput]Executing c1(20) into (id_369[au](-1): int) with ack (id_509[au](UNKNOWN): string)
[Test:testOutput]Permission to execute c2 has been denied by the resource arbiter.
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 9
[Test:testOutput]Executing c3() into noId with ack (id_590[au](UNKNOWN): string)
[PlexilExec:cycle]==>End cycle 1
[PlexilExec:printPlan]
SimpleTask{
 State: (id_271[au](EXECUTING): state(EXECUTING)) (0)
 SkipCondition: (id_289[au](0): boolean)
 StartCondition: (id_291[au](1): boolean)
 EndCondition: (id_476[au](0): childrenFinished(0:3))
 InvariantCondition: (id_295[au](1): boolean)
 PreCondition: (id_297[au](1): boolean)
 PostCondition: (id_299[au](1): boolean)
 RepeatCondition: (id_301[au](0): boolean)
 AncestorInvariantCondition: (id_303[au](1): boolean)
 AncestorEndCondition: (id_305[au](0): boolean)
 ParentExecutingCondition: (id_307[au](1): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_473[iu](UNKNOWN): childrenWaitingOrFinished(0:3))
 AbortCompleteCondition: (id_311[au](UNKNOWN): boolean)
 ParentWaitingCondition: (id_313[au](0): boolean)
 ParentFinishedCondition: (id_315[au](0): boolean)
 CommandHandleReceivedCondition: (id_317[au](1): boolean)
 command_handle: (id_274[au](UNKNOWN):  command_handle)
  C1{
   State: (id_321[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_339[au](0): boolean)
   StartCondition: (id_341[au](1): boolean)
   EndCondition: (id_516[au](0): ((id_512[au](0): interruptibleCommandHandleValues((id_509[au](UNKNOWN): string))) || (id_514[au](0): ((id_510[au](0): isknown((id_509[au](UNKNOWN): string))) && (id_500[au](0): ((id_502[au](10): int) == (id_369[au](-1): int)))))
   InvariantCondition: (id_345[au](1): boolean)
   PreCondition: (id_347[au](1): boolean)
   PostCondition: (id_503[au](UNKNOWN): (id_506[au](UNKNOWN): ((id_324[au](UNKNOWN):  command_handle) == (id_505[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_351[au](0): boolean)
   AncestorInvariantCondition: (id_483[au](1): (TransparentWrapper(id_479[auT]{1}((id_303[au](1): boolean)) && TransparentWrapper(id_481[auT]{1}((id_295[au](1): boolean)))
   AncestorEndCondition: (id_489[iu](UNKNOWN): (TransparentWrapper(id_485[iuT]{0}((id_305[au](0): boolean)) || TransparentWrapper(id_487[iuT]{0}((id_476[au](0): childrenFinished(0:3))))
   ParentExecutingCondition: (id_492[iu](UNKNOWN): ((id_271[au](EXECUTING): state(EXECUTING)) == (id_491[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_359[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_508[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_495[iu](UNKNOWN): ((id_271[au](EXECUTING): state(EXECUTING)) == (id_494[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_498[iu](UNKNOWN): ((id_271[au](EXECUTING): state(EXECUTING)) == (id_497[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_520[au](0): ((id_518[au](0): allCommandHandleValues((id_509[au](UNKNOWN): string))) && (id_367[au](1): boolean))
   command_handle: (id_324[au](UNKNOWN):  command_handle)
   returnValue: (id_369[au](-1): int)
   head_priority: (id_370[au](20): int)
  }
  C2{
   State: (id_373[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_391[au](0): boolean)
   StartCondition: (id_393[au](1): boolean)
   EndCondition: (id_557[au](1): ((id_553[au](1): interruptibleCommandHandleValues((id_550[au](COMMAND_DENIED): string))) || (id_555[au](1): ((id_551[au](1): isknown((id_550[au](COMMAND_DENIED): string))) && (id_395[au](1): boolean)))
   InvariantCondition: (id_397[au](1): boolean)
   PreCondition: (id_399[au](1): boolean)
   PostCondition: (id_544[au](0): (id_547[au](0): ((id_376[au](COMMAND_DENIED):  command_handle) == (id_546[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_403[au](0): boolean)
   AncestorInvariantCondition: (id_530[au](1): (TransparentWrapper(id_526[auT]{1}((id_303[au](1): boolean)) && TransparentWrapper(id_528[auT]{1}((id_295[au](1): boolean)))
   AncestorEndCondition: (id_536[iu](UNKNOWN): (TransparentWrapper(id_532[iuT]{0}((id_305[au](0): boolean)) || TransparentWrapper(id_534[iuT]{0}((id_476[au](0): childrenFinished(0:3))))
   ParentExecutingCondition: (id_538[iu](UNKNOWN): ((id_271[au](EXECUTING): state(EXECUTING)) == (id_491[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_411[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_549[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_540[iu](UNKNOWN): ((id_271[au](EXECUTING): state(EXECUTING)) == (id_494[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_542[iu](UNKNOWN): ((id_271[au](EXECUTING): state(EXECUTING)) == (id_497[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_561[au](1): ((id_559[au](1): allCommandHandleValues((id_550[au](COMMAND_DENIED): string))) && (id_419[au](1): boolean))
   command_handle: (id_376[au](COMMAND_DENIED):  command_handle)
   v_priority2: (id_421[au](25): int)
  }
  C3{
   State: (id_424[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_442[au](0): boolean)
   StartCondition: (id_444[au](1): boolean)
   EndCondition: (id_597[au](0): ((id_593[au](0): interruptibleCommandHandleValues((id_590[au](UNKNOWN): string))) || (id_595[au](0): ((id_591[au](0): isknown((id_590[au](UNKNOWN): string))) && (id_446[au](1): boolean)))
   InvariantCondition: (id_448[au](1): boolean)
   PreCondition: (id_450[au](1): boolean)
   PostCondition: (id_584[au](UNKNOWN): (id_587[au](UNKNOWN): ((id_427[au](UNKNOWN):  command_handle) == (id_586[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_454[au](0): boolean)
   AncestorInvariantCondition: (id_570[au](1): (TransparentWrapper(id_566[auT]{1}((id_303[au](1): boolean)) && TransparentWrapper(id_568[auT]{1}((id_295[au](1): boolean)))
   AncestorEndCondition: (id_576[iu](UNKNOWN): (TransparentWrapper(id_572[iuT]{0}((id_305[au](0): boolean)) || TransparentWrapper(id_574[iuT]{0}((id_476[au](0): childrenFinished(0:3))))
   ParentExecutingCondition: (id_578[iu](UNKNOWN): ((id_271[au](EXECUTING): state(EXECUTING)) == (id_491[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_462[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_589[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_580[iu](UNKNOWN): ((id_271[au](EXECUTING): state(EXECUTING)) == (id_494[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_582[iu](UNKNOWN): ((id_271[au](EXECUTING): state(EXECUTING)) == (id_497[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_601[au](0): ((id_599[au](0): allCommandHandleValues((id_590[au](UNKNOWN): string))) && (id_470[au](1): boolean))
   command_handle: (id_427[au](UNKNOWN):  command_handle)
   mem_priority2: (id_472[au](30): int)
  }
}

[Test:testOutput]Sending command ACK c1(20) = (string)COMMAND_SENT_TO_SYSTEM
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 2
[PlexilExec:step][2:0] State change queue: C2 
[PlexilExec:lock]Locking node C2
[PlexilExec:step][2:0:0] Transitioning node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C2' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C2' on the state change queue in position 10
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:step][2:1] State change queue: C2 
[PlexilExec:lock]Locking node C2
[PlexilExec:step][2:1:0] Transitioning node C2
[PlexilExec:handleConditionsChanged]Node C2 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C2' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node C2
[PlexilExec:cycle]==>End cycle 2
[PlexilExec:printPlan]
SimpleTask{
 State: (id_271[au](EXECUTING): state(EXECUTING)) (0)
 SkipCondition: (id_289[au](0): boolean)
 StartCondition: (id_291[au](1): boolean)
 EndCondition: (id_476[au](0): childrenFinished(1:3))
 InvariantCondition: (id_295[au](1): boolean)
 PreCondition: (id_297[au](1): boolean)
 PostCondition: (id_299[au](1): boolean)
 RepeatCondition: (id_301[au](0): boolean)
 AncestorInvariantCondition: (id_303[au](1): boolean)
 AncestorEndCondition: (id_305[au](0): boolean)
 ParentExecutingCondition: (id_307[au](1): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_473[iu](UNKNOWN): childrenWaitingOrFinished(0:3))
 AbortCompleteCondition: (id_311[au](UNKNOWN): boolean)
 ParentWaitingCondition: (id_313[au](0): boolean)
 ParentFinishedCondition: (id_315[au](0): boolean)
 CommandHandleReceivedCondition: (id_317[au](1): boolean)
 command_handle: (id_274[au](UNKNOWN):  command_handle)
  C1{
   State: (id_321[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_339[au](0): boolean)
   StartCondition: (id_341[au](1): boolean)
   EndCondition: (id_516[au](0): ((id_512[au](0): interruptibleCommandHandleValues((id_509[au](COMMAND_SENT_TO_SYSTEM): string))) || (id_514[au](0): ((id_510[au](1): isknown((id_509[au](COMMAND_SENT_TO_SYSTEM): string))) && (id_500[au](0): ((id_502[au](10): int) == (id_369[au](-1): int)))))
   InvariantCondition: (id_345[au](1): boolean)
   PreCondition: (id_347[au](1): boolean)
   PostCondition: (id_503[au](1): (id_506[au](1): ((id_324[au](COMMAND_SENT_TO_SYSTEM):  command_handle) == (id_505[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_351[au](0): boolean)
   AncestorInvariantCondition: (id_483[au](1): (TransparentWrapper(id_479[auT]{1}((id_303[au](1): boolean)) && TransparentWrapper(id_481[auT]{1}((id_295[au](1): boolean)))
   AncestorEndCondition: (id_489[iu](UNKNOWN): (TransparentWrapper(id_485[iuT]{0}((id_305[au](0): boolean)) || TransparentWrapper(id_487[iuT]{0}((id_476[au](0): childrenFinished(1:3))))
   ParentExecutingCondition: (id_492[iu](UNKNOWN): ((id_271[au](EXECUTING): state(EXECUTING)) == (id_491[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_359[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_508[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_495[iu](UNKNOWN): ((id_271[au](EXECUTING): state(EXECUTING)) == (id_494[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_498[iu](UNKNOWN): ((id_271[au](EXECUTING): state(EXECUTING)) == (id_497[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_520[au](1): ((id_518[au](1): allCommandHandleValues((id_509[au](COMMAND_SENT_TO_SYSTEM): string))) && (id_367[au](1): boolean))
   command_handle: (id_324[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   returnValue: (id_369[au](-1): int)
   head_priority: (id_370[au](20): int)
  }
  C2{
   State: (id_373[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_374[au](FAILURE):  outcome)
   Failure type: (id_375[au](POST_CONDITION_FAILED):  failure)
   Command handle: (id_376[au](COMMAND_DENIED):  command_handle)
   v_priority2: (id_421[au](25): int)
  }
  C3{
   State: (id_424[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_442[au](0): boolean)
   StartCondition: (id_444[au](1): boolean)
   EndCondition: (id_597[au](0): ((id_593[au](0): interruptibleCommandHandleValues((id_590[au](UNKNOWN): string))) || (id_595[au](0): ((id_591[au](0): isknown((id_590[au](UNKNOWN): string))) && (id_446[au](1): boolean)))
   InvariantCondition: (id_448[au](1): boolean)
   PreCondition: (id_450[au](1): boolean)
   PostCondition: (id_584[au](UNKNOWN): (id_587[au](UNKNOWN): ((id_427[au](UNKNOWN):  command_handle) == (id_586[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_454[au](0): boolean)
   AncestorInvariantCondition: (id_570[au](1): (TransparentWrapper(id_566[auT]{1}((id_303[au](1): boolean)) && TransparentWrapper(id_568[auT]{1}((id_295[au](1): boolean)))
   AncestorEndCondition: (id_576[iu](UNKNOWN): (TransparentWrapper(id_572[iuT]{0}((id_305[au](0): boolean)) || TransparentWrapper(id_574[iuT]{0}((id_476[au](0): childrenFinished(1:3))))
   ParentExecutingCondition: (id_578[iu](UNKNOWN): ((id_271[au](EXECUTING): state(EXECUTING)) == (id_491[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_462[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_589[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_580[iu](UNKNOWN): ((id_271[au](EXECUTING): state(EXECUTING)) == (id_494[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_582[iu](UNKNOWN): ((id_271[au](EXECUTING): state(EXECUTING)) == (id_497[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_601[au](0): ((id_599[au](0): allCommandHandleValues((id_590[au](UNKNOWN): string))) && (id_470[au](1): boolean))
   command_handle: (id_427[au](UNKNOWN):  command_handle)
   mem_priority2: (id_472[au](30): int)
  }
}

[Test:testOutput]Sending command ACK c3() = (string)COMMAND_SENT_TO_SYSTEM
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C3' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C3' on the state change queue in position 11
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 3
[PlexilExec:step][3:0] State change queue: C3 
[PlexilExec:lock]Locking node C3
[PlexilExec:step][3:0:0] Transitioning node C3
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C3' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C3' on the state change queue in position 12
[PlexilExec:unlock]Unlocking node C3
[PlexilExec:step][3:1] State change queue: C3 
[PlexilExec:lock]Locking node C3
[PlexilExec:step][3:1:0] Transitioning node C3
[PlexilExec:handleConditionsChanged]Node C3 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C3' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node C3
[PlexilExec:cycle]==>End cycle 3
[PlexilExec:printPlan]
SimpleTask{
 State: (id_271[au](EXECUTING): state(EXECUTING)) (0)
 SkipCondition: (id_289[au](0): boolean)
 StartCondition: (id_291[au](1): boolean)
 EndCondition: (id_476[au](0): childrenFinished(2:3))
 InvariantCondition: (id_295[au](1): boolean)
 PreCondition: (id_297[au](1): boolean)
 PostCondition: (id_299[au](1): boolean)
 RepeatCondition: (id_301[au](0): boolean)
 AncestorInvariantCondition: (id_303[au](1): boolean)
 AncestorEndCondition: (id_305[au](0): boolean)
 ParentExecutingCondition: (id_307[au](1): boolean)
 AllChildrenWaitingOrFinishedCondition: (id_473[iu](UNKNOWN): childrenWaitingOrFinished(0:3))
 AbortCompleteCondition: (id_311[au](UNKNOWN): boolean)
 ParentWaitingCondition: (id_313[au](0): boolean)
 ParentFinishedCondition: (id_315[au](0): boolean)
 CommandHandleReceivedCondition: (id_317[au](1): boolean)
 command_handle: (id_274[au](UNKNOWN):  command_handle)
  C1{
   State: (id_321[au](EXECUTING): state(EXECUTING)) (0)
   SkipCondition: (id_339[au](0): boolean)
   StartCondition: (id_341[au](1): boolean)
   EndCondition: (id_516[au](0): ((id_512[au](0): interruptibleCommandHandleValues((id_509[au](COMMAND_SENT_TO_SYSTEM): string))) || (id_514[au](0): ((id_510[au](1): isknown((id_509[au](COMMAND_SENT_TO_SYSTEM): string))) && (id_500[au](0): ((id_502[au](10): int) == (id_369[au](-1): int)))))
   InvariantCondition: (id_345[au](1): boolean)
   PreCondition: (id_347[au](1): boolean)
   PostCondition: (id_503[au](1): (id_506[au](1): ((id_324[au](COMMAND_SENT_TO_SYSTEM):  command_handle) == (id_505[au](COMMAND_SENT_TO_SYSTEM):  command_handle))))
   RepeatCondition: (id_351[au](0): boolean)
   AncestorInvariantCondition: (id_483[au](1): (TransparentWrapper(id_479[auT]{1}((id_303[au](1): boolean)) && TransparentWrapper(id_481[auT]{1}((id_295[au](1): boolean)))
   AncestorEndCondition: (id_489[iu](UNKNOWN): (TransparentWrapper(id_485[iuT]{0}((id_305[au](0): boolean)) || TransparentWrapper(id_487[iuT]{0}((id_476[au](0): childrenFinished(2:3))))
   ParentExecutingCondition: (id_492[iu](UNKNOWN): ((id_271[au](EXECUTING): state(EXECUTING)) == (id_491[au](EXECUTING): state(EXECUTING))))
   AllChildrenWaitingOrFinishedCondition: (id_359[au](UNKNOWN): boolean)
   AbortCompleteCondition: (id_508[iu](UNKNOWN): boolean)
   ParentWaitingCondition: (id_495[iu](UNKNOWN): ((id_271[au](EXECUTING): state(EXECUTING)) == (id_494[au](WAITING): state(WAITING))))
   ParentFinishedCondition: (id_498[iu](UNKNOWN): ((id_271[au](EXECUTING): state(EXECUTING)) == (id_497[au](FINISHED): state(FINISHED))))
   CommandHandleReceivedCondition: (id_520[au](1): ((id_518[au](1): allCommandHandleValues((id_509[au](COMMAND_SENT_TO_SYSTEM): string))) && (id_367[au](1): boolean))
   command_handle: (id_324[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   returnValue: (id_369[au](-1): int)
   head_priority: (id_370[au](20): int)
  }
  C2{
   State: (id_373[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_374[au](FAILURE):  outcome)
   Failure type: (id_375[au](POST_CONDITION_FAILED):  failure)
   Command handle: (id_376[au](COMMAND_DENIED):  command_handle)
   v_priority2: (id_421[au](25): int)
  }
  C3{
   State: (id_424[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_425[au](SUCCESS):  outcome)
   Command handle: (id_427[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   mem_priority2: (id_472[au](30): int)
  }
}

[Test:testOutput]Sending command result c1(20) = 10
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C1' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C1' on the state change queue in position 13
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 4
[PlexilExec:step][4:0] State change queue: C1 
[PlexilExec:lock]Locking node C1
[PlexilExec:step][4:0:0] Transitioning node C1
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'C1' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'C1' on the state change queue in position 14
[PlexilExec:unlock]Unlocking node C1
[PlexilExec:step][4:1] State change queue: C1 
[PlexilExec:lock]Locking node C1
[PlexilExec:step][4:1:0] Transitioning node C1
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 15
[PlexilExec:handleConditionsChanged]Node C1 had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'C1' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node C1
[PlexilExec:step][4:2] State change queue: SimpleTask 
[PlexilExec:lock]Locking node SimpleTask
[PlexilExec:step][4:2:0] Transitioning node SimpleTask
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 16
[PlexilExec:unlock]Unlocking node SimpleTask
[PlexilExec:step][4:3] State change queue: SimpleTask 
[PlexilExec:lock]Locking node SimpleTask
[PlexilExec:step][4:3:0] Transitioning node SimpleTask
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Considering node 'SimpleTask' for state transition.
[PlexilExec:handleConditionsChanged]Placing node 'SimpleTask' on the state change queue in position 17
[PlexilExec:unlock]Unlocking node SimpleTask
[PlexilExec:step][4:4] State change queue: SimpleTask 
[PlexilExec:lock]Locking node SimpleTask
[PlexilExec:step][4:4:0] Transitioning node SimpleTask
[PlexilExec:handleConditionsChanged]Node SimpleTask had a relevant condition change.
[PlexilExec:handleConditionsChanged]Node 'SimpleTask' was previously eligible to transition but isn't now.
[PlexilExec:unlock]Unlocking node SimpleTask
[PlexilExec:cycle]==>End cycle 4
[PlexilExec:printPlan]
SimpleTask{
 State: (id_271[au](FINISHED): state(FINISHED)) (0)
 Outcome: (id_272[au](SUCCESS):  outcome)
  C1{
   State: (id_321[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_322[au](SUCCESS):  outcome)
   Command handle: (id_324[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   returnValue: (id_369[iu](10): int)
   head_priority: (id_370[au](20): int)
  }
  C2{
   State: (id_373[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_374[au](FAILURE):  outcome)
   Failure type: (id_375[au](POST_CONDITION_FAILED):  failure)
   Command handle: (id_376[au](COMMAND_DENIED):  command_handle)
   v_priority2: (id_421[au](25): int)
  }
  C3{
   State: (id_424[au](FINISHED): state(FINISHED)) (0)
   Outcome: (id_425[au](SUCCESS):  outcome)
   Command handle: (id_427[au](COMMAND_SENT_TO_SYSTEM):  command_handle)
   mem_priority2: (id_472[au](30): int)
  }
}

