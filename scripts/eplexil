#! /bin/sh -e

# Copyright (c) 2006-2022, Universities Space Research Association (USRA).
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the Universities Space Research Association nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY USRA ``AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL USRA BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
# USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

if [ -z "$1" ]
then
    echo 'Usage: eplexil input-file [ output_file ]'
    exit 2
fi

# Check environment

if [ -z "$PLEXIL_HOME" ]
then
    # Attempt to guess location of this script (but don't try too hard)
    PLEXILC_SCRIPT_DIR="$( cd "$(dirname "$(command -v "$0")")" && pwd -P )"
    if [ "scripts" = "$(basename "$PLEXILC_SCRIPT_DIR")" ]
    then
        export PLEXIL_HOME="$(dirname "$PLEXILC_SCRIPT_DIR")"
    fi
    unset PLEXILC_SCRIPT_DIR
fi

if [ -z "$PLEXIL_HOME" ]
then
    echo 'Error: Please set environment variable PLEXIL_HOME' >&2
    echo "to the full pathname of your 'plexil' or 'trunk' directory." >&2
    exit 1
fi

if [ -n "$JAVA_HOME" ]
then
    JAVA="$JAVA_HOME"/bin/java
    if [ ! -e "$JAVA" ]
    then
        echo "Error: no Java runtime found at $JAVA_HOME" >&2
        echo 'Please set JAVA_HOME to an existing Java runtime,' >&2
        echo 'or install a Java runtime environment.' >&2
        exit 1
    fi
else
    JAVA="$(command -v java)"
    if [ -z "$JAVA" ]
    then
        echo "Error: no Java runtime in path $PATH" >&2
        echo 'Either set PATH to include a Java runtime,' >&2
        echo 'set JAVA_HOME to a Java runtime,' >&2
        echo 'or install a Java runtime environment.' >&2
        exit 1
    fi
fi

input_file="$1"
if [ -n "$2" ]
then
    output_file="$2"
else
    output_file="$(echo "$1" | sed -e 's|.epx$||').plx"
fi

JARS_DIR="$PLEXIL_HOME/jars"
SCHEMA_DIR="$PLEXIL_HOME/schema"

#
# Options to pass to saxon
# See: https://www.saxonica.com/html/documentation9.9/using-xsl/commandline/
#
#  -config:<file>        - load configuration file
#  -dtd:<on|off|recover> - on = error if input file lacks DTD
#                          off = no checking for DTD
#                          recover = warn if DTD missing
#  -T                    - enable tracing
#  -Tlevel:<level>       - tracing level: none, low, normal, or high
#  -traceout:<file>      - direct tracing output to the named file
#  -TP:<file>            - Write profiling info to an HTML file 
#
OPTIONS='-dtd:off'

exec "$JAVA" -jar "$JARS_DIR"/saxon9he.jar \
     -xsl:"$SCHEMA_DIR"/epx-translator/translate-plexil.xsl \
     -config:"$SCHEMA_DIR"/saxon-config.xml $OPTIONS \
     -s:"$input_file" -o:"$output_file"
