#! /bin/sh

# Copyright (c) 2006-2020, Universities Space Research Association (USRA).
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the Universities Space Research Association nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY USRA ``AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL USRA BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
# USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Run this script in an empty temp directory

# Exit on any error
set -e

usage()
{
    echo "usage: $0 release-id [svn-rev]"
    echo "Best to run this in an empty temporary directory"
}

if [ -z "$1" ]
then
    usage
    exit 1
fi

relid=$1

rev='HEAD'
if [ -n "$2" ]
then
    rev="$2"
fi

GPERF="$(which gperf)"
if [ -z "$GPERF" ]
then
    echo "Error: Can't find the 'gperf' program. Exiting."
    exit 1
fi

set -e # exit on error

svn export -r "$rev" https://svn.code.sf.net/p/plexil/code/branches/plexil-4 "$relid" > /dev/null
cd "$relid"
export PLEXIL_HOME="$PWD"

echo "Installing autotools files and building configure script"
cd "$relid"
PLEXIL_HOME="$PWD" make src/configure

# Prebuild expression parser core
# NOTE: this must track the contents of src/xml-parser/Makefile.am
"$GPERF" -m 8 --output-file=src/xml-parser/ExpressionMap.hh src/xml-parser/ExpressionMap.gperf

# Build Java apps users will need (and clean up build leftovers)
make plexil-compiler
rm -rf compilers/plexil/classes compilers/plexil/generated

make plexilscript
rm -rf compilers/plexilscript/classes compilers/plexilscript/generated

make pv
rm -rf viewers/pv/build

make checker
rm -rf checker/build

cd ..
echo "Generating tar file ${relid}.tar.bz2"
tar cjf "${relid}.tar.bz2" "$relid"
rm -rf "$relid"

echo "Deleting temporary directory $relid"
rm -rf "$relid"

echo "Done"

exit 0
