#! /bin/sh -e

# Copyright (c) 2006-2021, Universities Space Research Association (USRA).
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the Universities Space Research Association nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY USRA ``AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL USRA BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
# USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

DEFAULT_BRANCH='develop'

usage()
{
    echo <<EOF
Usage: $(basename "$0") release-id [branch-or-tag]
 Create a tarball of the Plexil source tree with the GNU autotools initialized
 and Java subsystems prebuilt.
Arguments:
  release-id      Top level directory name for the resulting source tree;
                   also used as the basename for the tarball.
  branch-or-tag   (Optional) Git branch or tag name;
                   defaults to "$DEFAULT_BRANCH"
EOF
}

if [ -z "$1" ]
then
    usage
    exit 2
fi

RELEASE_ID="$1"
BRANCH="${2:-$DEFAULT_BRANCH}"

if ! AUTORECONF="$(command -v autoreconf)"
then
    echo "$(basename "$0"): Error: can't find the 'autoreconf' program." >&2
    exit 1
fi

if ! GPERF="$(command -v gperf)"
then
    echo "$(basename "$0"): Error: can't find the 'gperf' program." >&2
    exit 1
fi

if ! TEMPDIR="$(mktemp -d -t plexil_export)"
then
    echo "$(basename "$0"): Error: 'mktemp' failed." >&2
    exit 1
fi

WD="$(pwd -P)"

# TEMP DEBUG
echo "Using working directory $TEMPDIR"

cd "$TEMPDIR"
mkdir "$RELEASE_ID"
echo "Cloning PLEXIL"
git clone --depth 1 -b "$BRANCH" -- https://git.code.sf.net/p/plexil/git plexil-git
echo "Exporting PLEXIL from clone"
cd plexil-git
git archive --format=tar HEAD | tar -x -f - -C "../$RELEASE_ID"

cd "../$RELEASE_ID"
echo "Installing autotools files and building configure script"
export PLEXIL_HOME="$(pwd -P)" # just in case
make src/configure

echo "Making XML parser expression map"
# Prebuild expression parser core
# NOTE: this must track the contents of src/xml-parser/Makefile.am
"$GPERF" -m 8 --output-file=src/xml-parser/ExpressionMap.hh src/xml-parser/ExpressionMap.gperf

# Build Java apps users will need (and clean up build leftovers)
echo "Building Java applications"
make plexil-compiler
rm -rf compilers/plexil/classes compilers/plexil/generated

make plexilscript
rm -rf compilers/plexilscript/classes compilers/plexilscript/generated

make pv
rm -rf viewers/pv/build

make checker
rm -rf checker/build

cd ..
echo "Generating tar file ${WD}/${RELEASE_ID}.tar.gz"
tar czf "${WD}/${RELEASE_ID}.tar.gz" "$RELEASE_ID"

cd "$WD"
echo "Deleting temporary directory $TEMPDIR"
rm -rf "$TEMPDIR"

echo "Complete."

exit 0
