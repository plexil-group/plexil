#! /bin/sh -e

# Copyright (c) 2006-2022, Universities Space Research Association (USRA).
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the Universities Space Research Association nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY USRA ``AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL USRA BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
# USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

usage()
{
    cat <<EOF
Usage: $(basename "$0") release-id [tree-ish]
 Writes a distribution tar file for PLEXIL to
 <release-id>.tar.bz2 in the working directory.

 [tree-ish] defaults to HEAD.
 See 'git help' for more information.

*** Must be run from the root directory of a Plexil git clone. ***
EOF
}

if [ -z "$1" ]
then
    usage >&2 
    exit 2
elif [ "$1" = '-h' ] || [ "$1" = '-help' ] || [ "$1" = '--help' ]
then
    usage
    exit 0
fi

RELID="$1"
rev='HEAD'
if [ -n "$2" ]
then
    rev="$2"
fi

# $1 is the name of a command required for the operation
find_command()
{
    if ! command -v "$1" > /dev/null
    then
        echo "$(basename "$0"): Required program \"$1\" not found in PATH" >&2
        exit 1
    fi
}

# Commands required for the task which are not installed by default on some platforms
find_command ant
find_command autoreconf
find_command awk
find_command git
find_command gperf
find_command javac

# TEMP DEBUG
echo 'Found all commands'

STARTDIR="$(pwd -P)"

# N.B.: -t option is deprecated for GNU coreutils 'mktemp'
if ! WORKDIR="$(mktemp -d -t "${RELID}_XXXXXX")"
then
    echo "$(basename "$0"): 'mktemp' failed. Aborting." >&2
    exit 1
fi

# Get absolute directory path
WORKDIR="$(cd "$WORKDIR" && pwd -P)"
echo "Exporting to temporary directory $WORKDIR"
git archive --format=tar --prefix="$RELID/" "$rev" | ( cd "$WORKDIR" && tar xf - )
git submodule foreach "git archive --format=tar --prefix=\"$RELID/\$displaypath/\" \"\$sha1\" | ( cd \"$WORKDIR\" && tar xf - )"

cd "$WORKDIR/$RELID"
PLEXIL_HOME="$(pwd -P)"
export PLEXIL_HOME

echo 'Installing autotools files and building configure script'
make src/configure

echo "Making XML parser expression map"
# Prebuild expression parser core
# NOTE: this command line must track what is in src/xml-parser/Makefile.am
# and src/xml-parser/CMakeLists.txt
# (which suggests the gperf command should be wrapped in a script)
echo 'Generating XML parser perfect hash function'
gperf -m 8 --output-file=src/xml-parser/ExpressionMap.hh src/xml-parser/ExpressionMap.gperf

# Build Java apps users will need (and clean up build leftovers)
echo 'Bulding Java applications'
( cd compilers/plexil && ant install && ant clean )
( cd compilers/plexilscript && ant install && ant clean )
( cd viewers/pv && ant jar && ant mostlyclean )
( cd checker && ant jar && ant mostlyclean )

# Do any additional cleanup here

cd ..
echo "Writing tar file to ${STARTDIR}/${RELID}.tar.bz2"
tar cjf "${STARTDIR}/${RELID}.tar.bz2" "$RELID"

cd "$STARTDIR"
echo "Deleting $WORKDIR"
rm -rf "$WORKDIR"

echo 'Done.'
