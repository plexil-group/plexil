#!/bin/sh
# Checks for the build requirements (java, gcc) and runs them to check that the
# correct versions are in the path.

# Copyright (c) 2006-2012, Universities Space Research Association (USRA).
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the Universities Space Research Association nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY USRA ``AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL USRA BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
# USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

BADOSTYPE=1
GCCVERSTR="Minimum gcc version required is 3.3.3"
MINGCC_I=3
MINGCC_J=3
MINGCC_K=3
BADGCC=0
JAVAVERSTR="Minimum Java version required is 1.5"
MINJAVA_I=1
MINJAVA_J=5
BADJAVA=0
BADENV=0
MYOSTYPE=""

# Some recent Linux distros don't provide this variable by default
if [ -z "$OSTYPE" ]
then
    OSTYPE=`uname -o`
fi

#Treat all OSTYPE variants for linux as 'linux'
# linux-gnu, gnu-linux, linux, Linux, and I think I once encountered rh-linux 
if [ ! -z `echo $OSTYPE | grep -i linux` ]
then 
   MYOSTYPE=linux
elif [ ! -z `echo $OSTYPE | grep -i darwin` ]
then
   MYOSTYPE=darwin
else
   MYOSTYPE=$OSTYPE
fi

#Check OS type set to a known OS
if [ "$MYOSTYPE" = darwin ]
then
  BADOSTYPE=0
elif [ "$MYOSTYPE" = linux ]
then
  BADOSTYPE=0
fi

if [ $BADOSTYPE -eq 1 ]
then
 echo " [PROBLEM!] Unknown OSTYPE $MYOSTYPE"
 echo "            Known values are darwin and linux." 
else 
 echo "  OSTYPE is set to $MYOSTYPE"
fi

echo "Checking for required software versions:"


#Check for minimum gcc version
GCCVER=`gcc -v 2>&1 | egrep 'gcc version [0-9]\.[0-9]+' | cut -d" " -f3`
if [ -n "$GCCVER" ]
then
  i=`echo $GCCVER | cut -d. -f1`
  j=`echo $GCCVER | cut -d. -f2`
  k=`echo $GCCVER | cut -d. -f3`
# ignore version info after the "_" as in 3.3.3_01
  k=`echo $k | cut -d_ -f1`
  if [ $i -lt $MINGCC_I ]
  then 
    BADGCC=1 
  else
    if [ $i -le $MINGCC_I -a $j -lt $MINGCC_J ]
    then
      BADGCC=1 
    else
      if [ $MYOSTYPE != darwin ]
      then
        if [ $i -le $MINGCC_I -a $j -le $MINGCC_J -a $k -lt $MINGCC_K ]
        then
          BADGCC=1 
        fi
      fi
    fi
  fi
  if [ $BADGCC -eq 1 ]
  then
    echo "  gcc version found is too old for build: version " $GCCVER 
    echo " " $GCCVERSTR
  fi
else
  BADGCC=1 
  echo "Did not find any version of gcc in search path"
fi
if [ $BADGCC -eq 0 ]
then
  echo "  Found gcc version $GCCVER"
fi

#Check for minimum Java version
JAVAVER=`java -version 2>&1 | egrep 'java version .[0-9]\.[0-9]' | cut -d"\"" -f2`
if [ -n "$JAVAVER" ]
then
  i=`echo $JAVAVER | cut -d. -f1`
  j=`echo $JAVAVER | cut -d. -f2`
# ignore version info after the "_" as in 1.4.2_05
  k=`echo $k | cut -d_ -f1`
  if [ $i -lt $MINJAVA_I ]
  then 
    BADJAVA=1 
  else
    if [ $i -le $MINJAVA_I -a $j -lt $MINJAVA_J ]
    then
      BADJAVA=1    
    fi
  fi
  if [ $BADJAVA -eq 1 ]
  then
    echo "  Java version found is too old for build: version " $JAVAVER 
    echo " " $JAVAVERSTR
  fi
else
  BADJAVA=1 
  echo "Did not find any version of java in search path"
fi

if [ $BADJAVA -eq 0 ]
then
  echo "  Found java version $JAVAVER"
fi

if [ $BADGCC -eq 1 ]
then
  echo "Your path to gcc may be set wrong."
  if [ $MYOSTYPE = linux ]
  then
      echo "Use: find /usr -name gcc-3.3.3"
      echo "to help locate the required gcc executable."
  fi
fi


if [ $BADJAVA -eq 1 ]
then
  echo "Your path to Java may be set wrong."
  if [ $MYOSTYPE = linux ]
  then
      echo "Use: find /usr -name 'jdk1.*'"
      echo "to help locate the required gcc executable."
  fi
fi

if [ $BADGCC -eq 1 -o $BADJAVA -eq 1 ]
then
  BADENV=1
else
  echo "GCC and Java versions look good."
fi

echo "Checking for PLEXIL_HOME environment variable:"

if [ -z "$PLEXIL_HOME" ]
then
  echo Error: Please set environment variable PLEXIL_HOME
  echo to the full pathname of your 'plexil' or 'trunk' directory.
  BADENV=1
fi

if [ $BADENV -eq 1 ]
then
  echo "FAILURE.  Environment variables are not set correctly to build PLEXIL."
  echo "See error messages above."
  exit 1
else
  echo "SUCCESS.  Environment is satisfactory.  Type 'make' to build PLEXIL."
  exit 0
fi
