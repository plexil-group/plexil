#!/bin/sh

# Copyright (c) 2006-2020, Universities Space Research Association (USRA).
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the Universities Space Research Association nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY USRA ``AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL USRA BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
# USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Requires bash due to use of PIPESTATUS environment variable

# Generate a .ple (PLEXIL source) file from a .plp file (file containing PLEXIL
# source plus any C preprocessor macros).  Generates the target file in the same
# directory as the source file, overwriting any existing file.

# NOTE: Uses the C preprocessor to realize macros within PLEXIL.  This is a
# crude, though effective, approach that has been used on several prior PLEXIL
# projects.  One limitation is that included files must have a .h extension.

usage()
{
    echo 'Usage: plexilpp [options...] input-file'
    echo 'Options include:'
    echo '  -o file  Name of output file'
    echo '            (default: input-file with .plp replaced by .ple)'
    echo '  -I dir   Include file directory'
}

CPP="cc -E -x c -nostdinc"

if [ $# -lt 1 ]
then
    usage
    exit 1
fi

# Process arguments
while ( echo "$1" | grep -q -e '^-.*' )
do
    case "$1" in
        '-o' )
            output_file="$2"
            shift 2
            ;;
        '-I' )
            pp_args="$pp_args $1 $2"
            shift 2
            ;;
        * )
            echo "$0: Unrecognized option $1"
            usage
            exit 1
            ;;
    esac
done

input_file="$1"

if [ -z "$output_file" ]
then
    output_file="$(dirname "$input_file")/$(basename "$input_file" .plp).ple"
fi

shift
printf '// Generated by plexilpp -- do not edit!\n' > "$output_file"

temp=$(mktemp)
# Record output status of $CPP
( $CPP $pp_args "$input_file" "$@" ; echo $? >$temp) | grep -v "^#" >> "$output_file"
if [ "$(cat <$temp)" != '0' ]
then
    echo "Deleting output file $output_file"
    rm "$output_file"
    exit 1
fi
rm -f $temp
exit 0
